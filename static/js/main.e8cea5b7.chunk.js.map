{"version":3,"sources":["util/analytics.ts","datasource/data_source.ts","changelog.tsx","util/error.ts","util/date_util.ts","util/gedcom_util.ts","util/age_util.ts","details/translated-tag.tsx","details/wrapped-image.tsx","details/multiline-text.tsx","details/event-extras.tsx","details/events.tsx","details/details.tsx","datasource/load_data.ts","datasource/embedded.ts","util/error_i18n.ts","topola.jpg","util/media.ts","intro.tsx","menu/menu_item.tsx","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","menu/top_bar.tsx","menu/wikitree_menu.tsx","config.tsx","chart.tsx","datasource/wikitree.ts","app.tsx","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","DataSourceEnum","LAST_SEEN_VERSION_KEY","getChangelog","maxVersions","seenVersion","a","seenVersionDate","Date","parse","slice","changes","process","split","map","notes","date","trim","filter","release","join","unified","use","remarkParse","remarkRehype","rehypeStringify","parsedChanges","String","updateSeenVersion","localStorage","setItem","Changelog","useState","open","setOpen","changelog","setChangelog","useEffect","getItem","Modal","centered","Header","id","defaultMessage","Content","className","dangerouslySetInnerHTML","__html","href","Actions","Button","primary","onClick","TopolaError","code","message","args","Error","DATE_QUALIFIERS","Map","formatDate","intl","hasDay","undefined","day","hasMonth","month","hasYear","year","text","dateObject","toDateObject","formatOptions","formatDateQualifier","qualifier","Intl","DateTimeFormat","locale","format","dateElement","lowerCaseQualifier","toLowerCase","formatMessage","get","formatDateOrRange","dateOrRange","dateRange","fromDate","from","toDate","to","translatedFromDate","translatedToDate","formatDateRage","compareTopolaDates","date1","date2","compareDates","firstDateOrRange","secondDateOrRange","isValidDateOrRange","isDateRangeClosed","range","pointerToId","pointer","substring","length","idToIndiMap","indis","forEach","indi","set","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","dereference","getterFunction","dereferenced","getData","result","tree","subentry","last","push","normalizeGedcom","IMAGE_EXTENSIONS","isImageFile","fileName","lowerName","some","ext","endsWith","filterImages","images","newImages","image","url","match","has","title","startsWith","filterImage","getSoftware","sour","name","getFileName","fileEntry","fileTitle","fileExtension","getImageFileEntry","objectEntry","formatAgeMoreThan","birthDate","deathDate","ageInYears","calcDateDifferenceInYears","age","formatAgeLessThan","formatAgeBetween","birthDateFrom","birthDateTo","deathDateFrom","deathDateTo","ageInYearsFrom","ageInYearsTo","ageFrom","ageTo","canCalculateAge","range1","range2","firstDate","secondDate","firstDateObject","secondDateObject","startYear","getUTCFullYear","yearDiff","monthDiff","getUTCMonth","getUTCDate","Math","abs","calcAge","birthGedcomDate","deathGedcomDate","birthDateOrRange","getDate","deathDateOrRange","translatedQualifier","formatExactAge","TAG_DESCRIPTIONS","TranslatedTag","props","normalizedTag","replace","WrappedImage","imageOpen","setImageOpen","imageLoaded","setImageLoaded","imageFailed","setImageFailed","imageSrc","setImageSrc","onLoad","onError","e","currentTarget","alt","src","filename","Placeholder","Image","square","Container","fluid","textAlign","Message","negative","compact","basic","size","closeIcon","Icon","color","onClose","onOpen","label","Label","attached","content","wrapped","MultilineText","lines","line","index","properties","target","eventSources","sources","List","source","Item","verticalAlign","author","publicationInfo","sourceElement","Description","page","EventExtras","useIntl","activeIndex","setActiveIndex","setIndi","handleTabOnClick","event","menuItemProps","panes","menuItem","Menu","fitted","Popup","position","trigger","circular","render","Tab","Pane","note","flatMap","tab","renderActiveOnly","menu","tabular","borderless","PersonLink","location","useLocation","person","names","subEntry","nameEntry","getName","search","queryString","Meta","pathname","EVENT_TAGS","FAMILY_EVENT_TAGS","EventHeader","as","type","sub","getSpouse","familyEntry","spouseReference","familySubEntry","includes","getAge","eventEntry","resolveDate","indiSubEntry","birthEvent","topolaDate","eventPlace","place","eventImages","imageFileEntry","sourceEntryReference","sourceEntry","sourceData","eventNotes","toEvent","family","familyMarriageEvent","personLink","toFamilyEvents","toIndiEvent","Event","Events","events","event1","event2","EXCLUDED_TAGS","fileDetails","noteDetails","nameDetails","fullName","replaceAll","nameType","getDetails","tags","detailsFunction","element","hasData","getOtherDetails","dataDetails","Details","entriesWithData","Group","divided","getSelection","selection","i","generation","prepareData","cacheId","parseGedcom","json","gedcomEntriesToJson","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","console","warn","loadFromUrl","handleCors","cachedData","driveUrlMatch1","driveUrlMatch2","urlToFetch","fetch","response","status","statusText","loadGedcom","hash","EmbeddedMessageType","UploadedDataSource","newSource","oldSource","spec","event_label","event_value","GedcomUrlDataSource","EmbeddedDataSource","resolve","reject","PARENT_READY","parent","postMessage","READY","GEDCOM","Promise","addEventListener","onMessage","getI18nMessage","error","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","GedcomLink","Contents","dateString","values","link","Intro","Card","greaterThanOrEqual","Grid","Row","Column","width","logo","at","MenuType","MenuItem","newProps","menuType","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","this","self","multiLanguage","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","query","s","getNameLine","SearchBar","searchResults","setSearchResults","searchString","setSearchString","searchIndex","useRef","getDescriptionLine","death","debouncedHandleSearch","debounce","results","current","key","description","displaySearchResult","initialize","buildSearchIndex","Search","onSearchChange","_","value","onResultSelect","onSelection","noResultsMessage","placeholder","selectFirstResult","loadFileAsText","file","reader","FileReader","onload","evt","readAsText","isImageFileName","lower","UploadMenu","history","useHistory","files","filesArray","Array","gedcomFile","URL","createObjectURL","imageMap","imageFileNames","md5","state","htmlFor","accept","multiple","onChange","UrlMenu","dialogOpen","setDialogOpen","setUrl","inputRef","handleLoad","focus","Form","onSubmit","Input","secondary","ScreenSize","WikiTreeMenu","wikiTreeId","setWikiTreeId","handleSelectId","standalone","enterId","preventDefault","wikitreeLogo","style","height","wikiTreeLink","rel","example1","example2","WikiTreeLoginMenu","username","getLoggedInUserName","returnUrl","navigateToLoginPage","tooltip","TopBar","changeView","view","chartMenus","screenSize","showingChart","chartTypeItems","allowAllRelativesChart","LARGE","eventHandlers","onPrint","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","fileMenus","showWikiTreeMenus","wikiTreeLoginMenu","inverted","icon","ChartColors","DEFALUT_CONFIG","COLOR_BY_GENERATION","COLOR_ARG","NO_COLOR","COLOR_BY_SEX","COLOR_ARG_INVERSE","argsToConfig","getParam","ConfigPanel","Field","Checkbox","radio","tagName","checked","config","v","k","ChartType","zoomed","select","node","scale","transform","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","readAsDataURL","inlineImage","baseVal","dataUrl","inlineImages","svg","getElementsByTagName","all","loadImage","drawImageOnCanvas","canvas","document","createElement","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","toBlob","getStrippedSvg","getElementById","cloneNode","removeAttribute","setAttribute","Number","getAttribute","querySelector","getSvgContentsWithInlinedImages","XMLSerializer","serializeToString","printChart","printWindow","top","left","contentDocument","write","close","setTimeout","contentWindow","print","parentNode","removeChild","body","appendChild","contents","Blob","saveAs","drawOnCanvas","downloadPng","downloadPdf","jspdf","default","doc","orientation","unit","addImage","save","chartColors","TopolaChartColors","getChartType","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","getRendererType","CircleRenderer","DetailedRenderer","ChartWrapper","chart","animating","rerenderRequired","zoomBehavior","rerenderProps","rerenderResetPosition","factor","scaleBy","initialRender","resetPosition","freezeAnimation","innerHTML","createChart","renderer","svgSelector","indiCallback","info","colors","animate","updateSvgSize","setData","chartInfo","startIndi","baseGeneration","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","Chart","chartWrapper","prevProps","usePrevious","PRIVATE_ID_PREFIX","getSessionStorageItem","setSessionStorageItem","getApiOptions","apiUrl","getAncestors","cacheKey","getAncestorsApi","getRelatives","keys","keysToFetch","getRelativesApi","getChildren","getSpouses","Name","concat","loadWikiTree","authcode","hostname","clientLogin","clear","everyone","firstPerson","spouseKeys","Spouses","personId","ancestors","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","families","spouses","idToName","fullSizePhotoUrls","getFamilyId","getSet","wife","converted","Set","convertPerson","PhotoData","path","spouse","familySpouses","Gender","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","hideId","FirstName","RealName","LastNameAtBirth","famc","sex","BirthDate","BirthLocation","BirthDateDecade","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","Photo","dataStatus","matchedDate","decade","MONTHS","dateToGedcom","eventToGedcom","level","imageToGedcom","fullSizePhotoUrl","pop","gedcomIndis","gedcomFams","escapedId","record","indiToGedcom","famToGedcom","newSet","AppState","WikiTreeDataSource","ErrorMessage","ErrorPopup","Portal","onDismiss","getArguments","chartTypes","embedded","sourceSpec","WIKITREE","UPLOADED","GEDCOM_URL","EMBEDDED","parsedGen","isNaN","showSidePanel","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","language","navigator","browser","detect","ReactDOM","component","INITIAL","setState","setSelection","setError","setShowSidePanel","setStandalone","setChartType","showErrorPopup","setShowErrorPopup","setSourceSpec","setFreezeAnimation","setConfig","updateDisplay","newSelection","uploadedDataSource","gedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","isNewData","newSourceSpec","oldSouce","loadData","updateUrl","gen","displayErrorPopup","downloadSvg","onDismissErrorPopup","LOADING","SHOWING_CHART","ERROR","LOADING_MORE","loadMoreFromWikitree","exact","sidePanelTabs","configToArgs","Loader","active"],"mappings":"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","file":"static/js/main.e8cea5b7.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\nexport function analyticsEvent(action: string, data?: any) {\n  (window as any).gtag('event', action, data);\n}\n","import {IndiInfo} from 'topola';\nimport {TopolaData} from '../util/gedcom_util';\n\n/** Supported data sources. */\nexport enum DataSourceEnum {\n  UPLOADED,\n  GEDCOM_URL,\n  WIKITREE,\n  EMBEDDED,\n}\n\n/** Source specification together with individual selection. */\nexport interface SourceSelection<SourceSpecT> {\n  spec: SourceSpecT;\n  selection?: IndiInfo;\n}\n\n/** Interface encapsulating functions specific for a data source. */\nexport interface DataSource<SourceSpecT> {\n  /**\n   * Returns true if the application is now loading a completely new data set\n   * and the existing one should be wiped.\n   */\n  isNewData(\n    newSource: SourceSelection<SourceSpecT>,\n    oldSource: SourceSelection<SourceSpecT>,\n    data?: TopolaData,\n  ): boolean;\n  /** Loads data from the data source. */\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\n}\n","import rehypeStringify from 'rehype-stringify';\nimport remarkParse from 'remark-parse';\nimport remarkRehype from 'remark-rehype';\nimport {Button, Header, Modal} from 'semantic-ui-react';\nimport {unified} from 'unified';\nimport {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst LAST_SEEN_VERSION_KEY = 'last_seen_version';\n\n/**\n * Returns changelog as raw HTML.\n *\n * @param maxVersions Max number of versions to include in changelog\n * @param seenVersion Last seen app version\n */\nexport async function getChangelog(maxVersions: number, seenVersion?: string) {\n  const seenVersionDate = seenVersion\n    ? Date.parse(seenVersion.slice(0, 10))\n    : 0;\n\n  const changes =\n    process.env.REACT_APP_CHANGELOG?.split('##')\n      .slice(1, maxVersions + 1)\n      .map((notes) => {\n        const date = Date.parse(notes.split('\\n')[0].trim());\n        return {date, notes: '####' + notes};\n      })\n      .filter((release) => release.date > seenVersionDate)\n      .map((release) => release.notes)\n      .join('\\n') || '';\n\n  const parsedChanges = await unified()\n    .use(remarkParse)\n    .use(remarkRehype)\n    .use(rehypeStringify)\n    .process(changes);\n  return String(parsedChanges);\n}\n\n/** Stores in local storage the current app version as the last seen version. */\nexport function updateSeenVersion() {\n  localStorage.setItem(LAST_SEEN_VERSION_KEY, process.env.REACT_APP_GIT_TIME!);\n}\n\n/**\n * Shows changelog entries if the user has seen an older version of\n * Topola Viewer and is now seeing a newer one.\n */\nexport function Changelog() {\n  const [open, setOpen] = useState(false);\n  const [changelog, setChangelog] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const seenVersion = localStorage.getItem(LAST_SEEN_VERSION_KEY);\n      const currentVersion = process.env.REACT_APP_GIT_TIME!;\n      if (!seenVersion || seenVersion === currentVersion) {\n        return;\n      }\n\n      const changes = await getChangelog(3, seenVersion);\n      setChangelog(changes);\n      setOpen(!!changes);\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <Modal open={open} centered={false}>\n      <Header>\n        <FormattedMessage\n          id=\"whats_new.title\"\n          defaultMessage=\"What's new in this version?\"\n        />\n      </Header>\n      <Modal.Content className=\"limit-height\">\n        <span dangerouslySetInnerHTML={{__html: changelog}} />\n        <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n          <FormattedMessage\n            id=\"intro.full_changelog\"\n            defaultMessage=\"See full changelog\"\n          />\n        </a>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button primary onClick={() => setOpen(false)}>\n          Close\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","/** Error class adding an error code used for i18n. */\nexport class TopolaError extends Error {\n  constructor(\n    public readonly code: string,\n    message: string,\n    public readonly args: {[key: string]: string} = {},\n  ) {\n    super(message);\n  }\n}\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\nimport {IntlShape} from 'react-intl';\n\nconst DATE_QUALIFIERS = new Map([\n  ['abt', 'about'],\n  ['cal', 'calculated'],\n  ['est', 'estimated'],\n]);\n\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\n  const hasDay = date.day !== undefined;\n  const hasMonth = date.month !== undefined;\n  const hasYear = date.year !== undefined;\n  if (!hasDay && !hasMonth && !hasYear) {\n    return date.text || '';\n  }\n  const dateObject = toDateObject(date);\n  const translatedQualifier = formatDateQualifier(date.qualifier, intl);\n\n  const formatOptions: Intl.DateTimeFormatOptions = {\n    day: hasDay ? 'numeric' : undefined,\n    month: hasMonth ? 'long' : undefined,\n    year: hasYear ? 'numeric' : undefined,\n  };\n  const translatedDate = new Intl.DateTimeFormat(\n    intl.locale,\n    formatOptions,\n  ).format(dateObject);\n\n  return [translatedQualifier, translatedDate]\n    .filter((dateElement) => dateElement)\n    .join(' ');\n}\n\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\n  const fromDate = dateRange.from;\n  const toDate = dateRange.to;\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\n  const translatedToDate = toDate && formatDate(toDate, intl);\n  if (translatedFromDate && translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.between',\n        defaultMessage: 'between {from} and {to}',\n      },\n      {from: translatedFromDate, to: translatedToDate},\n    );\n  }\n  if (translatedFromDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.after',\n        defaultMessage: 'after {from}',\n      },\n      {from: translatedFromDate},\n    );\n  }\n  if (translatedToDate) {\n    return intl.formatMessage(\n      {\n        id: 'date.before',\n        defaultMessage: 'before {to}',\n      },\n      {to: translatedToDate},\n    );\n  }\n  return '';\n}\n\nexport function formatDateQualifier(\n  qualifier: string | undefined,\n  intl: IntlShape,\n): string {\n  const lowerCaseQualifier = qualifier && qualifier.toLowerCase();\n  return (\n    (lowerCaseQualifier &&\n      intl.formatMessage({\n        id: `date.${lowerCaseQualifier}`,\n        defaultMessage:\n          DATE_QUALIFIERS.get(lowerCaseQualifier) || lowerCaseQualifier,\n      })) ||\n    ''\n  );\n}\n\n/** Formats a DateOrRange object. */\nexport function formatDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n  intl: IntlShape,\n): string {\n  if (!dateOrRange) {\n    return '';\n  }\n  if (dateOrRange.date) {\n    return formatDate(dateOrRange.date, intl);\n  }\n  if (dateOrRange.dateRange) {\n    return formatDateRage(dateOrRange.dateRange, intl);\n  }\n  return '';\n}\n\n/** Formats a date given in GEDCOM format. */\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\n  return formatDateOrRange(getDate(gedcomDate), intl);\n}\n\nexport function compareTopolaDates(\n  date1: TopolaDate | undefined,\n  date2: TopolaDate | undefined,\n): number {\n  if (!date1 || !date1.year || !date2 || !date2.year) {\n    return 0;\n  }\n  if (date1.year !== date2.year) {\n    return date1.year - date2.year;\n  }\n  if (!date1.month || !date2.month) {\n    return 0;\n  }\n  if (date1.month !== date2.month) {\n    return date1.month - date2.month;\n  }\n  if (date1.day && date2.day && date1.day !== date2.day) {\n    return date1.month - date2.month;\n  }\n  return 0;\n}\n\n/** Compares a dates given in GEDCOM format. */\nexport function compareDates(\n  firstDateOrRange: DateOrRange | undefined,\n  secondDateOrRange: DateOrRange | undefined,\n): number {\n  const date1 =\n    firstDateOrRange &&\n    (firstDateOrRange.date ||\n      (firstDateOrRange.dateRange &&\n        (firstDateOrRange.dateRange.from || firstDateOrRange.dateRange.to)));\n  const date2 =\n    secondDateOrRange &&\n    (secondDateOrRange.date ||\n      (secondDateOrRange.dateRange &&\n        (secondDateOrRange.dateRange.from || secondDateOrRange.dateRange.to)));\n  return compareTopolaDates(date1, date2);\n}\n\nexport function areDateRangesOverlapped(\n  range1: DateRange,\n  range2: DateRange,\n): boolean {\n  return (\n    compareTopolaDates(range1.from, range2.to) <= 0 &&\n    compareTopolaDates(range1.to, range2.from) >= 0\n  );\n}\n\nexport function isValidDateOrRange(\n  dateOrRange: DateOrRange | undefined,\n): boolean {\n  // invalid when range is closed and start is before end\n  if (isDateRangeClosed(dateOrRange?.dateRange)) {\n    return (\n      compareTopolaDates(\n        dateOrRange?.dateRange?.from,\n        dateOrRange?.dateRange?.to,\n      ) <= 0\n    );\n  }\n  //valid when there is exact date or date range has start or end defined\n  return !!(\n    dateOrRange?.date ||\n    dateOrRange?.dateRange?.from ||\n    dateOrRange?.dateRange?.to\n  );\n}\n\nexport function isDateRangeClosed(range: DateRange | undefined): boolean {\n  return !!(range?.from && range?.to);\n}\n\nexport function toDateObject(date: TopolaDate): Date {\n  return new Date(\n    date.year !== undefined ? date.year! : 0,\n    date.month !== undefined ? date.month! - 1 : 0,\n    date.day !== undefined ? date.day! : 1,\n  );\n}\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\nimport {TopolaError} from './error';\nimport {\n  gedcomEntriesToJson,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {compareDates} from './date_util';\n\nexport interface GedcomData {\n  /** The HEAD entry. */\n  head: GedcomEntry;\n  /** INDI entries mapped by id. */\n  indis: {[key: string]: GedcomEntry};\n  /** FAM entries mapped by id. */\n  fams: {[key: string]: GedcomEntry};\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\n  other: {[key: string]: GedcomEntry};\n}\n\nexport interface TopolaData {\n  chartData: JsonGedcomData;\n  gedcom: GedcomData;\n}\n\n/**\n * Returns the identifier extracted from a pointer string.\n * E.g. '@I123@' -> 'I123'\n */\nexport function pointerToId(pointer: string): string {\n  return pointer.substring(1, pointer.length - 1);\n}\n\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\n  const map = new Map<string, JsonIndi>();\n  data.indis.forEach((indi) => {\n    map.set(indi.id, indi);\n  });\n  return map;\n}\n\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\n  const map = new Map<string, JsonFam>();\n  data.fams.forEach((fam) => {\n    map.set(fam.id, fam);\n  });\n  return map;\n}\n\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\n  const indis: {[key: string]: GedcomEntry} = {};\n  const fams: {[key: string]: GedcomEntry} = {};\n  const other: {[key: string]: GedcomEntry} = {};\n  entries.forEach((entry) => {\n    if (entry.tag === 'INDI') {\n      indis[pointerToId(entry.pointer)] = entry;\n    } else if (entry.tag === 'FAM') {\n      fams[pointerToId(entry.pointer)] = entry;\n    } else if (entry.pointer) {\n      other[pointerToId(entry.pointer)] = entry;\n    }\n  });\n  return {head, indis, fams, other};\n}\n\nfunction strcmp(a: string, b: string) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/** Birth date comparator for individuals. */\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\n  const indiMap = idToIndiMap(gedcom);\n\n  return (indiId1: string, indiId2: string) => {\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\n    return (\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\n      strcmp(indiId1, indiId2)\n    );\n  };\n}\n\n/** Marriage date comparator for families. */\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\n  const famMap = idToFamMap(gedcom);\n\n  return (famId1: string, famId2: string) => {\n    const fam1: JsonFam | undefined = famMap.get(famId1);\n    const fam2: JsonFam | undefined = famMap.get(famId2);\n    return (\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\n      strcmp(famId1, famId2)\n    );\n  };\n}\n\n/**\n * Sorts children by birth date in the given family.\n * Does not modify the input objects.\n */\nfunction sortFamilyChildren(\n  fam: JsonFam,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!fam.children) {\n    return fam;\n  }\n  const newChildren = fam.children.sort(comparator);\n  return Object.assign({}, fam, {children: newChildren});\n}\n\n/**\n * Sorts children by birth date.\n * Does not modify the input object.\n */\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = birthDatesComparator(gedcom);\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\n  return Object.assign({}, gedcom, {fams: newFams});\n}\n\n/**\n * Sorts spouses by marriage date.\n * Does not modify the input objects.\n */\nfunction sortIndiSpouses(\n  indi: JsonIndi,\n  comparator: (id1: string, id2: string) => number,\n): JsonFam {\n  if (!indi.fams) {\n    return indi;\n  }\n  const newFams = indi.fams.sort(comparator);\n  return Object.assign({}, indi, {fams: newFams});\n}\n\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\n  const comparator = marriageDatesComparator(gedcom);\n  const newIndis = gedcom.indis.map((indi) =>\n    sortIndiSpouses(indi, comparator),\n  );\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * If the entry is a reference to a top-level entry, the referenced entry is\n * returned. Otherwise, returns the given entry unmodified.\n */\nexport function dereference(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  getterFunction: (gedcom: GedcomData) => {[key: string]: GedcomEntry},\n) {\n  if (entry.data) {\n    const dereferenced = getterFunction(gedcom)[pointerToId(entry.data)];\n    if (dereferenced) {\n      return dereferenced;\n    }\n  }\n  return entry;\n}\n\n/**\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\n * continuations with CONT and CONC.\n */\nexport function getData(entry: GedcomEntry) {\n  const result = [entry.data];\n  entry.tree.forEach((subentry) => {\n    if (subentry.tag === 'CONC' && subentry.data) {\n      const last = result.length - 1;\n      result[last] += subentry.data;\n    } else if (subentry.tag === 'CONT' && subentry.data) {\n      result.push(subentry.data);\n    }\n  });\n  return result;\n}\n\n/** Sorts children and spouses. */\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\n  return sortSpouses(sortChildren(gedcom));\n}\n\nconst IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif'];\n\n/** Returns true if the given file name has a known image extension. */\nexport function isImageFile(fileName: string): boolean {\n  const lowerName = fileName.toLowerCase();\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\n}\n\n/**\n * Removes images that are not HTTP links or do not have known image extensions.\n * Does not modify the input object.\n */\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\n  if (!indi.images || indi.images.length === 0) {\n    return indi;\n  }\n  const newImages: JsonImage[] = [];\n  indi.images.forEach((image) => {\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\n    // If the image file has been loaded into memory, use it.\n    if (images.has(fileName)) {\n      newImages.push({url: images.get(fileName)!, title: image.title});\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\n      newImages.push(image);\n    }\n  });\n  return Object.assign({}, indi, {images: newImages});\n}\n\n/**\n * Removes images that are not HTTP links.\n * Does not modify the input object.\n */\nfunction filterImages(\n  gedcom: JsonGedcomData,\n  images: Map<string, string>,\n): JsonGedcomData {\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\n  return Object.assign({}, gedcom, {indis: newIndis});\n}\n\n/**\n * Converts GEDCOM file into JSON data performing additional transformations:\n * - sort children by birth date\n * - remove images that are not HTTP links and aren't mapped in `images`.\n *\n * @param images Map from file name to image URL. This is used to pass in\n *   uploaded images.\n */\nexport function convertGedcom(\n  gedcom: string,\n  images: Map<string, string>,\n): TopolaData {\n  const entries = parseGedcom(gedcom);\n  const json = gedcomEntriesToJson(entries);\n  if (\n    !json ||\n    !json.indis ||\n    !json.indis.length ||\n    !json.fams ||\n    !json.fams.length\n  ) {\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\n  }\n\n  return {\n    chartData: filterImages(normalizeGedcom(json), images),\n    gedcom: prepareGedcom(entries),\n  };\n}\n\nexport function getSoftware(head: GedcomEntry): string | null {\n  const sour =\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\n  const name =\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\n  return (name && name.data) || null;\n}\n\nexport function getName(person: GedcomEntry): string | undefined {\n  const names = person.tree.filter((subEntry) => subEntry.tag === 'NAME');\n  const notMarriedName = names.find(\n    (subEntry) =>\n      subEntry.tree.filter(\n        (nameEntry) => nameEntry.tag === 'TYPE' && nameEntry.data === 'married',\n      ).length === 0,\n  );\n  const name = notMarriedName || names[0];\n  return name?.data.replace(/\\//g, '');\n}\n\nexport function getFileName(fileEntry: GedcomEntry): string | undefined {\n  const fileTitle = fileEntry?.tree.find((entry) => entry.tag === 'TITL')?.data;\n\n  const fileExtension = fileEntry?.tree.find((entry) => entry.tag === 'FORM')\n    ?.data;\n\n  return fileTitle && fileExtension && fileTitle + '.' + fileExtension;\n}\n\nexport function getImageFileEntry(\n  objectEntry: GedcomEntry,\n): GedcomEntry | undefined {\n  return objectEntry.tree.find(\n    (entry) =>\n      entry.tag === 'FILE' &&\n      entry.data.startsWith('http') &&\n      isImageFile(entry.data),\n  );\n}\n","import {Date as TopolaDate} from 'topola/dist/data';\nimport {IntlShape} from 'react-intl';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n  areDateRangesOverlapped,\n  compareDates,\n  formatDateQualifier,\n  isDateRangeClosed,\n  isValidDateOrRange,\n  toDateObject,\n} from './date_util';\n\nfunction formatExactAge(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  const qualifier = birthDate.qualifier || deathDate.qualifier;\n  const translatedQualifier =\n    qualifier && formatDateQualifier(qualifier, intl) + ' ';\n\n  return intl.formatMessage(\n    {\n      id: 'age.exact',\n      defaultMessage:\n        '{qualifier}{age, plural, =0 {Less than 1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears, qualifier: translatedQualifier},\n  );\n}\n\nfunction formatAgeMoreThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.more',\n      defaultMessage:\n        'More than {age, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeLessThan(\n  birthDate: TopolaDate,\n  deathDate: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYears = calcDateDifferenceInYears(birthDate, deathDate);\n  return intl.formatMessage(\n    {\n      id: 'age.less',\n      defaultMessage:\n        'Less than {age, plural, =0 {1 year} one {1 year} other {# years}}',\n    },\n    {age: ageInYears},\n  );\n}\n\nfunction formatAgeBetween(\n  birthDateFrom: TopolaDate,\n  birthDateTo: TopolaDate,\n  deathDateFrom: TopolaDate,\n  deathDateTo: TopolaDate,\n  intl: IntlShape,\n): string {\n  const ageInYearsFrom = calcDateDifferenceInYears(birthDateTo, deathDateFrom);\n  const ageInYearsTo = calcDateDifferenceInYears(birthDateFrom, deathDateTo);\n  return intl.formatMessage(\n    {\n      id: 'age.between',\n      defaultMessage:\n        'Between {ageFrom} and {ageTo, plural, =0 {0 years} one {1 year} other {# years}}',\n    },\n    {ageFrom: ageInYearsFrom, ageTo: ageInYearsTo},\n  );\n}\n\nfunction canCalculateAge(\n  birthDate: DateOrRange | undefined,\n  deathDate: DateOrRange | undefined,\n): boolean {\n  if (birthDate && deathDate) {\n    // cannot calculate if there is no valid birth or death date\n    if (!isValidDateOrRange(birthDate) || !isValidDateOrRange(deathDate)) {\n      return false;\n    }\n    //cannot calculate if death date is before birth date\n    if (compareDates(birthDate, deathDate) > 0) {\n      return false;\n    }\n    // cannot calculate if closed date range for birth or death are overlapping\n    if (\n      birthDate.dateRange &&\n      deathDate.dateRange &&\n      isDateRangeClosed(birthDate?.dateRange) &&\n      isDateRangeClosed(deathDate?.dateRange)\n    ) {\n      return !areDateRangesOverlapped(birthDate.dateRange, deathDate.dateRange);\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction calcDateDifferenceInYears(\n  firstDate: TopolaDate,\n  secondDate: TopolaDate,\n): number {\n  const firstDateObject = toDateObject(firstDate);\n  const secondDateObject = toDateObject(secondDate);\n\n  const startYear = firstDateObject.getUTCFullYear();\n\n  let yearDiff = secondDateObject.getUTCFullYear() - startYear;\n  let monthDiff =\n    secondDateObject.getUTCMonth() - firstDateObject.getUTCMonth();\n  if (monthDiff < 0) {\n    yearDiff--;\n    monthDiff += 12;\n  }\n  const dayDiff = secondDateObject.getUTCDate() - firstDateObject.getUTCDate();\n  if (dayDiff < 0) {\n    if (monthDiff <= 0) {\n      yearDiff--;\n    }\n  }\n  return Math.abs(yearDiff);\n}\n\nexport function calcAge(\n  birthGedcomDate: string | undefined,\n  deathGedcomDate: string | undefined,\n  intl: IntlShape,\n): string | undefined {\n  if (birthGedcomDate && deathGedcomDate) {\n    const birthDateOrRange = getDate(birthGedcomDate);\n    const deathDateOrRange = getDate(deathGedcomDate);\n    if (canCalculateAge(birthDateOrRange, deathDateOrRange)) {\n      if (birthDateOrRange?.date) {\n        if (deathDateOrRange?.date) {\n          return formatExactAge(\n            birthDateOrRange.date,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange.date,\n            birthDateOrRange.date,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.date,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (\n        birthDateOrRange?.dateRange?.from &&\n        birthDateOrRange?.dateRange?.to\n      ) {\n        if (deathDateOrRange?.date) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.date,\n            deathDateOrRange?.date,\n            intl,\n          );\n        }\n        if (\n          deathDateOrRange?.dateRange?.from &&\n          deathDateOrRange.dateRange?.to\n        ) {\n          return formatAgeBetween(\n            birthDateOrRange?.dateRange?.from,\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange?.dateRange?.from,\n            deathDateOrRange?.dateRange?.to,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.from) {\n        if (deathDateOrRange?.date) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.to) {\n          return formatAgeLessThan(\n            birthDateOrRange.dateRange?.from,\n            deathDateOrRange.dateRange?.to,\n            intl,\n          );\n        }\n      }\n      if (birthDateOrRange?.dateRange?.to) {\n        if (deathDateOrRange?.date) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.date,\n            intl,\n          );\n        }\n        if (deathDateOrRange?.dateRange?.from) {\n          return formatAgeMoreThan(\n            birthDateOrRange?.dateRange?.to,\n            deathDateOrRange.dateRange?.from,\n            intl,\n          );\n        }\n      }\n    }\n  }\n}\n","import {FormattedMessage} from 'react-intl';\n\nconst TAG_DESCRIPTIONS = new Map([\n  ['ADOP', 'Adoption'],\n  ['BAPM', 'Baptism'],\n  ['BIRT', 'Birth'],\n  ['BURI', 'Burial'],\n  ['CENS', 'Census'],\n  ['CHR', 'Christening'],\n  ['CREM', 'Cremation'],\n  ['DEAT', 'Death'],\n  ['EDUC', 'Education'],\n  ['EMAIL', 'E-mail'],\n  ['EMIG', 'Emigration'],\n  ['EVEN', 'Event'],\n  ['FACT', 'Fact'],\n  ['IMMI', 'Immigration'],\n  ['MARR', 'Marriage'],\n  ['DIV', 'Divorce'],\n  ['MILT', 'Military services'],\n  ['NATU', 'Naturalization'],\n  ['OCCU', 'Occupation'],\n  ['TITL', 'Title'],\n  ['WWW', 'WWW'],\n  ['birth', 'Birth name'],\n  ['married', 'Married name'],\n  ['maiden', 'Maiden name'],\n  ['immigrant', 'Immigrant name'],\n  ['aka', 'Also known as'],\n]);\n\ninterface Props {\n  tag: string;\n}\n\nexport function TranslatedTag(props: Props) {\n  const normalizedTag = props.tag.replace(/_/g, '');\n  return (\n    <FormattedMessage\n      id={`gedcom.${normalizedTag}`}\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\n    />\n  );\n}\n","import {\n  Container,\n  Icon,\n  Image,\n  Label,\n  Message,\n  Modal,\n  Placeholder,\n} from 'semantic-ui-react';\nimport {SyntheticEvent, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ninterface Props {\n  url: string;\n  filename: string;\n  title?: string;\n}\n\nexport function WrappedImage(props: Props) {\n  const [imageOpen, setImageOpen] = useState(false);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageFailed, setImageFailed] = useState(false);\n  const [imageSrc, setImageSrc] = useState('');\n\n  if (imageLoaded && imageSrc !== props.url) {\n    setImageLoaded(false);\n  }\n  return (\n    <>\n      <Image\n        className={imageLoaded ? 'loaded-image-thumbnail' : 'hidden-image'}\n        onClick={() => setImageOpen(true)}\n        onLoad={() => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(false);\n        }}\n        onError={(e: SyntheticEvent<HTMLImageElement, Event>) => {\n          setImageLoaded(true);\n          setImageSrc(props.url);\n          setImageFailed(true);\n          e.currentTarget.alt = '';\n        }}\n        src={props.url}\n        alt={props.title || props.filename}\n        centered={true}\n      />\n      <Placeholder\n        className={!imageLoaded ? 'image-placeholder' : 'hidden-image'}\n      >\n        <Placeholder.Image square />\n      </Placeholder>\n      {imageFailed && (\n        <Container fluid textAlign=\"center\">\n          <Message negative compact>\n            <Message.Header>\n              <FormattedMessage\n                id=\"error.failed_to_load_image\"\n                defaultMessage={'Failed to load image file'}\n              />\n            </Message.Header>\n          </Message>\n        </Container>\n      )}\n      <Modal\n        basic\n        size=\"large\"\n        closeIcon={<Icon name=\"close\" color=\"red\" />}\n        open={imageOpen}\n        onClose={() => setImageOpen(false)}\n        onOpen={() => setImageOpen(true)}\n        centered={false}\n      >\n        <Modal.Header>{props.title}</Modal.Header>\n        <Modal.Content image>\n          <Image\n            className=\"modal-image\"\n            src={props.url}\n            alt={props.title || props.filename}\n            label={<Label attached=\"bottom\" content={props.filename} />}\n            wrapped\n          />\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n}\n","import Linkify from 'react-linkify';\n\ninterface Props {\n  lines: (JSX.Element | string)[];\n}\n\nexport function MultilineText(props: Props) {\n  return (\n    <>\n      {props.lines.map((line, index) => (\n        <div key={index}>\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\n          <br />\n        </div>\n      ))}\n    </>\n  );\n}\n","import {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {\n  Icon,\n  Item,\n  List,\n  Menu,\n  MenuItemProps,\n  Popup,\n  Tab,\n} from 'semantic-ui-react';\nimport {useState} from 'react';\nimport {WrappedImage} from './wrapped-image';\nimport * as React from 'react';\nimport {MultilineText} from './multiline-text';\nimport {DateOrRange} from 'topola';\nimport {formatDateOrRange} from '../util/date_util';\nimport Linkify from 'react-linkify';\n\nexport interface Image {\n  url: string;\n  filename: string;\n  title?: string;\n}\n\nexport interface Source {\n  title?: string;\n  author?: string;\n  page?: string;\n  date?: DateOrRange;\n  publicationInfo?: string;\n}\n\ninterface Props {\n  images?: Image[];\n  notes?: string[][];\n  sources?: Source[];\n  indi: string;\n}\n\nfunction eventImages(images: Image[] | undefined) {\n  return (\n    !!images &&\n    images.map((image, index) => (\n      <List key={index}>\n        <List.Item>\n          <WrappedImage\n            url={image.url}\n            filename={image.filename}\n            title={image.title}\n          />\n        </List.Item>\n      </List>\n    ))\n  );\n}\n\nfunction eventNotes(notes: string[][] | undefined) {\n  return (\n    !!notes?.length &&\n    notes.map((note, index) => (\n      <div key={index}>\n        <MultilineText\n          lines={note.map((line, index) => (\n            <i key={index}>{line}</i>\n          ))}\n        />\n      </div>\n    ))\n  );\n}\n\nfunction eventSources(sources: Source[] | undefined, intl: IntlShape) {\n  return (\n    !!sources?.length && (\n      <List>\n        {sources.map((source, index) => (\n          <List.Item key={index}>\n            <List.Icon verticalAlign=\"middle\" name=\"circle\" size=\"tiny\" />\n            <List.Content>\n              <List.Header>\n                <Linkify properties={{target: '_blank'}}>\n                  {[source.author, source.title, source.publicationInfo]\n                    .filter((sourceElement) => sourceElement)\n                    .join(', ')}\n                </Linkify>\n              </List.Header>\n              <List.Description>\n                <Linkify properties={{target: '_blank'}}>{source.page}</Linkify>\n                {source.date\n                  ? ' [' + formatDateOrRange(source.date, intl) + ']'\n                  : null}\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        ))}\n      </List>\n    )\n  );\n}\n\nexport function EventExtras(props: Props) {\n  const intl = useIntl();\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [indi, setIndi] = useState('');\n\n  if (!indi || indi !== props.indi) {\n    setActiveIndex(-1);\n    setIndi(props.indi);\n  }\n\n  function handleTabOnClick(\n    event: React.MouseEvent<HTMLAnchorElement>,\n    menuItemProps: MenuItemProps,\n  ) {\n    menuItemProps.index !== undefined && activeIndex !== menuItemProps.index\n      ? setActiveIndex(menuItemProps.index)\n      : setActiveIndex(-1);\n  }\n\n  const imageTab = props.images?.length && {\n    menuItem: (\n      <Menu.Item fitted key=\"images\" onClick={handleTabOnClick}>\n        <Popup\n          content={\n            <FormattedMessage id=\"extras.images\" defaultMessage=\"Images\" />\n          }\n          size=\"mini\"\n          position=\"bottom center\"\n          trigger={<Icon circular name=\"camera\" />}\n        />\n      </Menu.Item>\n    ),\n    render: () => <Tab.Pane>{eventImages(props.images)}</Tab.Pane>,\n  };\n\n  const noteTab = props.notes?.length && {\n    menuItem: (\n      <Menu.Item fitted key=\"notes\" onClick={handleTabOnClick}>\n        <Popup\n          content={\n            <FormattedMessage id=\"extras.notes\" defaultMessage=\"Notes\" />\n          }\n          size=\"mini\"\n          position=\"bottom center\"\n          trigger={<Icon circular name=\"sticky note outline\" />}\n        />\n      </Menu.Item>\n    ),\n    render: () => <Tab.Pane>{eventNotes(props.notes)}</Tab.Pane>,\n  };\n\n  const sourceTab = props.sources?.length && {\n    menuItem: (\n      <Menu.Item fitted key=\"sources\" onClick={handleTabOnClick}>\n        <Popup\n          content={\n            <FormattedMessage id=\"extras.sources\" defaultMessage=\"Sources\" />\n          }\n          size=\"mini\"\n          position=\"bottom center\"\n          trigger={<Icon circular name=\"quote right\" />}\n        />\n      </Menu.Item>\n    ),\n    render: () => <Tab.Pane>{eventSources(props.sources, intl)}</Tab.Pane>,\n  };\n\n  const panes = [imageTab, noteTab, sourceTab].flatMap((tab) =>\n    tab ? [tab] : [],\n  );\n\n  if (panes.length) {\n    return (\n      <Item.Description>\n        <Tab\n          className=\"event-extras\"\n          activeIndex={activeIndex}\n          renderActiveOnly={true}\n          menu={{\n            tabular: true,\n            attached: true,\n            compact: true,\n            borderless: true,\n          }}\n          panes={panes}\n        />\n      </Item.Description>\n    );\n  }\n  return null;\n}\n","import * as queryString from 'query-string';\nimport flatMap from 'array.prototype.flatmap';\nimport {calcAge} from '../util/age_util';\nimport {compareDates, formatDateOrRange} from '../util/date_util';\nimport {DateOrRange, getDate} from 'topola';\nimport {\n  dereference,\n  GedcomData,\n  getData,\n  getImageFileEntry,\n  getFileName,\n  getName,\n} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {FormattedMessage, IntlShape, useIntl} from 'react-intl';\nimport {Link, useLocation} from 'react-router-dom';\nimport {pointerToId} from '../util/gedcom_util';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {EventExtras, Image, Source} from './event-extras';\n\nfunction PersonLink(props: {person: GedcomEntry}) {\n  const location = useLocation();\n\n  const name = getName(props.person);\n\n  const search = queryString.parse(location.search);\n  search['indi'] = pointerToId(props.person.pointer);\n\n  return (\n    <Item.Meta>\n      <Link to={{pathname: '/view', search: queryString.stringify(search)}}>\n        {name ? (\n          name\n        ) : (\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\n        )}\n      </Link>\n    </Item.Meta>\n  );\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n  entries: GedcomEntry[];\n}\n\ninterface EventData {\n  type: string;\n  date?: DateOrRange;\n  age?: string;\n  personLink?: GedcomEntry;\n  place?: string[];\n  images?: Image[];\n  notes?: string[][];\n  sources?: Source[];\n  indi: string;\n}\n\nconst EVENT_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'FAMS',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n];\n\nconst FAMILY_EVENT_TAGS = ['MARR', 'DIV'];\n\nfunction EventHeader(props: {event: EventData}) {\n  const intl = useIntl();\n  return (\n    <div className=\"event-header\">\n      <Header as=\"span\" size=\"small\">\n        <TranslatedTag tag={props.event.type} />\n      </Header>\n      {props.event.date ? (\n        <Header as=\"span\" textAlign=\"right\" sub>\n          {formatDateOrRange(props.event.date, intl)}\n        </Header>\n      ) : null}\n    </div>\n  );\n}\n\nfunction getSpouse(indi: string, familyEntry: GedcomEntry, gedcom: GedcomData) {\n  const spouseReference = familyEntry.tree\n    .filter((familySubEntry) => ['WIFE', 'HUSB'].includes(familySubEntry.tag))\n    .find((familySubEntry) => !familySubEntry.data.includes(indi));\n\n  if (!spouseReference) {\n    return undefined;\n  }\n  return dereference(spouseReference, gedcom, (gedcom) => gedcom.indis);\n}\n\nfunction getAge(\n  eventEntry: GedcomEntry,\n  indi: string,\n  gedcom: GedcomData,\n  intl: IntlShape,\n): string | undefined {\n  if (eventEntry.tag !== 'DEAT') {\n    return undefined;\n  }\n  const deathDate = resolveDate(eventEntry);\n\n  const birthDate = gedcom.indis[indi].tree\n    .filter((indiSubEntry) => indiSubEntry.tag === 'BIRT')\n    .map((birthEvent) => resolveDate(birthEvent))\n    .find((topolaDate) => topolaDate);\n\n  if (!birthDate || !deathDate) {\n    return undefined;\n  }\n  return calcAge(birthDate?.data, deathDate?.data, intl);\n}\n\nfunction eventPlace(entry: GedcomEntry) {\n  const place = entry.tree.find((subEntry) => subEntry.tag === 'PLAC');\n  return place?.data ? getData(place) : undefined;\n}\n\nfunction eventImages(entry: GedcomEntry, gedcom: GedcomData): Image[] {\n  return entry.tree\n    .filter((subEntry) => 'OBJE' === subEntry.tag)\n    .map((objectEntry) =>\n      dereference(objectEntry, gedcom, (gedcom) => gedcom.other),\n    )\n    .map((objectEntry) => getImageFileEntry(objectEntry))\n    .flatMap((imageFileEntry) =>\n      imageFileEntry\n        ? [\n            {\n              url: imageFileEntry?.data || '',\n              filename: getFileName(imageFileEntry) || '',\n            },\n          ]\n        : [],\n    );\n}\n\nfunction eventSources(entry: GedcomEntry, gedcom: GedcomData): Source[] {\n  return entry.tree\n    .filter((subEntry) => 'SOUR' === subEntry.tag)\n    .map((sourceEntryReference) => {\n      const sourceEntry = dereference(\n        sourceEntryReference,\n        gedcom,\n        (gedcom) => gedcom.other,\n      );\n\n      const title = sourceEntry.tree.find(\n        (subEntry) => 'TITL' === subEntry.tag,\n      );\n\n      const author = sourceEntry.tree.find(\n        (subEntry) => 'AUTH' === subEntry.tag,\n      );\n\n      const publicationInfo = sourceEntry.tree.find(\n        (subEntry) => 'PUBL' === subEntry.tag,\n      );\n\n      const page = sourceEntryReference.tree.find(\n        (subEntry) => 'PAGE' === subEntry.tag,\n      );\n\n      const sourceData = sourceEntryReference.tree.find(\n        (subEntry) => 'DATA' === subEntry.tag,\n      );\n\n      const date = sourceData ? resolveDate(sourceData) : undefined;\n\n      return {\n        title: title?.data,\n        author: author?.data,\n        page: page?.data,\n        date: date ? getDate(date.data) : undefined,\n        publicationInfo: publicationInfo?.data,\n      };\n    });\n}\n\nfunction eventNotes(entry: GedcomEntry, gedcom: GedcomData): string[][] {\n  return entry.tree\n    .filter((subentry) => ['NOTE', 'TYPE'].includes(subentry.tag))\n    .map((note) => dereference(note, gedcom, (gedcom) => gedcom.other))\n    .map((note) => getData(note));\n}\n\nfunction toEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  if (entry.tag === 'FAMS') {\n    return toFamilyEvents(entry, gedcom, indi);\n  }\n  return toIndiEvent(entry, gedcom, indi, intl);\n}\n\nfunction toIndiEvent(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n  intl: IntlShape,\n): EventData[] {\n  const date = resolveDate(entry) || null;\n  return [\n    {\n      date: date ? getDate(date.data) : undefined,\n      type: entry.tag,\n      age: getAge(entry, indi, gedcom, intl),\n      place: eventPlace(entry),\n      images: eventImages(entry, gedcom),\n      notes: eventNotes(entry, gedcom),\n      sources: eventSources(entry, gedcom),\n      indi: indi,\n    },\n  ];\n}\n\nfunction resolveDate(entry: GedcomEntry) {\n  return entry.tree.find((subEntry) => subEntry.tag === 'DATE');\n}\n\nfunction toFamilyEvents(\n  entry: GedcomEntry,\n  gedcom: GedcomData,\n  indi: string,\n): EventData[] {\n  const family = dereference(entry, gedcom, (gedcom) => gedcom.fams);\n  return flatMap(FAMILY_EVENT_TAGS, (tag) =>\n    family.tree.filter((entry) => entry.tag === tag),\n  ).map((familyMarriageEvent) => {\n    const date = resolveDate(familyMarriageEvent) || null;\n    return {\n      date: date ? getDate(date.data) : undefined,\n      type: familyMarriageEvent.tag,\n      personLink: getSpouse(indi, family, gedcom),\n      place: eventPlace(familyMarriageEvent),\n      images: eventImages(familyMarriageEvent, gedcom),\n      notes: eventNotes(familyMarriageEvent, gedcom),\n      sources: eventSources(familyMarriageEvent, gedcom),\n      indi: indi,\n    };\n  });\n}\n\nfunction Event(props: {event: EventData}) {\n  return (\n    <Item>\n      <Item.Content>\n        <EventHeader event={props.event} />\n        {!!props.event.age && <Item.Meta>{props.event.age}</Item.Meta>}\n        {!!props.event.personLink && (\n          <PersonLink person={props.event.personLink} />\n        )}\n        {!!props.event.place && (\n          <Item.Description>{props.event.place}</Item.Description>\n        )}\n        <EventExtras\n          images={props.event.images}\n          notes={props.event.notes}\n          sources={props.event.sources}\n          indi={props.event.indi}\n        />\n      </Item.Content>\n    </Item>\n  );\n}\n\nexport function Events(props: Props) {\n  const intl = useIntl();\n\n  const events = flatMap(EVENT_TAGS, (tag) =>\n    props.entries\n      .filter((entry) => entry.tag === tag)\n      .map((eventEntry) => toEvent(eventEntry, props.gedcom, props.indi, intl))\n      .flatMap((events) => events)\n      .sort((event1, event2) => compareDates(event1.date, event2.date)),\n  );\n  if (events.length) {\n    return (\n      <>\n        {events.map((event, index) => (\n          <Event event={event} key={index} />\n        ))}\n      </>\n    );\n  }\n  return null;\n}\n","import flatMap from 'array.prototype.flatmap';\nimport {\n  dereference,\n  GedcomData,\n  getData,\n  getFileName,\n  getImageFileEntry,\n  isImageFile,\n} from '../util/gedcom_util';\nimport {Events} from './events';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {MultilineText} from './multiline-text';\nimport {TranslatedTag} from './translated-tag';\nimport {Header, Item} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {WrappedImage} from './wrapped-image';\n\nconst EXCLUDED_TAGS = [\n  'BIRT',\n  'BAPM',\n  'CHR',\n  'EVEN',\n  'CENS',\n  'DEAT',\n  'BURI',\n  'NAME',\n  'SEX',\n  'FAMC',\n  'FAMS',\n  'NOTE',\n  'SOUR',\n];\n\nfunction dataDetails(entry: GedcomEntry) {\n  const lines = [];\n  if (entry.data) {\n    lines.push(...getData(entry));\n  }\n  entry.tree\n    .filter((subentry) => subentry.tag === 'NOTE')\n    .forEach((note) =>\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\n    );\n  if (!lines.length) {\n    return null;\n  }\n  return (\n    <>\n      <Header sub>\n        <TranslatedTag tag={entry.tag} />\n      </Header>\n      <span>\n        <MultilineText lines={lines} />\n      </span>\n    </>\n  );\n}\n\nfunction fileDetails(objectEntry: GedcomEntry) {\n  const imageFileEntry = getImageFileEntry(objectEntry);\n\n  return imageFileEntry ? (\n    <div className=\"person-image\">\n      <WrappedImage\n        url={imageFileEntry.data}\n        filename={getFileName(imageFileEntry) || ''}\n      />\n    </div>\n  ) : null;\n}\n\nfunction noteDetails(entry: GedcomEntry) {\n  return (\n    <MultilineText\n      lines={getData(entry).map((line, index) => (\n        <i key={index}>{line}</i>\n      ))}\n    />\n  );\n}\n\nfunction nameDetails(entry: GedcomEntry) {\n  const fullName = entry.data.replaceAll('/', '');\n\n  const nameType = entry.tree.find(\n    (entry) => entry.tag === 'TYPE' && entry.data !== 'Unknown',\n  )?.data;\n\n  return (\n    <>\n      <Header as=\"span\" size=\"large\">\n        {fullName ? (\n          fullName\n        ) : (\n          <FormattedMessage id=\"name.unknown_name\" defaultMessage=\"N.N.\" />\n        )}\n      </Header>\n      {fullName && nameType && (\n        <Item.Meta>\n          <TranslatedTag tag={nameType} />\n        </Item.Meta>\n      )}\n    </>\n  );\n}\n\nfunction getDetails(\n  entries: GedcomEntry[],\n  tags: string[],\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\n): JSX.Element[] {\n  return flatMap(tags, (tag) =>\n    entries\n      .filter((entry) => entry.tag === tag)\n      .map((entry) => detailsFunction(entry)),\n  )\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\n/**\n * Returns true if there is displayable information in this entry.\n * Returns false if there is no data in this entry or this is only a reference\n * to another entry.\n */\nfunction hasData(entry: GedcomEntry) {\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\n}\n\nfunction getOtherDetails(entries: GedcomEntry[]) {\n  return entries\n    .filter((entry) => !EXCLUDED_TAGS.includes(entry.tag))\n    .filter(hasData)\n    .map((entry) => dataDetails(entry))\n    .filter((element) => element !== null)\n    .map((element, index) => (\n      <Item key={index}>\n        <Item.Content>{element}</Item.Content>\n      </Item>\n    ));\n}\n\ninterface Props {\n  gedcom: GedcomData;\n  indi: string;\n}\n\nexport function Details(props: Props) {\n  const entries = props.gedcom.indis[props.indi].tree;\n  const entriesWithData = entries\n    .map((entry) => dereference(entry, props.gedcom, (gedcom) => gedcom.other))\n    .filter(hasData);\n\n  return (\n    <div className=\"details\">\n      <Item.Group divided>\n        {getDetails(entries, ['NAME'], nameDetails)}\n        {getDetails(entriesWithData, ['OBJE'], fileDetails)}\n        <Events gedcom={props.gedcom} entries={entries} indi={props.indi} />\n        {getOtherDetails(entriesWithData)}\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\n      </Item.Group>\n    </div>\n  );\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {TopolaError} from '../util/error';\n\n/**\n * Returns a valid IndiInfo object, either with the given indi and generation\n * or with an individual taken from the data and generation 0.\n */\nexport function getSelection(\n  data: JsonGedcomData,\n  selection?: IndiInfo,\n): IndiInfo {\n  // If ID is not given or it doesn't exist in the data, use the first ID in\n  // the data.\n  const id =\n    selection && data.indis.some((i) => i.id === selection.id)\n      ? selection.id\n      : data.indis[0].id;\n  return {id, generation: selection?.generation || 0};\n}\n\nfunction prepareData(\n  gedcom: string,\n  cacheId: string,\n  images?: Map<string, string>,\n): TopolaData {\n  const data = convertGedcom(gedcom, images || new Map());\n  const serializedData = JSON.stringify(data);\n  try {\n    sessionStorage.setItem(cacheId, serializedData);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n  return data;\n}\n\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\nexport async function loadFromUrl(\n  url: string,\n  handleCors: boolean,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(url);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n\n  const driveUrlMatch1 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\n  );\n  if (driveUrlMatch1) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\n  }\n  const driveUrlMatch2 = url.match(\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\n  );\n  if (driveUrlMatch2) {\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\n  }\n\n  const urlToFetch = handleCors\n    ? 'https://topola-cors.herokuapp.com/' + url\n    : url;\n\n  const response = await window.fetch(urlToFetch);\n  if (response.status !== 200) {\n    throw new Error(response.statusText);\n  }\n  const gedcom = await response.text();\n  return prepareData(gedcom, url);\n}\n\n/** Loads data from the given GEDCOM file contents. */\nexport async function loadGedcom(\n  hash: string,\n  gedcom?: string,\n  images?: Map<string, string>,\n): Promise<TopolaData> {\n  try {\n    const cachedData = sessionStorage.getItem(hash);\n    if (cachedData) {\n      return JSON.parse(cachedData);\n    }\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  if (!gedcom) {\n    throw new TopolaError(\n      'ERROR_LOADING_UPLOADED_FILE',\n      'Error loading data. Please upload your file again.',\n    );\n  }\n  return prepareData(gedcom, hash, images);\n}\n\nexport interface UploadSourceSpec {\n  source: DataSourceEnum.UPLOADED;\n  gedcom?: string;\n  /** Hash of the GEDCOM contents. */\n  hash: string;\n  images?: Map<string, string>;\n}\n\n/** Files opened from the local computer. */\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\n  // isNewData(args: Arguments, state: State): boolean {\n  isNewData(\n    newSource: SourceSelection<UploadSourceSpec>,\n    oldSource: SourceSelection<UploadSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.hash !== oldSource.spec.hash;\n  }\n\n  async loadData(\n    source: SourceSelection<UploadSourceSpec>,\n  ): Promise<TopolaData> {\n    try {\n      const data = await loadGedcom(\n        source.spec.hash,\n        source.spec.gedcom,\n        source.spec.images,\n      );\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {\n        event_label: software,\n        event_value: (source.spec.images && source.spec.images.size) || 0,\n      });\n      return data;\n    } catch (error) {\n      analyticsEvent('upload_file_error');\n      throw error;\n    }\n  }\n}\n\nexport interface UrlSourceSpec {\n  source: DataSourceEnum.GEDCOM_URL;\n  /** URL of the data that is loaded or is being loaded. */\n  url: string;\n  handleCors: boolean;\n}\n\n/** GEDCOM file loaded by pointing to a URL. */\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<UrlSourceSpec>,\n    oldSource: SourceSelection<UrlSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    return newSource.spec.url !== oldSource.spec.url;\n  }\n\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\n    try {\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\n      const software = getSoftware(data.gedcom.head);\n      analyticsEvent('upload_file_loaded', {event_label: software});\n      return data;\n    } catch (error) {\n      analyticsEvent('url_file_error');\n      throw error;\n    }\n  }\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\nimport {loadGedcom} from './load_data';\n\n/**\n * Message types used in embedded mode.\n * When the parent is ready to receive messages, it sends PARENT_READY.\n * When the child (this app) is ready to receive messages, it sends READY.\n * When the child receives PARENT_READY, it sends READY.\n * When the parent receives READY, it sends data in a GEDCOM message.\n */\nenum EmbeddedMessageType {\n  GEDCOM = 'gedcom',\n  READY = 'ready',\n  PARENT_READY = 'parent_ready',\n}\n\n/** Message sent to parent or received from parent in embedded mode. */\ninterface EmbeddedMessage {\n  message: EmbeddedMessageType;\n}\n\ninterface GedcomMessage extends EmbeddedMessage {\n  message: EmbeddedMessageType.GEDCOM;\n  gedcom?: string;\n}\n\nexport interface EmbeddedSourceSpec {\n  source: DataSourceEnum.EMBEDDED;\n}\n\n/** GEDCOM file received from outside of the iframe. */\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\n  isNewData(\n    newSource: SourceSelection<EmbeddedSourceSpec>,\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    // Never reload data.\n    return false;\n  }\n\n  private async onMessage(\n    message: EmbeddedMessage,\n    resolve: (value: TopolaData) => void,\n    reject: (reason: any) => void,\n  ) {\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\n      const gedcom = (message as GedcomMessage).gedcom;\n      if (!gedcom) {\n        return;\n      }\n      try {\n        const data = await loadGedcom('', gedcom);\n        const software = getSoftware(data.gedcom.head);\n        analyticsEvent('embedded_file_loaded', {\n          event_label: software,\n        });\n        resolve(data);\n      } catch (error) {\n        analyticsEvent('embedded_file_error');\n        reject(error);\n      }\n    }\n  }\n\n  async loadData(\n    source: SourceSelection<EmbeddedSourceSpec>,\n  ): Promise<TopolaData> {\n    // Notify the parent window that we are ready.\n    return new Promise<TopolaData>((resolve, reject) => {\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\n      window.addEventListener('message', (data) =>\n        this.onMessage(data.data, resolve, reject),\n      );\n    });\n  }\n}\n","import {IntlShape} from 'react-intl';\nimport {TopolaError} from './error';\n\n/**\n * Returns a translated message for the given error. If the message can't be\n * translated, the original error.message is returned.\n */\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\n  if (!(error instanceof TopolaError)) {\n    return error.message;\n  }\n  return intl.formatMessage(\n    {\n      id: `error.${error.code}`,\n      defaultMessage: error.message,\n    },\n    error.args,\n  );\n}\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import {createMedia} from '@artsy/fresnel';\n\n/** Defines the breakpoints at which to show different UI variants.*/\nconst AppMedia = createMedia({\n  breakpoints: {\n    small: 320,\n    large: 768,\n  },\n});\nexport const mediaStyles = AppMedia.createMediaStyle();\nexport const {Media, MediaContextProvider} = AppMedia;\n","import * as queryString from 'query-string';\nimport {useEffect, useState} from 'react';\nimport logo from './topola.jpg';\nimport {Card, Grid, Image} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Media} from './util/media';\nimport {getChangelog, updateSeenVersion} from './changelog';\n\n/** Link that loads a GEDCOM file from URL. */\nfunction GedcomLink(props: {url: string; text: string}) {\n  return (\n    <Link\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\n    >\n      {props.text}\n    </Link>\n  );\n}\n\nfunction formatBuildDate(dateString: string) {\n  return dateString?.slice(0, 16) || '';\n}\n\nfunction Contents() {\n  const [changelog, setChangelog] = useState('');\n  useEffect(() => {\n    (async () => {\n      setChangelog(await getChangelog(1));\n      updateSeenVersion();\n    })();\n  });\n\n  return (\n    <>\n      <p>\n        <FormattedMessage\n          id=\"intro.description\"\n          defaultMessage={\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\n            ' browse the structure of the family.'\n          }\n        />\n      </p>\n      <p>\n        <FormattedMessage\n          id=\"intro.instructions\"\n          defaultMessage={\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\n            ' existing genealogy programs and web sites.'\n          }\n        />\n      </p>\n\n      <h3>\n        <FormattedMessage id=\"intro.examples\" defaultMessage=\"Examples\" />\n      </h3>\n      <ul>\n        <li>\n          <GedcomLink\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\n            text=\"Karol Wojtyła\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\n            GENPOL\n          </a>\n          )\n        </li>\n        <li>\n          <GedcomLink\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\n            text=\"Shakespeare\"\n          />{' '}\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\n            webtreeprint.com\n          </a>\n          )\n        </li>\n      </ul>\n\n      <h3>\n        <FormattedMessage id=\"intro.whats_new\" defaultMessage=\"What's new\" />\n      </h3>\n      <span dangerouslySetInnerHTML={{__html: changelog}} />\n      <a href=\"https://github.com/PeWu/topola-viewer/blob/master/CHANGELOG.md\">\n        <FormattedMessage\n          id=\"intro.full_changelog\"\n          defaultMessage=\"See full changelog\"\n        />\n      </a>\n\n      <h3>\n        <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\n      </h3>\n      <FormattedMessage\n        id=\"intro.privacy_note\"\n        defaultMessage={\n          'When using the \"load from file\" option, this site does not' +\n          ' send your data anywhere and files loaded from disk do not' +\n          ' leave your computer. When using \"load from URL\", data is' +\n          ' passed through the {link} service to deal with an issue with' +\n          ' cross-site file loading in the browser (CORS).'\n        }\n        values={{\n          link: <a href=\"https://topola-cors.herokuapp.com/\">cors-anywhere</a>,\n        }}\n      />\n\n      <p className=\"ui right aligned version\">\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\n        <a\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\n        >\n          {process.env.REACT_APP_GIT_SHA}\n        </a>\n        )\n      </p>\n    </>\n  );\n}\n\n/** The intro page. */\nexport function Intro() {\n  return (\n    <div id=\"content\">\n      <div className=\"backgroundImage\" />\n      <Card className=\"intro\">\n        <Card.Content as={Media} greaterThanOrEqual=\"large\">\n          <Card.Header>\n            <FormattedMessage\n              id=\"intro.title\"\n              defaultMessage=\"Topola Genealogy Viewer\"\n            />\n          </Card.Header>\n        </Card.Content>\n        <Card.Content>\n          <Grid as={Media} greaterThanOrEqual=\"large\">\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Image src={logo} alt=\"Topola logo\" />\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <Contents />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Media at=\"small\">\n            <Image\n              src={logo}\n              alt=\"Topola logo\"\n              centered={true}\n              size=\"tiny\"\n              className=\"blockImage\"\n            />\n            <Contents />\n          </Media>\n        </Card.Content>\n      </Card>\n    </div>\n  );\n}\n","import {\n  Menu,\n  Dropdown,\n  MenuItemProps,\n  DropdownItemProps,\n} from 'semantic-ui-react';\n\nexport enum MenuType {\n  Menu,\n  Dropdown,\n}\n\ninterface Props {\n  menuType?: MenuType;\n}\n\nexport function MenuItem(props: Props & MenuItemProps & DropdownItemProps) {\n  const newProps = {...props};\n  // Remove menuType from props to avoid error message in the console.\n  delete newProps.menuType;\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <Menu.Item {...newProps}>{props.children}</Menu.Item>\n      ) : (\n        <Dropdown.Item {...newProps}>{props.children}</Dropdown.Item>\n      )}\n    </>\n  );\n}\n","import lunr from 'lunr';\nimport naturalSort from 'javascript-natural-sort';\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\n\n// TODO: Add type declarations and use import instead of require.\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\nrequire('lunr-languages/lunr.multi')(lunr);\nrequire('lunr-languages/lunr.de')(lunr);\nrequire('lunr-languages/lunr.fr')(lunr);\nrequire('lunr-languages/lunr.it')(lunr);\nrequire('lunr-languages/lunr.ru')(lunr);\n\nconst MAX_RESULTS = 8;\n\nexport interface SearchResult {\n  id: string;\n  indi: JsonIndi;\n}\n\nexport interface SearchIndex {\n  search(input: string): SearchResult[];\n}\n\n/** Removes accents from letters, e.g. ó->o, ę->e. */\nfunction normalize(input: string) {\n  return input\n    .toLocaleLowerCase()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\n}\n\n/** Comparator to sort by score first, then by id. */\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\n  if (a.score !== b.score) {\n    return b.score - a.score;\n  }\n  return naturalSort(a.ref, b.ref);\n}\n\n/** Returns all last names of all husbands as a space-separated string. */\nfunction getHusbandLastName(\n  indi: JsonIndi,\n  indiMap: Map<String, JsonIndi>,\n  famMap: Map<string, JsonFam>,\n): string {\n  return (indi.fams || [])\n    .map((famId) => famMap.get(famId))\n    .map((fam) => fam && fam.husb)\n    .map((husbId) => husbId && indiMap.get(husbId))\n    .map((husband) => husband && husband.lastName)\n    .join(' ');\n}\n\nclass LunrSearchIndex implements SearchIndex {\n  private index: lunr.Index | undefined;\n  private indiMap: Map<string, JsonIndi>;\n  private famMap: Map<string, JsonFam>;\n\n  constructor(data: JsonGedcomData) {\n    this.indiMap = idToIndiMap(data);\n    this.famMap = idToFamMap(data);\n  }\n\n  initialize() {\n    const self = this;\n    this.index = lunr(function () {\n      this.use((lunr as any).multiLanguage('de', 'en', 'fr', 'it', 'ru'));\n      this.ref('id');\n      this.field('id');\n      this.field('name', {boost: 10});\n      this.field('normalizedName', {boost: 8});\n      this.field('spouseLastName', {boost: 2});\n      this.field('normalizedSpouseLastName', {boost: 2});\n\n      self.indiMap.forEach((indi) => {\n        const name = [indi.firstName, indi.lastName].join(' ');\n        const spouseLastName = getHusbandLastName(\n          indi,\n          self.indiMap,\n          self.famMap,\n        );\n        this.add({\n          id: indi.id,\n          name,\n          normalizedName: normalize(name),\n          spouseLastName,\n          normalizedSpouseLastName: normalize(spouseLastName),\n        });\n      });\n    });\n  }\n\n  public search(input: string): SearchResult[] {\n    const query = input\n      .split(' ')\n      .filter((s) => !!s)\n      .map((s) => `${s} ${s}*`)\n      .join(' ');\n    const results = this.index!.search(query);\n    return results\n      .sort(compare)\n      .slice(0, MAX_RESULTS)\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\n  }\n}\n\n/** Builds a search index from data. */\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\n  const index = new LunrSearchIndex(data);\n  index.initialize();\n  return index;\n}\n","import debounce from 'debounce';\nimport {analyticsEvent} from '../util/analytics';\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\nimport {formatDateOrRange} from '../util/date_util';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {JsonIndi} from 'topola';\nimport {Search, SearchResultProps} from 'semantic-ui-react';\nimport {useEffect, useRef, useState} from 'react';\nimport {useIntl} from 'react-intl';\n\nfunction getNameLine(result: SearchResult) {\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\n  if (result.id.length > 8) {\n    return name;\n  }\n  return (\n    <>\n      {name} <i>({result.id})</i>\n    </>\n  );\n}\n\ninterface Props {\n  /** Data used for the search index. */\n  data: JsonGedcomData;\n  onSelection: (indiInfo: IndiInfo) => void;\n}\n\n/** Displays and handles the search box in the top bar. */\nexport function SearchBar(props: Props) {\n  const [searchResults, setSearchResults] = useState<SearchResultProps[]>([]);\n  const [searchString, setSearchString] = useState('');\n  const searchIndex = useRef<SearchIndex>();\n  const intl = useIntl();\n\n  function getDescriptionLine(indi: JsonIndi) {\n    const birthDate = formatDateOrRange(indi.birth, intl);\n    const deathDate = formatDateOrRange(indi.death, intl);\n    if (!deathDate) {\n      return birthDate;\n    }\n    return `${birthDate} – ${deathDate}`;\n  }\n\n  /** Produces an object that is displayed in the Semantic UI Search results. */\n  function displaySearchResult(result: SearchResult): SearchResultProps {\n    return {\n      id: result.id,\n      key: result.id,\n      title: getNameLine(result),\n      description: getDescriptionLine(result.indi),\n    } as SearchResultProps;\n  }\n\n  /** On search input change. */\n  function handleSearch(input: string | undefined) {\n    if (!input) {\n      return;\n    }\n    const results = searchIndex\n      .current!.search(input)\n      .map((result) => displaySearchResult(result));\n    setSearchResults(results);\n  }\n  const debouncedHandleSearch = useRef(debounce(handleSearch, 200));\n\n  /** On search result selected. */\n  function handleResultSelect(id: string) {\n    analyticsEvent('search_result_selected');\n    props.onSelection({id, generation: 0});\n    setSearchString('');\n  }\n\n  /** On search string changed. */\n  function onChange(value: string) {\n    debouncedHandleSearch.current(value);\n    setSearchString(value);\n  }\n\n  // Initialize the search index.\n  useEffect(() => {\n    searchIndex.current = buildSearchIndex(props.data);\n  }, [props.data]);\n\n  return (\n    <Search\n      onSearchChange={(_, data) => onChange(data.value!)}\n      onResultSelect={(_, data) => handleResultSelect(data.result.id)}\n      results={searchResults}\n      noResultsMessage={intl.formatMessage({\n        id: 'menu.search.no_results',\n        defaultMessage: 'No results found',\n      })}\n      placeholder={intl.formatMessage({\n        id: 'menu.search.placeholder',\n        defaultMessage: 'Search for people',\n      })}\n      selectFirstResult={true}\n      value={searchString}\n      id=\"search\"\n    />\n  );\n}\n","import * as queryString from 'query-string';\nimport md5 from 'md5';\nimport {analyticsEvent} from '../util/analytics';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuType} from './menu_item';\nimport {SyntheticEvent} from 'react';\nimport {useHistory, useLocation} from 'react-router';\n\nfunction loadFileAsText(file: File): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = (evt: ProgressEvent) => {\n      resolve((evt.target as FileReader).result as string);\n    };\n    reader.readAsText(file);\n  });\n}\n\nfunction isImageFileName(fileName: string) {\n  const lower = fileName.toLowerCase();\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\n}\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open file\" menu. */\nexport function UploadMenu(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  async function handleUpload(event: SyntheticEvent<HTMLInputElement>) {\n    const files = (event.target as HTMLInputElement).files;\n    if (!files || !files.length) {\n      return;\n    }\n    const filesArray = Array.from(files);\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\n    analyticsEvent('upload_files_selected', {\n      event_value: files.length,\n    });\n\n    const gedcomFile =\n      filesArray.length === 1\n        ? filesArray[0]\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\n          filesArray[0];\n\n    // Convert uploaded images to object URLs.\n    const images = filesArray\n      .filter(\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\n      )\n      .map((file) => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n      }));\n    const imageMap = new Map(\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\n    );\n\n    const data = await loadFileAsText(gedcomFile);\n    const imageFileNames = images\n      .map((image) => image.name)\n      .sort()\n      .join('|');\n    // Hash GEDCOM contents with uploaded image file names.\n    const hash = md5(md5(data) + imageFileNames);\n\n    // Use history.replace() when reuploading the same file and history.push() when loading\n    // a new file.\n    const search = queryString.parse(location.search);\n    const historyPush = search.file === hash ? history.replace : history.push;\n\n    historyPush({\n      pathname: '/view',\n      search: queryString.stringify({file: hash}),\n      state: {data, images: imageMap},\n    });\n  }\n\n  const content = (\n    <>\n      <Icon name=\"folder open\" />\n      <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\n    </>\n  );\n  return (\n    <>\n      {props.menuType === MenuType.Menu ? (\n        <label htmlFor=\"fileInput\">\n          <Menu.Item as=\"a\">{content}</Menu.Item>\n        </label>\n      ) : (\n        <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\n          {content}\n        </Dropdown.Item>\n      )}\n      <input\n        className=\"hidden\"\n        type=\"file\"\n        accept=\".ged,image/*\"\n        id=\"fileInput\"\n        multiple\n        onChange={handleUpload}\n      />\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory} from 'react-router';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Open URL\" menu. */\nexport function UrlMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [url, setUrl] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setUrl('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Load button clicked in the \"Load from URL\" dialog. */\n  function handleLoad() {\n    setDialogOpen(false);\n    if (url) {\n      analyticsEvent('url_selected');\n      history.push({\n        pathname: '/view',\n        search: queryString.stringify({url}),\n      });\n    }\n  }\n\n  function loadFromUrlModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <Icon name=\"cloud download\" />\n          <FormattedMessage\n            id=\"load_from_url.title\"\n            defaultMessage=\"Load from URL\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleLoad}>\n            <Input\n              placeholder=\"https://\"\n              fluid\n              value={url}\n              onChange={(_, data) => setUrl(data.value)}\n              ref={inputRef}\n            />\n            <p>\n              <FormattedMessage\n                id=\"load_from_url.comment\"\n                defaultMessage={\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\n                }\n                values={{\n                  link: (\n                    <a href=\"https://topola-cors.herokuapp.com/\">\n                      topola-cors.herokuapp.com\n                    </a>\n                  ),\n                }}\n              />\n            </p>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"load_from_url.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleLoad}>\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem onClick={() => setDialogOpen(true)} menuType={props.menuType}>\n        <Icon name=\"cloud download\" />\n        <FormattedMessage\n          id=\"menu.load_from_url\"\n          defaultMessage=\"Load from URL\"\n        />\n      </MenuItem>\n      {loadFromUrlModal()}\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import * as queryString from 'query-string';\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {IndiInfo, JsonGedcomData} from 'topola';\nimport {Link} from 'react-router-dom';\nimport {Media} from '../util/media';\nimport {MenuType} from './menu_item';\nimport {SearchBar} from './search';\nimport {UploadMenu} from './upload_menu';\nimport {UrlMenu} from './url_menu';\nimport {useHistory, useLocation} from 'react-router';\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\n\nenum ScreenSize {\n  LARGE,\n  SMALL,\n}\n\ninterface EventHandlers {\n  onSelection: (indiInfo: IndiInfo) => void;\n  onPrint: () => void;\n  onDownloadPdf: () => void;\n  onDownloadPng: () => void;\n  onDownloadSvg: () => void;\n}\n\ninterface Props {\n  /** True if the application is currently showing a chart. */\n  showingChart: boolean;\n  /** Data used for the search index. */\n  data?: JsonGedcomData;\n  standalone: boolean;\n  /** Whether to show the \"All relatives\" chart type in the menu. */\n  allowAllRelativesChart: boolean;\n  eventHandlers: EventHandlers;\n  /** Whether to show additional WikiTree menus. */\n  showWikiTreeMenus: boolean;\n}\n\nexport function TopBar(props: Props) {\n  const history = useHistory();\n  const location = useLocation();\n\n  function changeView(view: string) {\n    const search = queryString.parse(location.search);\n    if (search.view !== view) {\n      search.view = view;\n      location.search = queryString.stringify(search);\n      history.push(location);\n    }\n  }\n\n  function chartMenus(screenSize: ScreenSize) {\n    if (!props.showingChart) {\n      return null;\n    }\n    const chartTypeItems = (\n      <>\n        <Dropdown.Item onClick={() => changeView('hourglass')}>\n          <Icon name=\"hourglass\" />\n          <FormattedMessage\n            id=\"menu.hourglass\"\n            defaultMessage=\"Hourglass chart\"\n          />\n        </Dropdown.Item>\n        {props.allowAllRelativesChart ? (\n          <Dropdown.Item onClick={() => changeView('relatives')}>\n            <Icon name=\"users\" />\n            <FormattedMessage\n              id=\"menu.relatives\"\n              defaultMessage=\"All relatives\"\n            />\n          </Dropdown.Item>\n        ) : null}\n        <Dropdown.Item onClick={() => changeView('fancy')}>\n          <Icon name=\"users\" />\n          <FormattedMessage\n            id=\"menu.fancy\"\n            defaultMessage=\"Fancy tree (experimental)\"\n          />\n        </Dropdown.Item>\n      </>\n    );\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        return (\n          <>\n            <Menu.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Menu.Item>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"download\" />\n                  <FormattedMessage\n                    id=\"menu.download\"\n                    defaultMessage=\"Download\"\n                  />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n                  <FormattedMessage\n                    id=\"menu.pdf_file\"\n                    defaultMessage=\"PDF file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n                  <FormattedMessage\n                    id=\"menu.png_file\"\n                    defaultMessage=\"PNG file\"\n                  />\n                </Dropdown.Item>\n                <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n                  <FormattedMessage\n                    id=\"menu.svg_file\"\n                    defaultMessage=\"SVG file\"\n                  />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown\n              trigger={\n                <div>\n                  <Icon name=\"eye\" />\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\n                </div>\n              }\n              className=\"item\"\n            >\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\n            </Dropdown>\n            <SearchBar\n              data={props.data!}\n              onSelection={props.eventHandlers.onSelection}\n              {...props}\n            />\n          </>\n        );\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <Dropdown.Item onClick={props.eventHandlers.onPrint}>\n              <Icon name=\"print\" />\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPdf}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_pdf\"\n                defaultMessage=\"Downlod PDF\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadPng}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_png\"\n                defaultMessage=\"Download PNG\"\n              />\n            </Dropdown.Item>\n            <Dropdown.Item onClick={props.eventHandlers.onDownloadSvg}>\n              <Icon name=\"download\" />\n              <FormattedMessage\n                id=\"menu.download_svg\"\n                defaultMessage=\"Download SVG\"\n              />\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            {chartTypeItems}\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function title() {\n    return (\n      <Menu.Item>\n        <b>Topola Genealogy</b>\n      </Menu.Item>\n    );\n  }\n\n  function fileMenus(screenSize: ScreenSize) {\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\n    if (!props.standalone && props.showWikiTreeMenus) {\n      switch (screenSize) {\n        case ScreenSize.LARGE:\n          return <WikiTreeMenu menuType={MenuType.Menu} {...props} />;\n        case ScreenSize.SMALL:\n          return (\n            <>\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n              <Dropdown.Divider />\n            </>\n          );\n      }\n    }\n\n    // Don't show \"open\" menus in non-standalone mode.\n    if (!props.standalone) {\n      return null;\n    }\n\n    switch (screenSize) {\n      case ScreenSize.LARGE:\n        // Show dropdown if chart is shown, otherwise show individual menu\n        // items.\n        const menus = props.showingChart ? (\n          <Dropdown\n            trigger={\n              <div>\n                <Icon name=\"folder open\" />\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\n              </div>\n            }\n            className=\"item\"\n          >\n            <Dropdown.Menu>\n              <UploadMenu menuType={MenuType.Dropdown} {...props} />\n              <UrlMenu menuType={MenuType.Dropdown} {...props} />\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            </Dropdown.Menu>\n          </Dropdown>\n        ) : (\n          <>\n            <UploadMenu menuType={MenuType.Menu} {...props} />\n            <UrlMenu menuType={MenuType.Menu} {...props} />\n            <WikiTreeMenu menuType={MenuType.Menu} {...props} />\n          </>\n        );\n        return menus;\n\n      case ScreenSize.SMALL:\n        return (\n          <>\n            <UploadMenu menuType={MenuType.Dropdown} {...props} />\n            <UrlMenu menuType={MenuType.Dropdown} {...props} />\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...props} />\n            <Dropdown.Divider />\n          </>\n        );\n    }\n  }\n\n  function wikiTreeLoginMenu(screenSize: ScreenSize) {\n    if (!props.showWikiTreeMenus) {\n      return null;\n    }\n    return (\n      <>\n        <WikiTreeLoginMenu\n          menuType={\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\n          }\n          {...props}\n        />\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\n      </>\n    );\n  }\n\n  function mobileMenus() {\n    return (\n      <>\n        <Dropdown\n          trigger={\n            <div>\n              <Icon name=\"sidebar\" />\n            </div>\n          }\n          className=\"item\"\n          icon={null}\n        >\n          <Dropdown.Menu>\n            {fileMenus(ScreenSize.SMALL)}\n            {chartMenus(ScreenSize.SMALL)}\n            {wikiTreeLoginMenu(ScreenSize.SMALL)}\n\n            <Dropdown.Item\n              href=\"https://github.com/PeWu/topola-viewer\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <FormattedMessage\n                id=\"menu.github\"\n                defaultMessage=\"GitHub project\"\n              />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : title()}\n      </>\n    );\n  }\n\n  function desktopMenus() {\n    return (\n      <>\n        {props.standalone ? <Link to=\"/\">{title()}</Link> : null}\n        {fileMenus(ScreenSize.LARGE)}\n        {chartMenus(ScreenSize.LARGE)}\n        <Menu.Menu position=\"right\">\n          {wikiTreeLoginMenu(ScreenSize.LARGE)}\n          <Menu.Item\n            href=\"https://github.com/PeWu/topola-viewer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <FormattedMessage\n              id=\"menu.github\"\n              defaultMessage=\"GitHub project\"\n            />\n          </Menu.Item>\n        </Menu.Menu>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Menu\n        as={Media}\n        greaterThanOrEqual=\"large\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {desktopMenus()}\n      </Menu>\n      <Menu\n        as={Media}\n        at=\"small\"\n        attached=\"top\"\n        inverted\n        color=\"blue\"\n        size=\"large\"\n      >\n        {mobileMenus()}\n      </Menu>\n    </>\n  );\n}\n","import * as queryString from 'query-string';\nimport wikitreeLogo from './wikitree.png';\nimport {analyticsEvent} from '../util/analytics';\nimport {Button, Form, Header, Input, Modal} from 'semantic-ui-react';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {MenuItem, MenuType} from './menu_item';\nimport {useEffect, useRef, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {\n  getLoggedInUserName,\n  navigateToLoginPage,\n} from 'wikitree-js';\n\ninterface Props {\n  menuType: MenuType;\n}\n\n/** Displays and handles the \"Select WikiTree ID\" menu. */\nexport function WikiTreeMenu(props: Props) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [wikiTreeId, setWikiTreeId] = useState('');\n  const inputRef = useRef<Input>(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (dialogOpen) {\n      setWikiTreeId('');\n      inputRef.current!.focus();\n    }\n  }, [dialogOpen]);\n\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\n  function handleSelectId() {\n    setDialogOpen(false);\n    if (!wikiTreeId) {\n      return;\n    }\n    analyticsEvent('wikitree_id_selected');\n    const search = queryString.parse(location.search);\n    const standalone =\n      search.standalone !== undefined ? search.standalone : true;\n    history.push({\n      pathname: '/view',\n      search: queryString.stringify({\n        indi: wikiTreeId,\n        source: 'wikitree',\n        standalone,\n      }),\n    });\n  }\n\n  function enterId(event: React.MouseEvent, id: string) {\n    event.preventDefault(); // Do not follow link in href.\n    setWikiTreeId(id);\n    inputRef.current!.focus();\n  }\n\n  function wikiTreeIdModal() {\n    return (\n      <Modal\n        open={dialogOpen}\n        onClose={() => setDialogOpen(false)}\n        centered={false}\n      >\n        <Header>\n          <img\n            src={wikitreeLogo}\n            alt=\"WikiTree logo\"\n            style={{width: '32px', height: '32px'}}\n          />\n          <FormattedMessage\n            id=\"select_wikitree_id.title\"\n            defaultMessage=\"Select WikiTree ID\"\n          />\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={handleSelectId}>\n            <p>\n              <FormattedMessage\n                id=\"select_wikitree_id.comment\"\n                defaultMessage={\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\n                }\n                values={{\n                  wikiTreeLink: (\n                    <a\n                      href=\"https://wikitree.com/\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      WikiTree\n                    </a>\n                  ),\n                  example1: (\n                    <span\n                      onClick={(e) => enterId(e, 'Wojtyla-13')}\n                      className=\"link-span\"\n                    >\n                      Wojtyla-13\n                    </span>\n                  ),\n                  example2: (\n                    <span\n                      onClick={(e) => enterId(e, 'Skłodowska-2')}\n                      className=\"link-span\"\n                    >\n                      Skłodowska-2\n                    </span>\n                  ),\n                }}\n              />\n            </p>\n            <Input\n              fluid\n              value={wikiTreeId}\n              onChange={(_, data) => setWikiTreeId(data.value)}\n              ref={inputRef}\n            />\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button secondary onClick={() => setDialogOpen(false)}>\n            <FormattedMessage\n              id=\"select_wikitree_id.cancel\"\n              defaultMessage=\"Cancel\"\n            />\n          </Button>\n          <Button primary onClick={handleSelectId}>\n            <FormattedMessage\n              id=\"select_wikitree_id.load\"\n              defaultMessage=\"Load\"\n            />\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  return (\n    <>\n      <MenuItem menuType={props.menuType} onClick={() => setDialogOpen(true)}>\n        <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n        <FormattedMessage\n          id=\"menu.select_wikitree_id\"\n          defaultMessage=\"Select WikiTree ID\"\n        />\n      </MenuItem>\n      {wikiTreeIdModal()}\n    </>\n  );\n}\n\n/** Displays and handles the \"Log in to WikiTree\" menu. */\nexport function WikiTreeLoginMenu(props: Props) {\n  const intl = useIntl();\n\n  /**\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\n   * Topola Viewer hosted on apps.wikitree.com.\n   */\n  function login() {\n    const wikiTreeTopolaUrl =\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\n    // TODO: remove authcode if it is in the current URL.\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}`;\n    navigateToLoginPage(returnUrl);\n  }\n\n  const username = getLoggedInUserName();\n  if (!username) {\n    return (\n      <>\n        <MenuItem menuType={props.menuType} onClick={login}>\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n          <FormattedMessage\n            id=\"menu.wikitree_login\"\n            defaultMessage=\"Log in to WikiTree\"\n          />\n        </MenuItem>\n      </>\n    );\n  }\n  const tooltip = intl.formatMessage(\n    {\n      id: 'menu.wikitree_popup_username',\n      defaultMessage: 'Logged in to WikiTree as {username}',\n    },\n    {username},\n  );\n  return (\n    <MenuItem menuType={props.menuType} title={tooltip}>\n      <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\n      <FormattedMessage\n        id=\"menu.wikitree_logged_in\"\n        defaultMessage=\"Logged in\"\n      />\n    </MenuItem>\n  );\n}\n","import {Item, Checkbox, Form, Header} from 'semantic-ui-react';\nimport {FormattedMessage} from 'react-intl';\nimport {ParsedQuery} from 'query-string';\n\nexport enum ChartColors {\n  NO_COLOR,\n  COLOR_BY_SEX,\n  COLOR_BY_GENERATION,\n}\n\nexport interface Config {\n  color: ChartColors;\n}\n\nexport const DEFALUT_CONFIG: Config = {\n  color: ChartColors.COLOR_BY_GENERATION,\n};\n\nconst COLOR_ARG = new Map<string, ChartColors>([\n  ['n', ChartColors.NO_COLOR],\n  ['g', ChartColors.COLOR_BY_GENERATION],\n  ['s', ChartColors.COLOR_BY_SEX],\n]);\nconst COLOR_ARG_INVERSE = new Map<ChartColors, string>();\nCOLOR_ARG.forEach((v, k) => COLOR_ARG_INVERSE.set(v, k));\n\nexport function argsToConfig(args: ParsedQuery<any>): Config {\n  const getParam = (name: string) => {\n    const value = args[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  return {\n    color: COLOR_ARG.get(getParam('c') ?? '') ?? DEFALUT_CONFIG.color,\n  };\n}\n\nexport function configToArgs(config: Config): ParsedQuery<any> {\n  return {c: COLOR_ARG_INVERSE.get(config.color)};\n}\n\nexport function ConfigPanel(props: {\n  config: Config;\n  onChange: (config: Config) => void;\n}) {\n  return (\n    <Form className=\"details\">\n      <Item.Group>\n        <Item>\n          <Item.Content>\n            <Header sub>\n              <FormattedMessage id=\"config.colors\" defaultMessage=\"Colors\" />\n            </Header>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.NO_COLOR\"\n                    defaultMessage=\"none\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"none\"\n                checked={props.config.color === ChartColors.NO_COLOR}\n                onClick={() => props.onChange({color: ChartColors.NO_COLOR})}\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.COLOR_BY_GENERATION\"\n                    defaultMessage=\"by generation\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"generation\"\n                checked={props.config.color === ChartColors.COLOR_BY_GENERATION}\n                onClick={() =>\n                  props.onChange({color: ChartColors.COLOR_BY_GENERATION})\n                }\n              />\n            </Form.Field>\n            <Form.Field className=\"no-margin\">\n              <Checkbox\n                radio\n                label={\n                  <FormattedMessage\n                    tagName=\"label\"\n                    id=\"config.colors.COLOR_BY_SEX\"\n                    defaultMessage=\"by sex\"\n                  />\n                }\n                name=\"checkboxRadioGroup\"\n                value=\"gender\"\n                checked={props.config.color === ChartColors.COLOR_BY_SEX}\n                onClick={() =>\n                  props.onChange({color: ChartColors.COLOR_BY_SEX})\n                }\n              />\n            </Form.Field>\n          </Item.Content>\n        </Item>\n      </Item.Group>\n    </Form>\n  );\n}\n","import {ChartColors} from './config';\nimport {interpolateNumber} from 'd3-interpolate';\nimport {IntlShape, useIntl} from 'react-intl';\nimport {max, min} from 'd3-array';\nimport {Media} from './util/media';\nimport {saveAs} from 'file-saver';\nimport {select, Selection} from 'd3-selection';\nimport {useEffect, useRef} from 'react';\nimport 'd3-transition';\nimport {\n  D3ZoomEvent,\n  zoom,\n  ZoomBehavior,\n  ZoomedElementBaseType,\n  zoomTransform,\n} from 'd3-zoom';\nimport {\n  JsonGedcomData,\n  ChartHandle,\n  IndiInfo,\n  createChart,\n  DetailedRenderer,\n  HourglassChart,\n  RelativesChart,\n  FancyChart,\n  CircleRenderer,\n  ChartColors as TopolaChartColors,\n} from 'topola';\n\n/** How much to zoom when using the +/- buttons. */\nconst ZOOM_FACTOR = 1.3;\n\n/**\n * Called when the view is dragged with the mouse.\n *\n * @param size the size of the chart\n */\nfunction zoomed(\n  size: [number, number],\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\n) {\n  const parent = select('#svgContainer').node() as Element;\n\n  const scale = event.transform.k;\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\n  select('#chartSvg')\n    .attr('width', size[0] * scale)\n    .attr('height', size[1] * scale)\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\n  select('#chart').attr('transform', `scale(${scale})`);\n\n  parent.scrollLeft = -event.transform.x;\n  parent.scrollTop = -event.transform.y;\n}\n\n/** Called when the scrollbars are used. */\nfunction scrolled() {\n  const parent = select('#svgContainer').node() as Element;\n  const x = parent.scrollLeft + parent.clientWidth / 2;\n  const y = parent.scrollTop + parent.clientHeight / 2;\n  const scale = zoomTransform(parent).k;\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\n}\n\n/** Loads blob as data URL. */\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\n  });\n}\n\nasync function inlineImage(image: SVGImageElement) {\n  const href = image.href.baseVal;\n  if (!href) {\n    return;\n  }\n  try {\n    const response = await fetch(href);\n    const blob = await response.blob();\n    const dataUrl = await loadAsDataUrl(blob);\n    image.href.baseVal = dataUrl;\n  } catch (e) {\n    console.warn('Failed to load image:', e);\n  }\n}\n\n/**\n * Fetches all images in the SVG and replaces them with inlined images as data\n * URLs. Images are replaced in place. The replacement is done, the returned\n * promise is resolved.\n */\nasync function inlineImages(svg: Element): Promise<void> {\n  const images = Array.from(svg.getElementsByTagName('image'));\n  await Promise.all(images.map(inlineImage));\n}\n\n/** Loads a blob into an image object. */\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\n  const image = new Image();\n  image.src = URL.createObjectURL(blob);\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    image.addEventListener('load', () => resolve(image));\n  });\n}\n\n/** Draw image on a new canvas and return the canvas. */\nfunction drawImageOnCanvas(image: HTMLImageElement) {\n  const canvas = document.createElement('canvas');\n  // Scale image for better quality.\n  canvas.width = image.width * 2;\n  canvas.height = image.height * 2;\n\n  const ctx = canvas.getContext('2d')!;\n  const oldFill = ctx.fillStyle;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = oldFill;\n\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n  return canvas;\n}\n\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob) {\n        resolve(blob);\n      } else {\n        reject();\n      }\n    }, type);\n  });\n}\n\n/** Return a copy of the SVG chart but without scaling and positioning. */\nfunction getStrippedSvg() {\n  const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\n\n  svg.removeAttribute('transform');\n  const parent = select('#svgContainer').node() as Element;\n  const scale = zoomTransform(parent).k;\n  svg.setAttribute('width', String(Number(svg.getAttribute('width')) / scale));\n  svg.setAttribute(\n    'height',\n    String(Number(svg.getAttribute('height')) / scale),\n  );\n  svg.querySelector('#chart')!.removeAttribute('transform');\n\n  return svg;\n}\n\nfunction getSvgContents() {\n  return new XMLSerializer().serializeToString(getStrippedSvg());\n}\n\nasync function getSvgContentsWithInlinedImages() {\n  const svg = getStrippedSvg();\n  await inlineImages(svg);\n  return new XMLSerializer().serializeToString(svg);\n}\n\n/** Shows the print dialog to print the currently displayed chart. */\nexport function printChart() {\n  const printWindow = document.createElement('iframe');\n  printWindow.style.position = 'absolute';\n  printWindow.style.top = '-1000px';\n  printWindow.style.left = '-1000px';\n  printWindow.onload = () => {\n    printWindow.contentDocument!.open();\n    printWindow.contentDocument!.write(getSvgContents());\n    printWindow.contentDocument!.close();\n    // Doesn't work on Firefox without the setTimeout.\n    setTimeout(() => {\n      printWindow.contentWindow!.focus();\n      printWindow.contentWindow!.print();\n      printWindow.parentNode!.removeChild(printWindow);\n    }, 500);\n  };\n  document.body.appendChild(printWindow);\n}\n\nexport async function downloadSvg() {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  saveAs(blob, 'topola.svg');\n}\n\nasync function drawOnCanvas(): Promise<HTMLCanvasElement> {\n  const contents = await getSvgContentsWithInlinedImages();\n  const blob = new Blob([contents], {type: 'image/svg+xml'});\n  return drawImageOnCanvas(await loadImage(blob));\n}\n\nexport async function downloadPng() {\n  const canvas = await drawOnCanvas();\n  const blob = await canvasToBlob(canvas, 'image/png');\n  saveAs(blob, 'topola.png');\n}\n\nexport async function downloadPdf() {\n  // Lazy load jspdf.\n  const {default: jspdf} = await import('jspdf');\n  const canvas = await drawOnCanvas();\n  const doc = new jspdf({\n    orientation: canvas.width > canvas.height ? 'l' : 'p',\n    unit: 'pt',\n    format: [canvas.width, canvas.height],\n  });\n  doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\n  doc.save('topola.pdf');\n}\n\n/** Supported chart types. */\nexport enum ChartType {\n  Hourglass,\n  Relatives,\n  Fancy,\n}\n\nconst chartColors = new Map<ChartColors, TopolaChartColors>([\n  [ChartColors.NO_COLOR, TopolaChartColors.NO_COLOR],\n  [ChartColors.COLOR_BY_GENERATION, TopolaChartColors.COLOR_BY_GENERATION],\n  [ChartColors.COLOR_BY_SEX, TopolaChartColors.COLOR_BY_SEX],\n]);\n\nfunction getChartType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Hourglass:\n      return HourglassChart;\n    case ChartType.Relatives:\n      return RelativesChart;\n    case ChartType.Fancy:\n      return FancyChart;\n    default:\n      // Fall back to hourglass chart.\n      return HourglassChart;\n  }\n}\n\nfunction getRendererType(chartType: ChartType) {\n  switch (chartType) {\n    case ChartType.Fancy:\n      return CircleRenderer;\n    default:\n      // Use DetailedRenderer by default.\n      return DetailedRenderer;\n  }\n}\n\nexport interface ChartProps {\n  data: JsonGedcomData;\n  selection: IndiInfo;\n  chartType: ChartType;\n  onSelection: (indiInfo: IndiInfo) => void;\n  freezeAnimation?: boolean;\n  colors?: ChartColors;\n}\n\nclass ChartWrapper {\n  private chart?: ChartHandle;\n  /** Animation is in progress. */\n  private animating = false;\n  /** Rendering is required after the current animation finishes. */\n  private rerenderRequired = false;\n  /** The d3 zoom behavior object. */\n  private zoomBehavior?: ZoomBehavior<Element, any>;\n  /** Props that will be used for rerendering. */\n  private rerenderProps?: ChartProps;\n  private rerenderResetPosition?: boolean;\n\n  zoom(factor: number) {\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\n    this.zoomBehavior!.scaleBy(parent, factor);\n  }\n\n  /**\n   * Renders the chart or performs a transition animation to a new state.\n   * If indiInfo is not given, it means that it is the initial render and no\n   * animation is performed.\n   */\n  renderChart(\n    props: ChartProps,\n    intl: IntlShape,\n    args: {initialRender: boolean; resetPosition: boolean} = {\n      initialRender: false,\n      resetPosition: false,\n    },\n  ) {\n    // Wait for animation to finish if animation is in progress.\n    if (!args.initialRender && this.animating) {\n      this.rerenderRequired = true;\n      this.rerenderProps = props;\n      this.rerenderResetPosition = args.resetPosition;\n      return;\n    }\n\n    // Freeze changing selection after initial rendering.\n    if (!args.initialRender && props.freezeAnimation) {\n      return;\n    }\n\n    if (args.initialRender) {\n      (select('#chart').node() as HTMLElement).innerHTML = '';\n      this.chart = createChart({\n        json: props.data,\n        chartType: getChartType(props.chartType),\n        renderer: getRendererType(props.chartType),\n        svgSelector: '#chart',\n        indiCallback: (info) => props.onSelection(info),\n        colors: chartColors.get(props.colors!),\n        animate: true,\n        updateSvgSize: false,\n        locale: intl.locale,\n      });\n    } else {\n      this.chart!.setData(props.data);\n    }\n    const chartInfo = this.chart!.render({\n      startIndi: props.selection.id,\n      baseGeneration: props.selection.generation,\n    });\n    const svg = select('#chartSvg');\n    const parent = select('#svgContainer').node() as Element;\n\n    const scale = zoomTransform(parent).k;\n    const zoomOutFactor = min([\n      1,\n      scale,\n      parent.clientWidth / chartInfo.size[0],\n      parent.clientHeight / chartInfo.size[1],\n    ])!;\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\n\n    this.zoomBehavior = zoom()\n      .scaleExtent(extent)\n      .translateExtent([[0, 0], chartInfo.size])\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\n\n    const scrollTopTween = (scrollTop: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\n        return (t: number) => {\n          parent.scrollTop = i(t);\n        };\n      };\n    };\n    const scrollLeftTween = (scrollLeft: number) => {\n      return () => {\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\n        return (t: number) => {\n          parent.scrollLeft = i(t);\n        };\n      };\n    };\n\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\n    const offsetX = max([\n      0,\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\n    ]);\n    const offsetY = max([\n      0,\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\n    ]);\n    const svgTransition = svg.transition().delay(200).duration(500);\n    const transition = args.initialRender ? svg : svgTransition;\n    transition\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\n      .attr('width', chartInfo.size[0] * scale)\n      .attr('height', chartInfo.size[1] * scale);\n    if (args.resetPosition) {\n      if (args.initialRender) {\n        parent.scrollLeft = -dx;\n        parent.scrollTop = -dy;\n      } else {\n        svgTransition\n          .tween('scrollLeft', scrollLeftTween(-dx))\n          .tween('scrollTop', scrollTopTween(-dy));\n      }\n    }\n\n    // After the animation is finished, rerender the chart if required.\n    this.animating = true;\n    chartInfo.animationPromise.then(() => {\n      this.animating = false;\n      if (this.rerenderRequired) {\n        this.rerenderRequired = false;\n        // Use `this.rerenderProps` instead of the props in scope because\n        // the props may have been updated in the meantime.\n        this.renderChart(this.rerenderProps!, intl, {\n          initialRender: false,\n          resetPosition: !!this.rerenderResetPosition,\n        });\n      }\n    });\n  }\n}\n\nfunction usePrevious<T>(value: T): T | undefined {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function Chart(props: ChartProps) {\n  const chartWrapper = useRef(new ChartWrapper());\n  const prevProps = usePrevious(props);\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (prevProps) {\n      const initialRender =\n        props.chartType !== prevProps?.chartType ||\n        props.colors !== prevProps?.colors;\n      const resetPosition =\n        props.chartType !== prevProps?.chartType ||\n        props.data !== prevProps.data ||\n        props.selection !== prevProps.selection;\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender,\n        resetPosition,\n      });\n    } else {\n      chartWrapper.current.renderChart(props, intl, {\n        initialRender: true,\n        resetPosition: true,\n      });\n    }\n  });\n\n  return (\n    <div id=\"svgContainer\">\n      <Media greaterThanOrEqual=\"large\" className=\"zoom\">\n        <button\n          className=\"zoom-in\"\n          onClick={() => chartWrapper.current.zoom(ZOOM_FACTOR)}\n        >\n          +\n        </button>\n        <button\n          className=\"zoom-out\"\n          onClick={() => chartWrapper.current.zoom(1 / ZOOM_FACTOR)}\n        >\n          −\n        </button>\n      </Media>\n      <svg id=\"chartSvg\">\n        <g id=\"chart\" />\n      </svg>\n    </div>\n  );\n}\n","import {analyticsEvent} from '../util/analytics';\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\nimport {\n  Date,\n  DateOrRange,\n  JsonEvent,\n  JsonFam,\n  JsonGedcomData,\n  JsonImage,\n  JsonIndi,\n} from 'topola';\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\nimport {GedcomEntry} from 'parse-gedcom';\nimport {IntlShape} from 'react-intl';\nimport {TopolaError} from '../util/error';\nimport {isValidDateOrRange} from '../util/date_util';\nimport {\n  getAncestors as getAncestorsApi,\n  getRelatives as getRelativesApi,\n  clientLogin,\n  getLoggedInUserName,\n  Person\n} from 'wikitree-js';\n\n/** Prefix for IDs of private individuals. */\nexport const PRIVATE_ID_PREFIX = '~Private';\n\n/** Gets item from session storage. Logs exception if one is thrown. */\nfunction getSessionStorageItem(key: string): string | null {\n  try {\n    return sessionStorage.getItem(key);\n  } catch (e) {\n    console.warn('Failed to load data from session storage: ' + e);\n  }\n  return null;\n}\n\n/** Sets item in session storage. Logs exception if one is thrown. */\nfunction setSessionStorageItem(key: string, value: string) {\n  try {\n    sessionStorage.setItem(key, value);\n  } catch (e) {\n    console.warn('Failed to store data in session storage: ' + e);\n  }\n}\n\nfunction getApiOptions(handleCors: boolean) {\n  return handleCors\n    ? {\n        apiUrl:\n          'https://topola-cors.herokuapp.com/https://api.wikitree.com/api.php',\n      }\n    : {};\n}\n\n/**\n * Retrieves ancestors from WikiTree for the given person ID.\n * Uses sessionStorage for caching responses.\n */\nasync function getAncestors(\n  key: string,\n  handleCors: boolean,\n): Promise<Person[]> {\n  const cacheKey = `wikitree:ancestors:${key}`;\n  const cachedData = getSessionStorageItem(cacheKey);\n  if (cachedData) {\n    return JSON.parse(cachedData);\n  }\n  const result = getAncestorsApi(key, {}, getApiOptions(handleCors));\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\n  return result;\n}\n\n/**\n * Retrieves relatives from WikiTree for the given array of person IDs.\n * Uses sessionStorage for caching responses.\n */\nasync function getRelatives(\n  keys: string[],\n  handleCors: boolean,\n): Promise<Person[]> {\n  const result: Person[] = [];\n  const keysToFetch: string[] = [];\n  keys.forEach((key) => {\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\n    if (cachedData) {\n      result.push(JSON.parse(cachedData));\n    } else {\n      keysToFetch.push(key);\n    }\n  });\n  if (keysToFetch.length === 0) {\n    return result;\n  }\n  const response = await getRelativesApi(\n    keysToFetch,\n    {getChildren: true, getSpouses: true},\n    getApiOptions(handleCors),\n  );\n  if (response === []) {\n    const id = keysToFetch[0];\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_FOUND',\n      `WikiTree profile ${id} not found`,\n      {id},\n    );\n  }\n  response.forEach((person) => {\n    setSessionStorageItem(\n      `wikitree:relatives:${person.Name}`,\n      JSON.stringify(person),\n    );\n  });\n  return result.concat(response);\n}\n\n/**\n * Loads data from WikiTree to populate an hourglass chart starting from the\n * given person ID.\n */\nexport async function loadWikiTree(\n  key: string,\n  intl: IntlShape,\n  authcode?: string,\n): Promise<TopolaData> {\n  // Work around CORS if not in apps.wikitree.com domain.\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\n\n  if (!handleCors && !getLoggedInUserName() && authcode) {\n    const loginResult = await clientLogin(authcode);\n    if (loginResult.result === 'Success') {\n      sessionStorage.clear();\n    }\n  }\n\n  const everyone: Person[] = [];\n\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\n  const firstPerson = await getRelatives([key], handleCors);\n  if (!firstPerson[0].Name) {\n    const id = key;\n    throw new TopolaError(\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\n      {id},\n    );\n  }\n\n  const spouseKeys = Object.values(firstPerson[0].Spouses || {}).map(\n    (s) => s.Name,\n  );\n  const ancestors = await Promise.all(\n    [key]\n      .concat(spouseKeys)\n      .map((personId) => getAncestors(personId, handleCors)),\n  );\n  const ancestorKeys = ancestors\n    .flat()\n    .map((person) => person.Name)\n    .filter((key) => !!key);\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\n\n  // Map from person id to father id if the father profile is private.\n  const privateFathers: Map<number, number> = new Map();\n  // Map from person id to mother id if the mother profile is private.\n  const privateMothers: Map<number, number> = new Map();\n\n  // Andujst private individual ids so that there are no collisions in the case\n  // that ancestors were collected for more than one person.\n  ancestors.forEach((ancestorList, index) => {\n    const offset = 1000 * index;\n    // Adjust ids by offset.\n    ancestorList.forEach((person) => {\n      if (person.Id < 0) {\n        person.Id -= offset;\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\n      }\n      if (person.Father < 0) {\n        person.Father -= offset;\n        privateFathers.set(person.Id, person.Father);\n      }\n      if (person.Mother < 0) {\n        person.Mother -= offset;\n        privateMothers.set(person.Id, person.Mother);\n      }\n    });\n  });\n\n  // Set the Father and Mother fields again because getRelatives doesn't return\n  // private parents.\n  ancestorDetails.forEach((person) => {\n    const privateFather = privateFathers.get(person.Id);\n    if (privateFather) {\n      person.Father = privateFather;\n    }\n    const privateMother = privateMothers.get(person.Id);\n    if (privateMother) {\n      person.Mother = privateMother;\n    }\n  });\n  everyone.push(...ancestorDetails);\n\n  // Collect private individuals.\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\n  everyone.push(...privateAncestors);\n\n  // Limit the number of generations of descendants because there may be tens of\n  // generations for some profiles.\n  const descendantGenerationLimit = 5;\n\n  // Fetch descendants recursively.\n  let toFetch = [key];\n  let generation = 0;\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\n    const people = await getRelatives(toFetch, handleCors);\n    everyone.push(...people);\n    const allSpouses = people.flatMap((person) =>\n      Object.values(person.Spouses || {}),\n    );\n    everyone.push(...allSpouses);\n    // Fetch all children.\n    toFetch = people.flatMap((person) =>\n      Object.values(person.Children || {}).map((c) => c.Name),\n    );\n    generation++;\n  }\n\n  // Map from person id to the set of families where they are a spouse.\n  const families = new Map<number, Set<string>>();\n  // Map from family id to the set of children.\n  const children = new Map<string, Set<number>>();\n  // Map from famliy id to the spouses.\n  const spouses = new Map<\n    string,\n    {wife?: number; husband?: number; spouse?: Person}\n  >();\n  // Map from numerical id to human-readable id.\n  const idToName = new Map<number, string>();\n  // Map from human-readable person id to fullSizeUrl of person photo.\n  const fullSizePhotoUrls: Map<string, string> = new Map();\n\n  everyone.forEach((person) => {\n    idToName.set(person.Id, person.Name);\n    if (person.Mother || person.Father) {\n      const famId = getFamilyId(person.Mother, person.Father);\n      getSet(families, person.Mother).add(famId);\n      getSet(families, person.Father).add(famId);\n      getSet(children, famId).add(person.Id);\n      spouses.set(famId, {\n        wife: person.Mother || undefined,\n        husband: person.Father || undefined,\n      });\n    }\n  });\n\n  const indis: JsonIndi[] = [];\n\n  const converted = new Set<number>();\n  everyone.forEach((person) => {\n    if (converted.has(person.Id)) {\n      return;\n    }\n    converted.add(person.Id);\n    const indi = convertPerson(person, intl);\n    if (person.PhotoData?.path) {\n      fullSizePhotoUrls.set(\n        person.Name,\n        `https://www.wikitree.com${person.PhotoData.path}`,\n      );\n    }\n    if (person.Spouses) {\n      Object.values(person.Spouses).forEach((spouse) => {\n        const famId = getFamilyId(person.Id, spouse.Id);\n        getSet(families, person.Id).add(famId);\n        getSet(families, spouse.Id).add(famId);\n        const familySpouses =\n          person.Gender === 'Male'\n            ? {wife: spouse.Id, husband: person.Id, spouse}\n            : {wife: person.Id, husband: spouse.Id, spouse};\n        spouses.set(famId, familySpouses);\n      });\n    }\n    indi.fams = Array.from(getSet(families, person.Id));\n    indis.push(indi);\n  });\n\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\n    const fam: JsonFam = {\n      id: key,\n    };\n    const wife = value.wife && idToName.get(value.wife);\n    if (wife) {\n      fam.wife = wife;\n    }\n    const husband = value.husband && idToName.get(value.husband);\n    if (husband) {\n      fam.husb = husband;\n    }\n    fam.children = Array.from(getSet(children, key)).map(\n      (child) => idToName.get(child)!,\n    );\n    if (\n      value.spouse &&\n      ((value.spouse.marriage_date &&\n        value.spouse.marriage_date !== '0000-00-00') ||\n        value.spouse.marriage_location)\n    ) {\n      const parsedDate = parseDate(value.spouse.marriage_date);\n      fam.marriage = Object.assign({}, parsedDate, {\n        place: value.spouse.marriage_location,\n      });\n    }\n    return fam;\n  });\n\n  const chartData = normalizeGedcom({indis, fams});\n  const gedcom = buildGedcom(chartData, fullSizePhotoUrls);\n  return {chartData, gedcom};\n}\n\n/** Creates a family identifier given 2 spouse identifiers. */\nfunction getFamilyId(spouse1: number, spouse2: number) {\n  if (spouse2 > spouse1) {\n    return `${spouse1}_${spouse2}`;\n  }\n  return `${spouse2}_${spouse1}`;\n}\n\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\n  const indi: JsonIndi = {\n    id: person.Name,\n  };\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\n    indi.hideId = true;\n    indi.firstName = intl.formatMessage({\n      id: 'wikitree.private',\n      defaultMessage: 'Private',\n    });\n  }\n  if (person.FirstName && person.FirstName !== 'Unknown') {\n    indi.firstName = person.FirstName;\n  } else if (person.RealName && person.RealName !== 'Unknown') {\n    indi.firstName = person.RealName;\n  }\n  if (person.LastNameAtBirth !== 'Unknown') {\n    indi.lastName = person.LastNameAtBirth;\n  }\n  if (person.Mother || person.Father) {\n    indi.famc = getFamilyId(person.Mother, person.Father);\n  }\n  if (person.Gender === 'Male') {\n    indi.sex = 'M';\n  } else if (person.Gender === 'Female') {\n    indi.sex = 'F';\n  }\n  if (\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\n    person.BirthLocation ||\n    person.BirthDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.BirthDate,\n      (person.DataStatus && person.DataStatus.BirthDate) || undefined,\n    );\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\n  }\n  if (\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\n    person.DeathLocation ||\n    person.DeathDateDecade !== 'unknown'\n  ) {\n    const parsedDate = parseDate(\n      person.DeathDate,\n      (person.DataStatus && person.DataStatus.DeathDate) || undefined,\n    );\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\n  }\n  if (person.PhotoData) {\n    indi.images = [\n      {\n        url: `https://www.wikitree.com${person.PhotoData.url}`,\n        title: person.Photo,\n      },\n    ];\n  }\n  return indi;\n}\n\n/**\n * Parses a date in the format returned by WikiTree and converts in to\n * the format defined by Topola.\n */\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\n  if (!date) {\n    return undefined;\n  }\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\n  if (!matchedDate) {\n    return {date: {text: date}};\n  }\n  const parsedDate: Date = {};\n  if (matchedDate[1] !== '0000') {\n    parsedDate.year = ~~matchedDate[1];\n  }\n  if (matchedDate[2] !== '00') {\n    parsedDate.month = ~~matchedDate[2];\n  }\n  if (matchedDate[3] !== '00') {\n    parsedDate.day = ~~matchedDate[3];\n  }\n  if (dataStatus === 'after') {\n    return {dateRange: {from: parsedDate}};\n  }\n  if (dataStatus === 'before') {\n    return {dateRange: {to: parsedDate}};\n  }\n  if (dataStatus === 'guess') {\n    parsedDate.qualifier = 'abt';\n  }\n  return {date: parsedDate};\n}\n\nfunction parseDecade(decade: string): DateOrRange | undefined {\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\n}\n\nconst MONTHS = new Map<number, string>([\n  [1, 'JAN'],\n  [2, 'FEB'],\n  [3, 'MAR'],\n  [4, 'APR'],\n  [5, 'MAY'],\n  [6, 'JUN'],\n  [7, 'JUL'],\n  [8, 'AUG'],\n  [9, 'SEP'],\n  [10, 'OCT'],\n  [11, 'NOV'],\n  [12, 'DEC'],\n]);\n\nfunction dateToGedcom(date: Date): string {\n  return [date.qualifier, date.day, MONTHS.get(date.month!), date.year]\n    .filter((x) => x !== undefined)\n    .join(' ');\n}\n\nfunction dateOrRangeToGedcom(dateOrRange: DateOrRange): string {\n  if (dateOrRange.date) {\n    return dateToGedcom(dateOrRange.date);\n  }\n  if (!dateOrRange.dateRange) {\n    return '';\n  }\n  if (dateOrRange.dateRange.from && dateOrRange.dateRange.to) {\n    return `BET ${dateToGedcom(dateOrRange.dateRange.from)} AND ${\n      dateOrRange.dateRange.to\n    }`;\n  }\n  if (dateOrRange.dateRange.from) {\n    return `AFT ${dateToGedcom(dateOrRange.dateRange.from)}`;\n  }\n  if (dateOrRange.dateRange.to) {\n    return `BEF ${dateToGedcom(dateOrRange.dateRange.to)}`;\n  }\n  return '';\n}\n\nfunction eventToGedcom(event: JsonEvent): GedcomEntry[] {\n  const result = [];\n  if (isValidDateOrRange(event)) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'DATE',\n      data: dateOrRangeToGedcom(event),\n      tree: [],\n    });\n  }\n  if (event.place) {\n    result.push({\n      level: 2,\n      pointer: '',\n      tag: 'PLAC',\n      data: event.place,\n      tree: [],\n    });\n  }\n  return result;\n}\n\nfunction imageToGedcom(\n  image: JsonImage,\n  fullSizePhotoUrl: string | undefined,\n): GedcomEntry[] {\n  return [\n    {\n      level: 2,\n      pointer: '',\n      tag: 'FILE',\n      data: fullSizePhotoUrl || image.url,\n      tree: [\n        {\n          level: 3,\n          pointer: '',\n          tag: 'FORM',\n          data: image.title?.split('.').pop() || '',\n          tree: [],\n        },\n        {\n          level: 3,\n          pointer: '',\n          tag: 'TITL',\n          data: image.title?.split('.')[0] || '',\n          tree: [],\n        },\n      ],\n    },\n  ];\n}\n\nfunction indiToGedcom(\n  indi: JsonIndi,\n  fullSizePhotoUrl: Map<string, string>,\n): GedcomEntry {\n  // WikiTree URLs replace spaces with underscores.\n  const escapedId = indi.id.replace(/ /g, '_');\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${indi.id}@`,\n    tag: 'INDI',\n    data: '',\n    tree: [\n      {\n        level: 1,\n        pointer: '',\n        tag: 'NAME',\n        data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\n        tree: [],\n      },\n    ],\n  };\n  if (indi.birth) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'BIRT',\n      data: '',\n      tree: eventToGedcom(indi.birth),\n    });\n  }\n  if (indi.death) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'DEAT',\n      data: '',\n      tree: eventToGedcom(indi.death),\n    });\n  }\n  if (indi.famc) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMC',\n      data: `@${indi.famc}@`,\n      tree: [],\n    });\n  }\n  (indi.fams || []).forEach((fams) =>\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'FAMS',\n      data: `@${fams}@`,\n      tree: [],\n    }),\n  );\n  if (!indi.id.startsWith('~')) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WWW',\n      data: `https://www.wikitree.com/wiki/${escapedId}`,\n      tree: [],\n    });\n  }\n  (indi.images || []).forEach((image) => {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'OBJE',\n      data: '',\n      tree: imageToGedcom(image, fullSizePhotoUrl.get(indi.id)),\n    });\n  });\n  return record;\n}\n\nfunction famToGedcom(fam: JsonFam): GedcomEntry {\n  const record: GedcomEntry = {\n    level: 0,\n    pointer: `@${fam.id}@`,\n    tag: 'FAM',\n    data: '',\n    tree: [],\n  };\n  if (fam.wife) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'WIFE',\n      data: `@${fam.wife}@`,\n      tree: [],\n    });\n  }\n  if (fam.husb) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'HUSB',\n      data: `@${fam.husb}@`,\n      tree: [],\n    });\n  }\n  (fam.children || []).forEach((child) =>\n    record.tree.push({\n      level: 1,\n      pointer: child,\n      tag: 'CHILD',\n      data: '',\n      tree: [],\n    }),\n  );\n  if (fam.marriage) {\n    record.tree.push({\n      level: 1,\n      pointer: '',\n      tag: 'MARR',\n      data: '',\n      tree: eventToGedcom(fam.marriage),\n    });\n  }\n  return record;\n}\n\n/**\n * Creates a GEDCOM structure for the purpose of displaying the details\n * panel.\n */\nfunction buildGedcom(\n  data: JsonGedcomData,\n  fullSizePhotoUrls: Map<string, string>,\n): GedcomData {\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\n  const gedcomFams: {[key: string]: GedcomEntry} = {};\n  data.indis.forEach((indi) => {\n    gedcomIndis[indi.id] = indiToGedcom(indi, fullSizePhotoUrls);\n  });\n  data.fams.forEach((fam) => {\n    gedcomFams[fam.id] = famToGedcom(fam);\n  });\n\n  return {\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\n    indis: gedcomIndis,\n    fams: gedcomFams,\n    other: {},\n  };\n}\n\n/**\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\n * an empty set is added to the map.\n */\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\n  const set = map.get(key);\n  if (set) {\n    return set;\n  }\n  const newSet = new Set<V>();\n  map.set(key, newSet);\n  return newSet;\n}\n\nexport interface WikiTreeSourceSpec {\n  source: DataSourceEnum.WIKITREE;\n  authcode?: string;\n}\n\n/** Loading data from the WikiTree API. */\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\n  constructor(private intl: IntlShape) {}\n\n  isNewData(\n    newSource: SourceSelection<WikiTreeSourceSpec>,\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\n    data?: TopolaData,\n  ): boolean {\n    if (!newSource.selection) {\n      return false;\n    }\n    if (oldSource.selection?.id === newSource.selection.id) {\n      // Selection unchanged -> don't reload.\n      return false;\n    }\n    if (\n      data &&\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\n    ) {\n      // New selection exists in current view -> animate instead of reloading.\n      return false;\n    }\n    return true;\n  }\n\n  async loadData(\n    source: SourceSelection<WikiTreeSourceSpec>,\n  ): Promise<TopolaData> {\n    if (!source.selection) {\n      throw new TopolaError(\n        'WIKITREE_ID_NOT_PROVIDED',\n        'WikiTree id needs to be provided',\n      );\n    }\n    try {\n      const data = await loadWikiTree(\n        source.selection.id,\n        this.intl,\n        source.spec.authcode,\n      );\n      analyticsEvent('wikitree_loaded');\n      return data;\n    } catch (error) {\n      analyticsEvent('wikitree_error');\n      throw error;\n    }\n  }\n}\n","import * as H from 'history';\nimport * as queryString from 'query-string';\nimport {analyticsEvent} from './util/analytics';\nimport {Changelog} from './changelog';\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\nimport {Details} from './details/details';\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport {getI18nMessage} from './util/error_i18n';\nimport {IndiInfo} from 'topola';\nimport {Intro} from './intro';\nimport {Loader, Message, Portal, Tab} from 'semantic-ui-react';\nimport {Media} from './util/media';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {TopBar} from './menu/top_bar';\nimport {TopolaData} from './util/gedcom_util';\nimport {useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router';\nimport {\n  Chart,\n  ChartType,\n  downloadPdf,\n  downloadPng,\n  downloadSvg,\n  printChart,\n} from './chart';\nimport {\n  argsToConfig,\n  Config,\n  ConfigPanel,\n  configToArgs,\n  DEFALUT_CONFIG,\n} from './config';\nimport {\n  getSelection,\n  UploadSourceSpec,\n  UrlSourceSpec,\n  GedcomUrlDataSource,\n  UploadedDataSource,\n} from './datasource/load_data';\nimport {\n  loadWikiTree,\n  PRIVATE_ID_PREFIX,\n  WikiTreeDataSource,\n  WikiTreeSourceSpec,\n} from './datasource/wikitree';\n\n/** Shows an error message in the middle of the screen. */\nfunction ErrorMessage(props: {message?: string}) {\n  return (\n    <Message negative className=\"error\">\n      <Message.Header>\n        <FormattedMessage\n          id=\"error.failed_to_load_file\"\n          defaultMessage={'Failed to load file'}\n        />\n      </Message.Header>\n      <p>{props.message}</p>\n    </Message>\n  );\n}\n\ninterface ErrorPopupProps {\n  message?: string;\n  open: boolean;\n  onDismiss: () => void;\n}\n\n/**\n * Shows a dismissable error message in the bottom left corner of the screen.\n */\nfunction ErrorPopup(props: ErrorPopupProps) {\n  return (\n    <Portal open={props.open} onClose={props.onDismiss}>\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\n        <Message.Header>\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\n        </Message.Header>\n        <p>{props.message}</p>\n      </Message>\n    </Portal>\n  );\n}\n\nenum AppState {\n  INITIAL,\n  LOADING,\n  ERROR,\n  SHOWING_CHART,\n  LOADING_MORE,\n}\n\ntype DataSourceSpec =\n  | UrlSourceSpec\n  | UploadSourceSpec\n  | WikiTreeSourceSpec\n  | EmbeddedSourceSpec;\n\n/**\n * Arguments passed to the application, primarily through URL parameters.\n * Non-optional arguments get populated with default values.\n */\ninterface Arguments {\n  sourceSpec?: DataSourceSpec;\n  selection?: IndiInfo;\n  chartType: ChartType;\n  standalone: boolean;\n  freezeAnimation: boolean;\n  showSidePanel: boolean;\n  config: Config;\n}\n\n/**\n * Retrieve arguments passed into the application through the URL and uploaded\n * data.\n */\nfunction getArguments(location: H.Location<any>): Arguments {\n  const search = queryString.parse(location.search);\n  const getParam = (name: string) => {\n    const value = search[name];\n    return typeof value === 'string' ? value : undefined;\n  };\n\n  const view = getParam('view');\n  const chartTypes = new Map<string | undefined, ChartType>([\n    ['relatives', ChartType.Relatives],\n    ['fancy', ChartType.Fancy],\n  ]);\n\n  const hash = getParam('file');\n  const url = getParam('url');\n  const embedded = getParam('embedded') === 'true'; // False by default.\n  var sourceSpec: DataSourceSpec | undefined = undefined;\n  if (getParam('source') === 'wikitree') {\n    sourceSpec = {\n      source: DataSourceEnum.WIKITREE,\n      authcode: getParam('authcode'),\n    };\n  } else if (hash) {\n    sourceSpec = {\n      source: DataSourceEnum.UPLOADED,\n      hash,\n      gedcom: location.state && location.state.data,\n      images: location.state && location.state.images,\n    };\n  } else if (url) {\n    sourceSpec = {\n      source: DataSourceEnum.GEDCOM_URL,\n      url,\n      handleCors: getParam('handleCors') !== 'false', // True by default.\n    };\n  } else if (embedded) {\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\n  }\n\n  const indi = getParam('indi');\n  const parsedGen = Number(getParam('gen'));\n  const selection = indi\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\n    : undefined;\n\n  return {\n    sourceSpec,\n    selection,\n    // Hourglass is the default view.\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\n\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\n    standalone: getParam('standalone') !== 'false' && !embedded,\n    freezeAnimation: getParam('freeze') === 'true', // False by default\n    config: argsToConfig(search),\n  };\n}\n\nexport function App() {\n  /** State of the application. */\n  const [state, setState] = useState<AppState>(AppState.INITIAL);\n  /** Loaded data. */\n  const [data, setData] = useState<TopolaData>();\n  /** Selected individual. */\n  const [selection, setSelection] = useState<IndiInfo>();\n  /** Error to display. */\n  const [error, setError] = useState<string>();\n  /** Whether the side panel is shown. */\n  const [showSidePanel, setShowSidePanel] = useState(false);\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\n  const [standalone, setStandalone] = useState(true);\n  /** Type of displayed chart. */\n  const [chartType, setChartType] = useState<ChartType>(ChartType.Hourglass);\n  /** Whether to show the error popup. */\n  const [showErrorPopup, setShowErrorPopup] = useState(false);\n  /** Specification of the source of the data. */\n  const [sourceSpec, setSourceSpec] = useState<DataSourceSpec>();\n  /** Freeze animations after initial chart render. */\n  const [freezeAnimation, setFreezeAnimation] = useState(false);\n  const [config, setConfig] = useState(DEFALUT_CONFIG);\n\n  const intl = useIntl();\n  const history = useHistory();\n  const location = useLocation();\n\n  /** Sets the state with a new individual selection and chart type. */\n  function updateDisplay(newSelection: IndiInfo) {\n    if (\n      !selection ||\n      selection.id !== newSelection.id ||\n      selection!.generation !== newSelection.generation\n    ) {\n      setSelection(newSelection);\n    }\n  }\n\n  /** Sets error message after data load failure. */\n  function setErrorMessage(message: string) {\n    setError(message);\n    setState(AppState.ERROR);\n  }\n\n  const uploadedDataSource = new UploadedDataSource();\n  const gedcomUrlDataSource = new GedcomUrlDataSource();\n  const wikiTreeDataSource = new WikiTreeDataSource(intl);\n  const embeddedDataSource = new EmbeddedDataSource();\n\n  function isNewData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    if (!sourceSpec || sourceSpec.source !== newSourceSpec.source) {\n      // New data source means new data.\n      return true;\n    }\n    const newSource = {spec: newSourceSpec, selection: newSelection};\n    const oldSouce = {\n      spec: sourceSpec,\n      selection: selection,\n    };\n    switch (newSource.spec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.isNewData(\n          newSource as SourceSelection<UploadSourceSpec>,\n          oldSouce as SourceSelection<UploadSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.isNewData(\n          newSource as SourceSelection<UrlSourceSpec>,\n          oldSouce as SourceSelection<UrlSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.isNewData(\n          newSource as SourceSelection<WikiTreeSourceSpec>,\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\n          data,\n        );\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.isNewData(\n          newSource as SourceSelection<EmbeddedSourceSpec>,\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\n          data,\n        );\n    }\n  }\n\n  function loadData(newSourceSpec: DataSourceSpec, newSelection?: IndiInfo) {\n    switch (newSourceSpec.source) {\n      case DataSourceEnum.UPLOADED:\n        return uploadedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.GEDCOM_URL:\n        return gedcomUrlDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.WIKITREE:\n        return wikiTreeDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n      case DataSourceEnum.EMBEDDED:\n        return embeddedDataSource.loadData({\n          spec: newSourceSpec,\n          selection: newSelection,\n        });\n    }\n  }\n\n  useEffect(() => {\n    (async () => {\n      if (location.pathname !== '/view') {\n        if (state !== AppState.INITIAL) {\n          setState(AppState.INITIAL);\n        }\n        return;\n      }\n\n      const args = getArguments(location);\n\n      if (!args.sourceSpec) {\n        history.replace({pathname: '/'});\n        return;\n      }\n\n      if (\n        state === AppState.INITIAL ||\n        isNewData(args.sourceSpec, args.selection)\n      ) {\n        // Set loading state.\n        setState(AppState.LOADING);\n        // Set state from URL parameters.\n        setSourceSpec(args.sourceSpec);\n        setSelection(args.selection);\n        setStandalone(args.standalone);\n        setChartType(args.chartType);\n        setFreezeAnimation(args.freezeAnimation);\n        setConfig(args.config);\n        try {\n          const data = await loadData(args.sourceSpec, args.selection);\n          // Set state with data.\n          setData(data);\n          setSelection(getSelection(data.chartData, args.selection));\n          setShowSidePanel(args.showSidePanel);\n          setState(AppState.SHOWING_CHART);\n        } catch (error: any) {\n          setErrorMessage(getI18nMessage(error, intl));\n        }\n      } else if (\n        state === AppState.SHOWING_CHART ||\n        state === AppState.LOADING_MORE\n      ) {\n        // Update selection if it has changed in the URL.\n        const newSelection = getSelection(data!.chartData, args.selection);\n        const loadMoreFromWikitree =\n          args.sourceSpec.source === DataSourceEnum.WIKITREE &&\n          (!selection || selection.id !== newSelection.id);\n        setChartType(args.chartType);\n        setState(\n          loadMoreFromWikitree ? AppState.LOADING_MORE : AppState.SHOWING_CHART,\n        );\n        updateDisplay(newSelection);\n        if (loadMoreFromWikitree) {\n          try {\n            const data = await loadWikiTree(args.selection!.id, intl);\n            const newSelection = getSelection(data.chartData, args.selection);\n            setData(data);\n            setSelection(newSelection);\n            setState(AppState.SHOWING_CHART);\n          } catch (error: any) {\n            setState(AppState.SHOWING_CHART);\n            displayErrorPopup(\n              intl.formatMessage(\n                {\n                  id: 'error.failed_wikitree_load_more',\n                  defaultMessage: 'Failed to load data from WikiTree. {error}',\n                },\n                {error},\n              ),\n            );\n          }\n        }\n      }\n    })();\n  });\n\n  function updateUrl(args: queryString.ParsedQuery<any>) {\n    const search = queryString.parse(location.search);\n    for (const key in args) {\n      search[key] = args[key];\n    }\n    location.search = queryString.stringify(search);\n    history.push(location);\n  }\n\n  /**\n   * Called when the user clicks an individual box in the chart.\n   * Updates the browser URL.\n   */\n  function onSelection(selection: IndiInfo) {\n    // Don't allow selecting WikiTree private profiles.\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\n      return;\n    }\n    analyticsEvent('selection_changed');\n    updateUrl({\n      indi: selection.id,\n      gen: selection.generation,\n    });\n  }\n\n  function onPrint() {\n    analyticsEvent('print');\n    printChart();\n  }\n\n  function displayErrorPopup(message: string) {\n    setShowErrorPopup(true);\n    setError(message);\n  }\n\n  async function onDownloadPdf() {\n    analyticsEvent('download_pdf');\n    try {\n      await downloadPdf();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_pdf',\n          defaultMessage:\n            'Failed to generate PDF file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  async function onDownloadPng() {\n    analyticsEvent('download_png');\n    try {\n      await downloadPng();\n    } catch (e) {\n      displayErrorPopup(\n        intl.formatMessage({\n          id: 'error.failed_png',\n          defaultMessage:\n            'Failed to generate PNG file.' +\n            ' Please try with a smaller diagram or download an SVG file.',\n        }),\n      );\n    }\n  }\n\n  function onDownloadSvg() {\n    analyticsEvent('download_svg');\n    downloadSvg();\n  }\n\n  function onDismissErrorPopup() {\n    setShowErrorPopup(false);\n  }\n\n  function renderMainArea() {\n    switch (state) {\n      case AppState.SHOWING_CHART:\n      case AppState.LOADING_MORE:\n        const sidePanelTabs = [\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.info',\n              defaultMessage: 'Info',\n            }),\n            render: () => (\n              <Details gedcom={data!.gedcom} indi={selection!.id} />\n            ),\n          },\n          {\n            menuItem: intl.formatMessage({\n              id: 'tab.settings',\n              defaultMessage: 'Settings',\n            }),\n            render: () => (\n              <ConfigPanel\n                config={config}\n                onChange={(config) => {\n                  setConfig(config);\n                  updateUrl(configToArgs(config));\n                }}\n              />\n            ),\n          },\n        ];\n        return (\n          <div id=\"content\">\n            <ErrorPopup\n              open={showErrorPopup}\n              message={error}\n              onDismiss={onDismissErrorPopup}\n            />\n            {state === AppState.LOADING_MORE ? (\n              <Loader active size=\"small\" className=\"loading-more\" />\n            ) : null}\n            <Chart\n              data={data!.chartData}\n              selection={selection!}\n              chartType={chartType}\n              onSelection={onSelection}\n              freezeAnimation={freezeAnimation}\n              colors={config.color}\n            />\n            {showSidePanel ? (\n              <Media greaterThanOrEqual=\"large\" className=\"sidePanel\">\n                <Tab panes={sidePanelTabs} />\n              </Media>\n            ) : null}\n            <Changelog />\n          </div>\n        );\n\n      case AppState.ERROR:\n        return <ErrorMessage message={error!} />;\n\n      case AppState.INITIAL:\n      case AppState.LOADING:\n        return <Loader active size=\"large\" />;\n    }\n  }\n\n  return (\n    <>\n      <Route\n        render={() => (\n          <TopBar\n            data={data?.chartData}\n            allowAllRelativesChart={\n              sourceSpec?.source !== DataSourceEnum.WIKITREE\n            }\n            showingChart={\n              history.location.pathname === '/view' &&\n              (state === AppState.SHOWING_CHART ||\n                state === AppState.LOADING_MORE)\n            }\n            standalone={standalone}\n            eventHandlers={{\n              onSelection,\n              onPrint,\n              onDownloadPdf,\n              onDownloadPng,\n              onDownloadSvg,\n            }}\n            showWikiTreeMenus={sourceSpec?.source === DataSourceEnum.WIKITREE}\n          />\n        )}\n      />\n      <Switch>\n        <Route exact path=\"/\" component={Intro} />\n        <Route exact path=\"/view\" render={renderMainArea} />\n        <Redirect to={'/'} />\n      </Switch>\n    </>\n  );\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport messages_cs from './translations/cs.json';\nimport messages_de from './translations/de.json';\nimport messages_fr from './translations/fr.json';\nimport messages_it from './translations/it.json';\nimport messages_pl from './translations/pl.json';\nimport messages_ru from './translations/ru.json';\nimport {App} from './app';\nimport {detect} from 'detect-browser';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\nimport {MediaContextProvider, mediaStyles} from './util/media';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'canvas-toBlob';\n\nconst messages = {\n  cs: messages_cs,\n  de: messages_de,\n  fr: messages_fr,\n  it: messages_it,\n  pl: messages_pl,\n  ru: messages_ru,\n};\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\n\nconst browser = detect();\n\nif (browser && browser.name === 'ie') {\n  ReactDOM.render(\n    <p>\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\n      different (modern) browser.\n    </p>,\n    document.querySelector('#root'),\n  );\n} else {\n  ReactDOM.render(\n    <IntlProvider locale={language} messages={messages[language]}>\n      <MediaContextProvider>\n        <style>{mediaStyles}</style>\n        <Router>\n          <Route component={App} />\n        </Router>\n      </MediaContextProvider>\n    </IntlProvider>,\n    document.querySelector('#root'),\n  );\n}\n"],"sourceRoot":""}