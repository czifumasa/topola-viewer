{"version":3,"sources":["util/analytics.ts","chart.tsx","util/media.ts","datasource/data_source.ts","util/error.ts","util/gedcom_util.ts","util/date_util.ts","details.tsx","datasource/load_data.ts","datasource/embedded.ts","topola.jpg","intro.tsx","menu/menu_item.tsx","menu/search_index.ts","menu/search.tsx","menu/upload_menu.tsx","menu/url_menu.tsx","menu/wikitree.png","datasource/wikitree.ts","menu/wikitree_menu.tsx","menu/top_bar.tsx","app.tsx","util/error_i18n.ts","index.tsx"],"names":["analyticsEvent","action","data","window","gtag","ChartType","AppMedia","createMedia","breakpoints","small","large","mediaStyles","createMediaStyle","Media","MediaContextProvider","zoomed","size","event","parent","select","node","scale","transform","k","offsetX","max","clientWidth","offsetY","clientHeight","attr","scrollLeft","x","scrollTop","y","scrolled","zoomTransform","call","zoom","translateTo","loadAsDataUrl","blob","reader","FileReader","readAsDataURL","Promise","resolve","reject","onload","e","target","result","inlineImage","image","a","href","baseVal","fetch","response","dataUrl","console","warn","inlineImages","svg","images","Array","from","getElementsByTagName","all","map","loadImage","Image","src","URL","createObjectURL","addEventListener","drawOnCanvas","canvas","document","createElement","width","height","ctx","getContext","oldFill","fillStyle","fillRect","drawImage","canvasToBlob","type","toBlob","DataSourceEnum","ChartComponent","chart","animating","rerenderRequired","zoomBehavior","this","props","chartType","Hourglass","HourglassChart","Relatives","RelativesChart","Fancy","FancyChart","CircleRenderer","DetailedRenderer","factor","scaleBy","args","initialRender","freezeAnimation","innerHTML","createChart","json","getChartType","renderer","getRendererType","svgSelector","indiCallback","info","onSelection","animate","updateSvgSize","locale","intl","setData","chartInfo","render","startIndi","selection","id","baseGeneration","generation","zoomOutFactor","min","extent","scaleExtent","translateExtent","on","scrollTopTween","i","interpolateNumber","t","scrollLeftTween","dx","origin","dy","svgTransition","transition","delay","duration","tween","animationPromise","then","renderChart","prevProps","at","className","onClick","getElementById","cloneNode","removeAttribute","setAttribute","String","Number","getAttribute","querySelector","XMLSerializer","serializeToString","getStrippedSvg","printWindow","style","position","top","left","contentDocument","open","write","getSvgContents","close","setTimeout","contentWindow","focus","print","parentNode","removeChild","body","appendChild","getSvgContentsWithInlinedImages","contents","Blob","saveAs","jspdf","default","doc","orientation","unit","format","addImage","save","React","Chart","injectIntl","forwardRef","TopolaError","code","message","Error","pointerToId","pointer","substring","length","idToIndiMap","Map","indis","forEach","indi","set","idToFamMap","fams","fam","prepareGedcom","entries","head","find","entry","tag","other","strcmp","b","compareDates","event1","event2","date1","date","dateRange","date2","year","month","day","sortChildren","gedcom","comparator","indiMap","indiId1","indiId2","indi1","get","indi2","birth","birthDatesComparator","newFams","children","newChildren","sort","Object","assign","sortFamilyChildren","sortSpouses","famMap","famId1","famId2","fam1","fam2","marriage","marriageDatesComparator","newIndis","sortIndiSpouses","normalizeGedcom","IMAGE_EXTENSIONS","filterImage","newImages","fileName","url","match","has","push","title","startsWith","lowerName","toLowerCase","some","ext","endsWith","isImageFile","filterImages","getSoftware","sour","tree","name","DATE_QUALIFIERS","formatDate","hasDay","undefined","hasMonth","hasYear","text","dateObject","Date","qualifier","formatOptions","formatMessage","defaultMessage","Intl","DateTimeFormat","join","formatDateOrRange","dateOrRange","fromDate","toDate","to","translatedFromDate","translatedToDate","formatDateRage","EVENT_TAGS","EXCLUDED_TAGS","TAG_DESCRIPTIONS","translateTag","normalizedTag","replace","joinLines","lines","line","index","properties","getData","subentry","last","eventDetails","gedcomDate","getDate","translateDate","place","filter","note","noteDetails","nameDetails","split","getDetails","tags","detailsFunction","flatMap","element","hasData","getOtherDetails","includes","dataDetails","DetailsComponent","entriesWithData","dereferenced","dereference","Details","getSelection","prepareData","cacheId","parseGedcom","gedcomEntriesToJson","chartData","convertGedcom","serializedData","JSON","stringify","sessionStorage","setItem","loadFromUrl","handleCors","cachedData","getItem","parse","driveUrlMatch1","driveUrlMatch2","urlToFetch","status","statusText","loadGedcom","hash","EmbeddedMessageType","UploadedDataSource","newSource","oldSource","spec","source","event_label","event_value","GedcomUrlDataSource","EmbeddedDataSource","PARENT_READY","postMessage","READY","GEDCOM","onMessage","GedcomLink","pathname","search","queryString","Intro","dateString","values","link","process","REACT_APP_GIT_TIME","slice","REACT_APP_GIT_SHA","Card","Content","as","Header","Grid","Row","Column","logo","alt","centered","MenuType","MenuItem","newProps","menuType","Menu","Item","Dropdown","require","lunr","normalize","input","toLocaleLowerCase","compare","score","naturalSort","ref","LunrSearchIndex","self","use","multiLanguage","field","boost","firstName","lastName","spouseLastName","famId","husb","husbId","husband","getHusbandLastName","add","normalizedName","normalizedSpouseLastName","query","s","getNameLine","trim","SearchBarComponent","state","searchResults","searchRef","searchIndex","birthDate","deathDate","death","key","description","getDescriptionLine","results","displaySearchResult","setState","setValue","initialize","buildSearchIndex","initializeSearchIndex","Search","onSearchChange","debounce","_","handleSearch","value","onResultSelect","handleResultSelect","noResultsMessage","placeholder","selectFirstResult","SearchBar","loadFileAsText","file","evt","readAsText","isImageFileName","lower","UploadMenu","files","filesArray","gedcomFile","imageMap","imageFileNames","md5","location","history","content","Icon","htmlFor","accept","multiple","onChange","handleUpload","UrlMenu","dialogOpen","inputRef","current","Modal","onClose","handleClose","Form","onSubmit","handleLoad","Input","fluid","handleUrlChange","Actions","Button","secondary","primary","openDialog","loadFromUrlModal","PRIVATE_ID_PREFIX","USER_NAME_COOKIE","getSessionStorageItem","setSessionStorageItem","wikiTreeGet","request","requestData","FormData","append","apiUrl","method","credentials","responseBody","getAncestors","cacheKey","fields","ancestors","getRelatives","keys","keysToFetch","getChildren","getSpouses","items","fetchedResults","person","Name","concat","clientLogin","authcode","getLoggedInUserName","Cookies","loadWikiTree","hostname","loginResult","clear","username","everyone","firstPerson","spouseKeys","Spouses","personId","ancestorKeys","flat","ancestorDetails","privateFathers","privateMothers","ancestorList","offset","Id","Father","Mother","privateFather","privateMother","privateAncestors","descendantGenerationLimit","toFetch","people","allSpouses","Children","c","families","spouses","idToName","getFamilyId","getSet","wife","converted","Set","convertPerson","spouse","familySpouses","Gender","child","marriage_date","marriage_location","parsedDate","parseDate","buildGedcom","spouse1","spouse2","hideId","FirstName","RealName","LastNameAtBirth","famc","sex","BirthDate","BirthLocation","BirthDateDecade","DataStatus","parseDecade","DeathDate","DeathLocation","DeathDateDecade","PhotoData","dataStatus","matchedDate","decade","gedcomIndis","escapedId","level","newSet","WikiTreeLoginState","WikiTreeDataSource","ScreenSize","WikiTreeMenu","firstChild","wikiTreeId","standalone","preventDefault","handleIdChange","wikitreeLogo","handleSelectId","wikiTreeLink","rel","example1","enterId","example2","Ref","innerRef","wikiTreeIdModal","WikiTreeLoginMenuComponent","wikiTreeLoginState","UNKNOWN","wikiTreeLoginFormRef","wikiTreeReturnUrlRef","returnUrl","submit","wikiTreeLoginUsername","LOGGED_IN","NOT_LOGGED_IN","checkWikiTreeLoginState","wikiTreeLogin","display","tooltip","WikiTreeLoginMenu","AppState","TopBar","view","screenSize","showingChart","chartTypeItems","changeView","allowAllRelativesChart","LARGE","eventHandlers","onPrint","trigger","onDownloadPdf","onDownloadPng","onDownloadSvg","SMALL","Divider","showWikiTreeMenus","icon","fileMenus","chartMenus","wikiTreeLoginMenu","attached","inverted","color","desktopMenus","mobileMenus","ErrorMessage","Message","negative","ErrorPopup","Portal","onDismiss","getArguments","getParam","chartTypes","embedded","sourceSpec","WIKITREE","UPLOADED","GEDCOM_URL","EMBEDDED","parsedGen","isNaN","showSidePanel","AppComponent","INITIAL","showErrorPopup","chartRef","uploadedDataSource","gedcomUrlDataSource","wikiTreeDataSource","embeddedDataSource","gen","downloadPdf","downloadPng","downloadSvg","onDismissErrorPopup","renderMainArea","SHOWING_CHART","LOADING_MORE","error","Loader","active","ERROR","LOADING","otherStateChanges","changes","componentDidUpdate","oldSouce","isNewData","loadData","setError","loadMoreFromWikitree","updateDisplay","exact","path","component","App","messages","cs","messages_cs","de","messages_de","fr","messages_fr","it","messages_it","pl","messages_pl","ru","messages_ru","language","navigator","browser","detect","ReactDOM"],"mappings":"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","file":"static/js/main.3338d5db.chunk.js","sourcesContent":["/** Sends an event to Google Analytics. */\r\nexport function analyticsEvent(action: string, data?: any) {\r\n  (window as any).gtag('event', action, data);\r\n}\r\n","import * as React from 'react';\r\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\r\nimport {interpolateNumber} from 'd3-interpolate';\r\nimport {max, min} from 'd3-array';\r\nimport {Media} from './util/media';\r\nimport {saveAs} from 'file-saver';\r\nimport {select, Selection} from 'd3-selection';\r\nimport 'd3-transition';\r\nimport {\r\n  D3ZoomEvent,\r\n  zoom,\r\n  ZoomBehavior,\r\n  ZoomedElementBaseType,\r\n  zoomTransform,\r\n} from 'd3-zoom';\r\nimport {\r\n  JsonGedcomData,\r\n  ChartHandle,\r\n  IndiInfo,\r\n  createChart,\r\n  DetailedRenderer,\r\n  HourglassChart,\r\n  RelativesChart,\r\n  FancyChart,\r\n  CircleRenderer,\r\n} from 'topola';\r\n\r\n/** How much to zoom when using the +/- buttons. */\r\nconst ZOOM_FACTOR = 1.3;\r\n\r\n/**\r\n * Called when the view is dragged with the mouse.\r\n *\r\n * @param size the size of the chart\r\n */\r\nfunction zoomed(\r\n  size: [number, number],\r\n  event: D3ZoomEvent<ZoomedElementBaseType, unknown>,\r\n) {\r\n  const parent = select('#svgContainer').node() as Element;\r\n\r\n  const scale = event.transform.k;\r\n  const offsetX = max([0, (parent.clientWidth - size[0] * scale) / 2]);\r\n  const offsetY = max([0, (parent.clientHeight - size[1] * scale) / 2]);\r\n  select('#chartSvg')\r\n    .attr('width', size[0] * scale)\r\n    .attr('height', size[1] * scale)\r\n    .attr('transform', `translate(${offsetX}, ${offsetY})`);\r\n  select('#chart').attr('transform', `scale(${scale})`);\r\n\r\n  parent.scrollLeft = -event.transform.x;\r\n  parent.scrollTop = -event.transform.y;\r\n}\r\n\r\n/** Called when the scrollbars are used. */\r\nfunction scrolled() {\r\n  const parent = select('#svgContainer').node() as Element;\r\n  const x = parent.scrollLeft + parent.clientWidth / 2;\r\n  const y = parent.scrollTop + parent.clientHeight / 2;\r\n  const scale = zoomTransform(parent).k;\r\n  select(parent).call(zoom().translateTo, x / scale, y / scale);\r\n}\r\n\r\n/** Loads blob as data URL. */\r\nfunction loadAsDataUrl(blob: Blob): Promise<string> {\r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(blob);\r\n  return new Promise<string>((resolve, reject) => {\r\n    reader.onload = (e) => resolve((e.target as FileReader).result as string);\r\n  });\r\n}\r\n\r\nasync function inlineImage(image: SVGImageElement) {\r\n  const href = image.href.baseVal;\r\n  if (!href) {\r\n    return;\r\n  }\r\n  try {\r\n    const response = await fetch(href);\r\n    const blob = await response.blob();\r\n    const dataUrl = await loadAsDataUrl(blob);\r\n    image.href.baseVal = dataUrl;\r\n  } catch (e) {\r\n    console.warn('Failed to load image:', e);\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches all images in the SVG and replaces them with inlined images as data\r\n * URLs. Images are replaced in place. The replacement is done, the returned\r\n * promise is resolved.\r\n */\r\nasync function inlineImages(svg: Element): Promise<void> {\r\n  const images = Array.from(svg.getElementsByTagName('image'));\r\n  await Promise.all(images.map(inlineImage));\r\n}\r\n\r\n/** Loads a blob into an image object. */\r\nfunction loadImage(blob: Blob): Promise<HTMLImageElement> {\r\n  const image = new Image();\r\n  image.src = URL.createObjectURL(blob);\r\n  return new Promise<HTMLImageElement>((resolve, reject) => {\r\n    image.addEventListener('load', () => resolve(image));\r\n  });\r\n}\r\n\r\n/** Draw image on a new canvas and return the canvas. */\r\nfunction drawOnCanvas(image: HTMLImageElement) {\r\n  const canvas = document.createElement('canvas');\r\n  // Scale image for better quality.\r\n  canvas.width = image.width * 2;\r\n  canvas.height = image.height * 2;\r\n\r\n  const ctx = canvas.getContext('2d')!;\r\n  const oldFill = ctx.fillStyle;\r\n  ctx.fillStyle = 'white';\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  ctx.fillStyle = oldFill;\r\n\r\n  ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n  return canvas;\r\n}\r\n\r\nfunction canvasToBlob(canvas: HTMLCanvasElement, type: string) {\r\n  return new Promise<Blob>((resolve, reject) => {\r\n    canvas.toBlob((blob) => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject();\r\n      }\r\n    }, type);\r\n  });\r\n}\r\n\r\n/** Supported chart types. */\r\nexport enum ChartType {\r\n  Hourglass,\r\n  Relatives,\r\n  Fancy,\r\n}\r\n\r\nexport interface ChartProps {\r\n  data: JsonGedcomData;\r\n  selection: IndiInfo;\r\n  chartType: ChartType;\r\n  onSelection: (indiInfo: IndiInfo) => void;\r\n  freezeAnimation?: boolean;\r\n}\r\n\r\n/** Component showing the genealogy chart and handling transition animations. */\r\nexport class ChartComponent extends React.PureComponent<\r\n  ChartProps & WrappedComponentProps,\r\n  {}\r\n> {\r\n  private chart?: ChartHandle;\r\n  /** Animation is in progress. */\r\n  private animating = false;\r\n  /** Rendering is required after the current animation finishes. */\r\n  private rerenderRequired = false;\r\n  /** The d3 zoom behavior object. */\r\n  private zoomBehavior?: ZoomBehavior<Element, any>;\r\n\r\n  private getChartType() {\r\n    switch (this.props.chartType) {\r\n      case ChartType.Hourglass:\r\n        return HourglassChart;\r\n      case ChartType.Relatives:\r\n        return RelativesChart;\r\n      case ChartType.Fancy:\r\n        return FancyChart;\r\n      default:\r\n        // Fall back to hourglass chart.\r\n        return HourglassChart;\r\n    }\r\n  }\r\n\r\n  private getRendererType() {\r\n    switch (this.props.chartType) {\r\n      case ChartType.Fancy:\r\n        return CircleRenderer;\r\n      default:\r\n        // Use DetailedRenderer by default.\r\n        return DetailedRenderer;\r\n    }\r\n  }\r\n\r\n  private zoom(factor: number) {\r\n    const parent = select('#svgContainer') as Selection<Element, any, any, any>;\r\n    this.zoomBehavior!.scaleBy(parent, factor);\r\n  }\r\n\r\n  /**\r\n   * Renders the chart or performs a transition animation to a new state.\r\n   * If indiInfo is not given, it means that it is the initial render and no\r\n   * animation is performed.\r\n   */\r\n  private renderChart(args: {initialRender: boolean} = {initialRender: false}) {\r\n    // Wait for animation to finish if animation is in progress.\r\n    if (!args.initialRender && this.animating) {\r\n      this.rerenderRequired = true;\r\n      return;\r\n    }\r\n\r\n    // Freeze changing selection after initial rendering.\r\n    if (!args.initialRender && this.props.freezeAnimation) {\r\n      return;\r\n    }\r\n\r\n    if (args.initialRender) {\r\n      (select('#chart').node() as HTMLElement).innerHTML = '';\r\n      this.chart = createChart({\r\n        json: this.props.data,\r\n        chartType: this.getChartType(),\r\n        renderer: this.getRendererType(),\r\n        svgSelector: '#chart',\r\n        indiCallback: (info) => this.props.onSelection(info),\r\n        animate: true,\r\n        updateSvgSize: false,\r\n        locale: this.props.intl.locale,\r\n      });\r\n    } else {\r\n      this.chart!.setData(this.props.data);\r\n    }\r\n    const chartInfo = this.chart!.render({\r\n      startIndi: this.props.selection.id,\r\n      baseGeneration: this.props.selection.generation,\r\n    });\r\n    const svg = select('#chartSvg');\r\n    const parent = select('#svgContainer').node() as Element;\r\n\r\n    const scale = zoomTransform(parent).k;\r\n    const zoomOutFactor = min([\r\n      1,\r\n      scale,\r\n      parent.clientWidth / chartInfo.size[0],\r\n      parent.clientHeight / chartInfo.size[1],\r\n    ])!;\r\n    const extent: [number, number] = [max([0.1, zoomOutFactor])!, 2];\r\n\r\n    this.zoomBehavior = zoom()\r\n      .scaleExtent(extent)\r\n      .translateExtent([[0, 0], chartInfo.size])\r\n      .on('zoom', (event) => zoomed(chartInfo.size, event));\r\n    select(parent).on('scroll', scrolled).call(this.zoomBehavior);\r\n\r\n    const scrollTopTween = (scrollTop: number) => {\r\n      return () => {\r\n        const i = interpolateNumber(parent.scrollTop, scrollTop);\r\n        return (t: number) => {\r\n          parent.scrollTop = i(t);\r\n        };\r\n      };\r\n    };\r\n    const scrollLeftTween = (scrollLeft: number) => {\r\n      return () => {\r\n        const i = interpolateNumber(parent.scrollLeft, scrollLeft);\r\n        return (t: number) => {\r\n          parent.scrollLeft = i(t);\r\n        };\r\n      };\r\n    };\r\n\r\n    const dx = parent.clientWidth / 2 - chartInfo.origin[0] * scale;\r\n    const dy = parent.clientHeight / 2 - chartInfo.origin[1] * scale;\r\n    const offsetX = max([\r\n      0,\r\n      (parent.clientWidth - chartInfo.size[0] * scale) / 2,\r\n    ]);\r\n    const offsetY = max([\r\n      0,\r\n      (parent.clientHeight - chartInfo.size[1] * scale) / 2,\r\n    ]);\r\n    const svgTransition = svg.transition().delay(200).duration(500);\r\n    const transition = args.initialRender ? svg : svgTransition;\r\n    transition\r\n      .attr('transform', `translate(${offsetX}, ${offsetY})`)\r\n      .attr('width', chartInfo.size[0] * scale)\r\n      .attr('height', chartInfo.size[1] * scale);\r\n    if (args.initialRender) {\r\n      parent.scrollLeft = -dx;\r\n      parent.scrollTop = -dy;\r\n    } else {\r\n      svgTransition\r\n        .tween('scrollLeft', scrollLeftTween(-dx))\r\n        .tween('scrollTop', scrollTopTween(-dy));\r\n    }\r\n\r\n    // After the animation is finished, rerender the chart if required.\r\n    this.animating = true;\r\n    chartInfo.animationPromise.then(() => {\r\n      this.animating = false;\r\n      if (this.rerenderRequired) {\r\n        this.rerenderRequired = false;\r\n        this.renderChart({initialRender: false});\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.renderChart({initialRender: true});\r\n  }\r\n\r\n  componentDidUpdate(prevProps: ChartProps) {\r\n    const initialRender = this.props.chartType !== prevProps.chartType;\r\n    this.renderChart({initialRender});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"svgContainer\">\r\n        <Media at=\"large\" className=\"zoom\">\r\n          <button className=\"zoom-in\" onClick={() => this.zoom(ZOOM_FACTOR)}>\r\n            +\r\n          </button>\r\n          <button\r\n            className=\"zoom-out\"\r\n            onClick={() => this.zoom(1 / ZOOM_FACTOR)}\r\n          >\r\n            −\r\n          </button>\r\n        </Media>\r\n        <svg id=\"chartSvg\">\r\n          <g id=\"chart\" />\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /** Return a copy of the SVG chart but without scaling and positioning. */\r\n  private getStrippedSvg() {\r\n    const svg = document.getElementById('chartSvg')!.cloneNode(true) as Element;\r\n\r\n    svg.removeAttribute('transform');\r\n    const parent = select('#svgContainer').node() as Element;\r\n    const scale = zoomTransform(parent).k;\r\n    svg.setAttribute(\r\n      'width',\r\n      String(Number(svg.getAttribute('width')) / scale),\r\n    );\r\n    svg.setAttribute(\r\n      'height',\r\n      String(Number(svg.getAttribute('height')) / scale),\r\n    );\r\n    svg.querySelector('#chart')!.removeAttribute('transform');\r\n\r\n    return svg;\r\n  }\r\n\r\n  private getSvgContents() {\r\n    return new XMLSerializer().serializeToString(this.getStrippedSvg());\r\n  }\r\n\r\n  private async getSvgContentsWithInlinedImages() {\r\n    const svg = this.getStrippedSvg();\r\n    await inlineImages(svg);\r\n    return new XMLSerializer().serializeToString(svg);\r\n  }\r\n\r\n  /** Shows the print dialog to print the currently displayed chart. */\r\n  print() {\r\n    const printWindow = document.createElement('iframe');\r\n    printWindow.style.position = 'absolute';\r\n    printWindow.style.top = '-1000px';\r\n    printWindow.style.left = '-1000px';\r\n    printWindow.onload = () => {\r\n      printWindow.contentDocument!.open();\r\n      printWindow.contentDocument!.write(this.getSvgContents());\r\n      printWindow.contentDocument!.close();\r\n      // Doesn't work on Firefox without the setTimeout.\r\n      setTimeout(() => {\r\n        printWindow.contentWindow!.focus();\r\n        printWindow.contentWindow!.print();\r\n        printWindow.parentNode!.removeChild(printWindow);\r\n      }, 500);\r\n    };\r\n    document.body.appendChild(printWindow);\r\n  }\r\n\r\n  async downloadSvg() {\r\n    const contents = await this.getSvgContentsWithInlinedImages();\r\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\r\n    saveAs(blob, 'topola.svg');\r\n  }\r\n\r\n  private async drawOnCanvas(): Promise<HTMLCanvasElement> {\r\n    const contents = await this.getSvgContentsWithInlinedImages();\r\n    const blob = new Blob([contents], {type: 'image/svg+xml'});\r\n    return await drawOnCanvas(await loadImage(blob));\r\n  }\r\n\r\n  async downloadPng() {\r\n    const canvas = await this.drawOnCanvas();\r\n    const blob = await canvasToBlob(canvas, 'image/png');\r\n    saveAs(blob, 'topola.png');\r\n  }\r\n\r\n  async downloadPdf() {\r\n    // Lazy load jspdf.\r\n    const {default: jspdf} = await import('jspdf');\r\n    const canvas = await this.drawOnCanvas();\r\n    const doc = new jspdf({\r\n      orientation: canvas.width > canvas.height ? 'l' : 'p',\r\n      unit: 'pt',\r\n      format: [canvas.width, canvas.height],\r\n    });\r\n    doc.addImage(canvas, 'PNG', 0, 0, canvas.width, canvas.height, 'NONE');\r\n    doc.save('topola.pdf');\r\n  }\r\n}\r\nexport const Chart = injectIntl(ChartComponent, {forwardRef: true});\r\n","import {createMedia} from '@artsy/fresnel';\r\n\r\n/** Defines the breakpoints at which to show different UI variants. */\r\nconst AppMedia = createMedia({\r\n  breakpoints: {\r\n    small: 320,\r\n    large: 768,\r\n  },\r\n});\r\nexport const mediaStyles = AppMedia.createMediaStyle();\r\nexport const {Media, MediaContextProvider} = AppMedia;\r\n","import {IndiInfo} from 'topola';\r\nimport {TopolaData} from '../util/gedcom_util';\r\n\r\n/** Supported data sources. */\r\nexport enum DataSourceEnum {\r\n  UPLOADED,\r\n  GEDCOM_URL,\r\n  WIKITREE,\r\n  EMBEDDED,\r\n}\r\n\r\n/** Source specification together with individual selection. */\r\nexport interface SourceSelection<SourceSpecT> {\r\n  spec: SourceSpecT;\r\n  selection?: IndiInfo;\r\n}\r\n\r\n/** Interface encapsulating functions specific for a data source. */\r\nexport interface DataSource<SourceSpecT> {\r\n  /**\r\n   * Returns true if the application is now loading a completely new data set\r\n   * and the existing one should be wiped.\r\n   */\r\n  isNewData(\r\n    newSource: SourceSelection<SourceSpecT>,\r\n    oldSource: SourceSelection<SourceSpecT>,\r\n    data?: TopolaData,\r\n  ): boolean;\r\n  /** Loads data from the data source. */\r\n  loadData(spec: SourceSelection<SourceSpecT>): Promise<TopolaData>;\r\n}\r\n","/** Error class adding an error code used for i18n. */\r\nexport class TopolaError extends Error {\r\n  constructor(\r\n    public readonly code: string,\r\n    message: string,\r\n    public readonly args: {[key: string]: string} = {},\r\n  ) {\r\n    super(message);\r\n  }\r\n}\r\n","import {GedcomEntry, parse as parseGedcom} from 'parse-gedcom';\r\nimport {TopolaError} from './error';\r\nimport {\r\n  JsonFam,\r\n  JsonGedcomData,\r\n  JsonIndi,\r\n  gedcomEntriesToJson,\r\n  JsonImage,\r\n  JsonEvent,\r\n} from 'topola';\r\n\r\nexport interface GedcomData {\r\n  /** The HEAD entry. */\r\n  head: GedcomEntry;\r\n  /** INDI entries mapped by id. */\r\n  indis: {[key: string]: GedcomEntry};\r\n  /** FAM entries mapped by id. */\r\n  fams: {[key: string]: GedcomEntry};\r\n  /** Other entries mapped by id, e.g. NOTE, SOUR. */\r\n  other: {[key: string]: GedcomEntry};\r\n}\r\n\r\nexport interface TopolaData {\r\n  chartData: JsonGedcomData;\r\n  gedcom: GedcomData;\r\n}\r\n\r\n/**\r\n * Returns the identifier extracted from a pointer string.\r\n * E.g. '@I123@' -> 'I123'\r\n */\r\nexport function pointerToId(pointer: string): string {\r\n  return pointer.substring(1, pointer.length - 1);\r\n}\r\n\r\nexport function idToIndiMap(data: JsonGedcomData): Map<string, JsonIndi> {\r\n  const map = new Map<string, JsonIndi>();\r\n  data.indis.forEach((indi) => {\r\n    map.set(indi.id, indi);\r\n  });\r\n  return map;\r\n}\r\n\r\nexport function idToFamMap(data: JsonGedcomData): Map<string, JsonFam> {\r\n  const map = new Map<string, JsonFam>();\r\n  data.fams.forEach((fam) => {\r\n    map.set(fam.id, fam);\r\n  });\r\n  return map;\r\n}\r\n\r\nfunction prepareGedcom(entries: GedcomEntry[]): GedcomData {\r\n  const head = entries.find((entry) => entry.tag === 'HEAD')!;\r\n  const indis: {[key: string]: GedcomEntry} = {};\r\n  const fams: {[key: string]: GedcomEntry} = {};\r\n  const other: {[key: string]: GedcomEntry} = {};\r\n  entries.forEach((entry) => {\r\n    if (entry.tag === 'INDI') {\r\n      indis[pointerToId(entry.pointer)] = entry;\r\n    } else if (entry.tag === 'FAM') {\r\n      fams[pointerToId(entry.pointer)] = entry;\r\n    } else if (entry.pointer) {\r\n      other[pointerToId(entry.pointer)] = entry;\r\n    }\r\n  });\r\n  return {head, indis, fams, other};\r\n}\r\n\r\nfunction strcmp(a: string, b: string) {\r\n  if (a < b) {\r\n    return -1;\r\n  }\r\n  if (a > b) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n/** Compares dates of the given events. */\r\nfunction compareDates(\r\n  event1: JsonEvent | undefined,\r\n  event2: JsonEvent | undefined,\r\n): number {\r\n  const date1 =\r\n    event1 && (event1.date || (event1.dateRange && event1.dateRange.from));\r\n  const date2 =\r\n    event2 && (event2.date || (event2.dateRange && event2.dateRange.from));\r\n  if (!date1 || !date1.year || !date2 || !date2.year) {\r\n    return 0;\r\n  }\r\n  if (date1.year !== date2.year) {\r\n    return date1.year - date2.year;\r\n  }\r\n  if (!date1.month || !date2.month) {\r\n    return 0;\r\n  }\r\n  if (date1.month !== date2.month) {\r\n    return date1.month - date2.month;\r\n  }\r\n  if (date1.day && date2.day && date1.day !== date2.day) {\r\n    return date1.month - date2.month;\r\n  }\r\n  return 0;\r\n}\r\n\r\n/** Birth date comparator for individuals. */\r\nfunction birthDatesComparator(gedcom: JsonGedcomData) {\r\n  const indiMap = idToIndiMap(gedcom);\r\n\r\n  return (indiId1: string, indiId2: string) => {\r\n    const indi1: JsonIndi | undefined = indiMap.get(indiId1);\r\n    const indi2: JsonIndi | undefined = indiMap.get(indiId2);\r\n    return (\r\n      compareDates(indi1 && indi1.birth, indi2 && indi2.birth) ||\r\n      strcmp(indiId1, indiId2)\r\n    );\r\n  };\r\n}\r\n\r\n/** Marriage date comparator for families. */\r\nfunction marriageDatesComparator(gedcom: JsonGedcomData) {\r\n  const famMap = idToFamMap(gedcom);\r\n\r\n  return (famId1: string, famId2: string) => {\r\n    const fam1: JsonFam | undefined = famMap.get(famId1);\r\n    const fam2: JsonFam | undefined = famMap.get(famId2);\r\n    return (\r\n      compareDates(fam1 && fam1.marriage, fam2 && fam2.marriage) ||\r\n      strcmp(famId1, famId2)\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * Sorts children by birth date in the given family.\r\n * Does not modify the input objects.\r\n */\r\nfunction sortFamilyChildren(\r\n  fam: JsonFam,\r\n  comparator: (id1: string, id2: string) => number,\r\n): JsonFam {\r\n  if (!fam.children) {\r\n    return fam;\r\n  }\r\n  const newChildren = fam.children.sort(comparator);\r\n  return Object.assign({}, fam, {children: newChildren});\r\n}\r\n\r\n/**\r\n * Sorts children by birth date.\r\n * Does not modify the input object.\r\n */\r\nfunction sortChildren(gedcom: JsonGedcomData): JsonGedcomData {\r\n  const comparator = birthDatesComparator(gedcom);\r\n  const newFams = gedcom.fams.map((fam) => sortFamilyChildren(fam, comparator));\r\n  return Object.assign({}, gedcom, {fams: newFams});\r\n}\r\n\r\n/**\r\n * Sorts spouses by marriage date.\r\n * Does not modify the input objects.\r\n */\r\nfunction sortIndiSpouses(\r\n  indi: JsonIndi,\r\n  comparator: (id1: string, id2: string) => number,\r\n): JsonFam {\r\n  if (!indi.fams) {\r\n    return indi;\r\n  }\r\n  const newFams = indi.fams.sort(comparator);\r\n  return Object.assign({}, indi, {fams: newFams});\r\n}\r\n\r\nfunction sortSpouses(gedcom: JsonGedcomData): JsonGedcomData {\r\n  const comparator = marriageDatesComparator(gedcom);\r\n  const newIndis = gedcom.indis.map((indi) =>\r\n    sortIndiSpouses(indi, comparator),\r\n  );\r\n  return Object.assign({}, gedcom, {indis: newIndis});\r\n}\r\n\r\n/** Sorts children and spouses. */\r\nexport function normalizeGedcom(gedcom: JsonGedcomData): JsonGedcomData {\r\n  return sortSpouses(sortChildren(gedcom));\r\n}\r\n\r\nconst IMAGE_EXTENSIONS = ['.jpg', '.png', '.gif'];\r\n\r\n/** Returns true if the given file name has a known image extension. */\r\nfunction isImageFile(fileName: string): boolean {\r\n  const lowerName = fileName.toLowerCase();\r\n  return IMAGE_EXTENSIONS.some((ext) => lowerName.endsWith(ext));\r\n}\r\n\r\n/**\r\n * Removes images that are not HTTP links or do not have known image extensions.\r\n * Does not modify the input object.\r\n */\r\nfunction filterImage(indi: JsonIndi, images: Map<string, string>): JsonIndi {\r\n  if (!indi.images || indi.images.length === 0) {\r\n    return indi;\r\n  }\r\n  const newImages: JsonImage[] = [];\r\n  indi.images.forEach((image) => {\r\n    const fileName = image.url.match(/[^/\\\\]*$/)![0];\r\n    // If the image file has been loaded into memory, use it.\r\n    if (images.has(fileName)) {\r\n      newImages.push({url: images.get(fileName)!, title: image.title});\r\n    } else if (image.url.startsWith('http') && isImageFile(image.url)) {\r\n      newImages.push(image);\r\n    }\r\n  });\r\n  return Object.assign({}, indi, {images: newImages});\r\n}\r\n\r\n/**\r\n * Removes images that are not HTTP links.\r\n * Does not modify the input object.\r\n */\r\nfunction filterImages(\r\n  gedcom: JsonGedcomData,\r\n  images: Map<string, string>,\r\n): JsonGedcomData {\r\n  const newIndis = gedcom.indis.map((indi) => filterImage(indi, images));\r\n  return Object.assign({}, gedcom, {indis: newIndis});\r\n}\r\n\r\n/**\r\n * Converts GEDCOM file into JSON data performing additional transformations:\r\n * - sort children by birth date\r\n * - remove images that are not HTTP links and aren't mapped in `images`.\r\n *\r\n * @param images Map from file name to image URL. This is used to pass in\r\n *   uploaded images.\r\n */\r\nexport function convertGedcom(\r\n  gedcom: string,\r\n  images: Map<string, string>,\r\n): TopolaData {\r\n  const entries = parseGedcom(gedcom);\r\n  const json = gedcomEntriesToJson(entries);\r\n  if (\r\n    !json ||\r\n    !json.indis ||\r\n    !json.indis.length ||\r\n    !json.fams ||\r\n    !json.fams.length\r\n  ) {\r\n    throw new TopolaError('GEDCOM_READ_FAILED', 'Failed to read GEDCOM file');\r\n  }\r\n\r\n  return {\r\n    chartData: filterImages(normalizeGedcom(json), images),\r\n    gedcom: prepareGedcom(entries),\r\n  };\r\n}\r\n\r\nexport function getSoftware(head: GedcomEntry): string | null {\r\n  const sour =\r\n    head && head.tree && head.tree.find((entry) => entry.tag === 'SOUR');\r\n  const name =\r\n    sour && sour.tree && sour.tree.find((entry) => entry.tag === 'NAME');\r\n  return (name && name.data) || null;\r\n}\r\n","import {Date as TopolaDate, DateOrRange, DateRange, getDate} from 'topola';\r\nimport {IntlShape} from 'react-intl';\r\n\r\nconst DATE_QUALIFIERS = new Map([\r\n  ['abt', 'about'],\r\n  ['cal', 'calculated'],\r\n  ['est', 'estimated'],\r\n]);\r\n\r\nfunction formatDate(date: TopolaDate, intl: IntlShape) {\r\n  const hasDay = date.day !== undefined;\r\n  const hasMonth = date.month !== undefined;\r\n  const hasYear = date.year !== undefined;\r\n  if (!hasDay && !hasMonth && !hasYear) {\r\n    return date.text || '';\r\n  }\r\n  const dateObject = new Date(\r\n    hasYear ? date.year! : 0,\r\n    hasMonth ? date.month! - 1 : 0,\r\n    hasDay ? date.day! : 1,\r\n  );\r\n\r\n  const qualifier = date.qualifier && date.qualifier.toLowerCase();\r\n  const translatedQualifier =\r\n    qualifier &&\r\n    intl.formatMessage({\r\n      id: `date.${qualifier}`,\r\n      defaultMessage: DATE_QUALIFIERS.get(qualifier) || qualifier,\r\n    });\r\n\r\n  const formatOptions: Intl.DateTimeFormatOptions = {\r\n    day: hasDay ? 'numeric' : undefined,\r\n    month: hasMonth ? 'long' : undefined,\r\n    year: hasYear ? 'numeric' : undefined,\r\n  };\r\n  const translatedDate = new Intl.DateTimeFormat(\r\n    intl.locale,\r\n    formatOptions,\r\n  ).format(dateObject);\r\n\r\n  return [translatedQualifier, translatedDate].join(' ');\r\n}\r\n\r\nfunction formatDateRage(dateRange: DateRange, intl: IntlShape) {\r\n  const fromDate = dateRange.from;\r\n  const toDate = dateRange.to;\r\n  const translatedFromDate = fromDate && formatDate(fromDate, intl);\r\n  const translatedToDate = toDate && formatDate(toDate, intl);\r\n  if (translatedFromDate && translatedToDate) {\r\n    return intl.formatMessage(\r\n      {\r\n        id: 'date.between',\r\n        defaultMessage: 'between {from} and {to}',\r\n      },\r\n      {from: translatedFromDate, to: translatedToDate},\r\n    );\r\n  }\r\n  if (translatedFromDate) {\r\n    return intl.formatMessage(\r\n      {\r\n        id: 'date.after',\r\n        defaultMessage: 'after {from}',\r\n      },\r\n      {from: translatedFromDate},\r\n    );\r\n  }\r\n  if (translatedToDate) {\r\n    return intl.formatMessage(\r\n      {\r\n        id: 'date.before',\r\n        defaultMessage: 'before {to}',\r\n      },\r\n      {to: translatedToDate},\r\n    );\r\n  }\r\n  return '';\r\n}\r\n\r\n/** Formats a DateOrRange object. */\r\nexport function formatDateOrRange(\r\n  dateOrRange: DateOrRange | undefined,\r\n  intl: IntlShape,\r\n): string {\r\n  if (!dateOrRange) {\r\n    return '';\r\n  }\r\n  if (dateOrRange.date) {\r\n    return formatDate(dateOrRange.date, intl);\r\n  }\r\n  if (dateOrRange.dateRange) {\r\n    return formatDateRage(dateOrRange.dateRange, intl);\r\n  }\r\n  return '';\r\n}\r\n\r\n/** Formats a date given in GEDCOM format. */\r\nexport function translateDate(gedcomDate: string, intl: IntlShape): string {\r\n  return formatDateOrRange(getDate(gedcomDate), intl);\r\n}\r\n","import * as React from 'react';\r\nimport flatMap from 'array.prototype.flatmap';\r\nimport Linkify from 'react-linkify';\r\nimport {\r\n  FormattedMessage,\r\n  injectIntl,\r\n  IntlShape,\r\n  WrappedComponentProps,\r\n} from 'react-intl';\r\nimport {GedcomData, pointerToId} from './util/gedcom_util';\r\nimport {GedcomEntry} from 'parse-gedcom';\r\nimport {translateDate} from './util/date_util';\r\n\r\ninterface Props {\r\n  gedcom: GedcomData;\r\n  indi: string;\r\n}\r\n\r\nconst EVENT_TAGS = ['BIRT', 'BAPM', 'CHR', 'EVEN', 'CENS', 'DEAT', 'BURI'];\r\nconst EXCLUDED_TAGS = ['NAME', 'SEX', 'FAMC', 'FAMS', 'NOTE', 'SOUR'];\r\nconst TAG_DESCRIPTIONS = new Map([\r\n  ['ADOP', 'Adoption'],\r\n  ['BAPM', 'Baptism'],\r\n  ['BIRT', 'Birth'],\r\n  ['BURI', 'Burial'],\r\n  ['CENS', 'Census'],\r\n  ['CHR', 'Christening'],\r\n  ['CREM', 'Cremation'],\r\n  ['DEAT', 'Death'],\r\n  ['EDUC', 'Education'],\r\n  ['EMAIL', 'E-mail'],\r\n  ['EMIG', 'Emigration'],\r\n  ['EVEN', 'Event'],\r\n  ['FACT', 'Fact'],\r\n  ['IMMI', 'Immigration'],\r\n  ['MARR', 'Marriage'],\r\n  ['MILT', 'Military services'],\r\n  ['NATU', 'Naturalization'],\r\n  ['OCCU', 'Occupation'],\r\n  ['TITL', 'Title'],\r\n  ['WWW', 'WWW'],\r\n]);\r\n\r\nfunction translateTag(tag: string) {\r\n  const normalizedTag = tag.replace(/_/g, '');\r\n  return (\r\n    <FormattedMessage\r\n      id={`gedcom.${normalizedTag}`}\r\n      defaultMessage={TAG_DESCRIPTIONS.get(normalizedTag) || normalizedTag}\r\n    />\r\n  );\r\n}\r\n\r\nfunction joinLines(lines: (JSX.Element | string)[]) {\r\n  return (\r\n    <>\r\n      {lines.map((line, index) => (\r\n        <div key={index}>\r\n          <Linkify properties={{target: '_blank'}}>{line}</Linkify>\r\n          <br />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\n/**\r\n * Returns the data for the given GEDCOM entry as an array of lines. Supports\r\n * continuations with CONT and CONC.\r\n */\r\nfunction getData(entry: GedcomEntry) {\r\n  const result = [entry.data];\r\n  entry.tree.forEach((subentry) => {\r\n    if (subentry.tag === 'CONC' && subentry.data) {\r\n      const last = result.length - 1;\r\n      result[last] += subentry.data;\r\n    } else if (subentry.tag === 'CONT' && subentry.data) {\r\n      result.push(subentry.data);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction eventDetails(entry: GedcomEntry, intl: IntlShape) {\r\n  const lines = [];\r\n  if (entry.data && entry.data.length > 1) {\r\n    lines.push(<i>{entry.data}</i>);\r\n  }\r\n  const date = entry.tree.find((subentry) => subentry.tag === 'DATE');\r\n  if (date && date.data) {\r\n    lines.push(translateDate(date.data, intl));\r\n  }\r\n  const place = entry.tree.find((subentry) => subentry.tag === 'PLAC');\r\n  if (place && place.data) {\r\n    lines.push(...getData(place));\r\n  }\r\n  entry.tree\r\n    .filter((subentry) => subentry.tag === 'NOTE')\r\n    .forEach((note) =>\r\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\r\n    );\r\n  if (!lines.length) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\r\n      <span>{joinLines(lines)}</span>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction dataDetails(entry: GedcomEntry) {\r\n  const lines = [];\r\n  if (entry.data) {\r\n    lines.push(...getData(entry));\r\n  }\r\n  entry.tree\r\n    .filter((subentry) => subentry.tag === 'NOTE')\r\n    .forEach((note) =>\r\n      getData(note).forEach((line) => lines.push(<i>{line}</i>)),\r\n    );\r\n  if (!lines.length) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"ui sub header\">{translateTag(entry.tag)}</div>\r\n      <span>{joinLines(lines)}</span>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction noteDetails(entry: GedcomEntry) {\r\n  return joinLines(\r\n    getData(entry).map((line, index) => <i key={index}>{line}</i>),\r\n  );\r\n}\r\n\r\nfunction nameDetails(entry: GedcomEntry) {\r\n  return (\r\n    <h2 className=\"ui header\">\r\n      {entry.data\r\n        .split('/')\r\n        .filter((name) => !!name)\r\n        .map((name, index) => (\r\n          <div key={index}>\r\n            {name}\r\n            <br />\r\n          </div>\r\n        ))}\r\n    </h2>\r\n  );\r\n}\r\n\r\nfunction getDetails(\r\n  entries: GedcomEntry[],\r\n  tags: string[],\r\n  detailsFunction: (entry: GedcomEntry) => JSX.Element | null,\r\n): JSX.Element[] {\r\n  return flatMap(tags, (tag) =>\r\n    entries\r\n      .filter((entry) => entry.tag === tag)\r\n      .map((entry) => detailsFunction(entry)),\r\n  )\r\n    .filter((element) => element !== null)\r\n    .map((element, index) => (\r\n      <div className=\"ui segment\" key={index}>\r\n        {element}\r\n      </div>\r\n    ));\r\n}\r\n\r\n/**\r\n * Returns true if there is displayable information in this entry.\r\n * Returns false if there is no data in this entry or this is only a reference\r\n * to another entry.\r\n */\r\nfunction hasData(entry: GedcomEntry) {\r\n  return entry.tree.length > 0 || (entry.data && !entry.data.startsWith('@'));\r\n}\r\n\r\nfunction getOtherDetails(entries: GedcomEntry[]) {\r\n  return entries\r\n    .filter(\r\n      (entry) =>\r\n        !EXCLUDED_TAGS.includes(entry.tag) && !EVENT_TAGS.includes(entry.tag),\r\n    )\r\n    .filter(hasData)\r\n    .map((entry) => dataDetails(entry))\r\n    .filter((element) => element !== null)\r\n    .map((element, index) => (\r\n      <div className=\"ui segment\" key={index}>\r\n        {element}\r\n      </div>\r\n    ));\r\n}\r\n\r\n/**\r\n * If the entry is a reference to a top-level entry, the referenced entry is\r\n * returned. Otherwise, returns the given entry unmodified.\r\n */\r\nfunction dereference(entry: GedcomEntry, gedcom: GedcomData) {\r\n  if (entry.data) {\r\n    const dereferenced = gedcom.other[pointerToId(entry.data)];\r\n    if (dereferenced) {\r\n      return dereferenced;\r\n    }\r\n  }\r\n  return entry;\r\n}\r\n\r\nclass DetailsComponent extends React.Component<\r\n  Props & WrappedComponentProps,\r\n  {}\r\n> {\r\n  render() {\r\n    const entries = this.props.gedcom.indis[this.props.indi].tree;\r\n    const entriesWithData = entries\r\n      .map((entry) => dereference(entry, this.props.gedcom))\r\n      .filter(hasData);\r\n\r\n    return (\r\n      <div className=\"ui segments\" id=\"details\">\r\n        {getDetails(entries, ['NAME'], nameDetails)}\r\n        {getDetails(entries, EVENT_TAGS, (entry) =>\r\n          eventDetails(entry, this.props.intl),\r\n        )}\r\n        {getOtherDetails(entriesWithData)}\r\n        {getDetails(entriesWithData, ['NOTE'], noteDetails)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport const Details = injectIntl(DetailsComponent);\r\n","import {analyticsEvent} from '../util/analytics';\r\nimport {convertGedcom, getSoftware, TopolaData} from '../util/gedcom_util';\r\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\r\nimport {IndiInfo, JsonGedcomData} from 'topola';\r\nimport {TopolaError} from '../util/error';\r\n\r\n/**\r\n * Returns a valid IndiInfo object, either with the given indi and generation\r\n * or with an individual taken from the data and generation 0.\r\n */\r\nexport function getSelection(\r\n  data: JsonGedcomData,\r\n  selection?: IndiInfo,\r\n): IndiInfo {\r\n  // If ID is not given or it doesn't exist in the data, use the first ID in\r\n  // the data.\r\n  const id =\r\n    selection && data.indis.some((i) => i.id === selection.id)\r\n      ? selection.id\r\n      : data.indis[0].id;\r\n  return {id, generation: selection?.generation || 0};\r\n}\r\n\r\nfunction prepareData(\r\n  gedcom: string,\r\n  cacheId: string,\r\n  images?: Map<string, string>,\r\n): TopolaData {\r\n  const data = convertGedcom(gedcom, images || new Map());\r\n  const serializedData = JSON.stringify(data);\r\n  try {\r\n    sessionStorage.setItem(cacheId, serializedData);\r\n  } catch (e) {\r\n    console.warn('Failed to store data in session storage: ' + e);\r\n  }\r\n  return data;\r\n}\r\n\r\n/** Fetches data from the given URL. Uses cors-anywhere if handleCors is true. */\r\nexport async function loadFromUrl(\r\n  url: string,\r\n  handleCors: boolean,\r\n): Promise<TopolaData> {\r\n  try {\r\n    const cachedData = sessionStorage.getItem(url);\r\n    if (cachedData) {\r\n      return JSON.parse(cachedData);\r\n    }\r\n  } catch (e) {\r\n    console.warn('Failed to load data from session storage: ' + e);\r\n  }\r\n\r\n  const driveUrlMatch1 = url.match(\r\n    /https:\\/\\/drive\\.google\\.com\\/file\\/d\\/(.*)\\/.*/,\r\n  );\r\n  if (driveUrlMatch1) {\r\n    url = `https://drive.google.com/uc?id=${driveUrlMatch1[1]}&export=download`;\r\n  }\r\n  const driveUrlMatch2 = url.match(\r\n    /https:\\/\\/drive\\.google\\.com\\/open\\?id=([^&]*)&?.*/,\r\n  );\r\n  if (driveUrlMatch2) {\r\n    url = `https://drive.google.com/uc?id=${driveUrlMatch2[1]}&export=download`;\r\n  }\r\n\r\n  const urlToFetch = handleCors\r\n    ? 'https://topola-cors.herokuapp.com/' + url\r\n    : url;\r\n\r\n  const response = await window.fetch(urlToFetch);\r\n  if (response.status !== 200) {\r\n    throw new Error(response.statusText);\r\n  }\r\n  const gedcom = await response.text();\r\n  return prepareData(gedcom, url);\r\n}\r\n\r\n/** Loads data from the given GEDCOM file contents. */\r\nexport async function loadGedcom(\r\n  hash: string,\r\n  gedcom?: string,\r\n  images?: Map<string, string>,\r\n): Promise<TopolaData> {\r\n  try {\r\n    const cachedData = sessionStorage.getItem(hash);\r\n    if (cachedData) {\r\n      return JSON.parse(cachedData);\r\n    }\r\n  } catch (e) {\r\n    console.warn('Failed to load data from session storage: ' + e);\r\n  }\r\n  if (!gedcom) {\r\n    throw new TopolaError(\r\n      'ERROR_LOADING_UPLOADED_FILE',\r\n      'Error loading data. Please upload your file again.',\r\n    );\r\n  }\r\n  return prepareData(gedcom, hash, images);\r\n}\r\n\r\nexport interface UploadSourceSpec {\r\n  source: DataSourceEnum.UPLOADED;\r\n  gedcom?: string;\r\n  /** Hash of the GEDCOM contents. */\r\n  hash: string;\r\n  images?: Map<string, string>;\r\n}\r\n\r\n/** Files opened from the local computer. */\r\nexport class UploadedDataSource implements DataSource<UploadSourceSpec> {\r\n  // isNewData(args: Arguments, state: State): boolean {\r\n  isNewData(\r\n    newSource: SourceSelection<UploadSourceSpec>,\r\n    oldSource: SourceSelection<UploadSourceSpec>,\r\n    data?: TopolaData,\r\n  ): boolean {\r\n    return newSource.spec.hash !== oldSource.spec.hash;\r\n  }\r\n\r\n  async loadData(\r\n    source: SourceSelection<UploadSourceSpec>,\r\n  ): Promise<TopolaData> {\r\n    try {\r\n      const data = await loadGedcom(\r\n        source.spec.hash,\r\n        source.spec.gedcom,\r\n        source.spec.images,\r\n      );\r\n      const software = getSoftware(data.gedcom.head);\r\n      analyticsEvent('upload_file_loaded', {\r\n        event_label: software,\r\n        event_value: (source.spec.images && source.spec.images.size) || 0,\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      analyticsEvent('upload_file_error');\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport interface UrlSourceSpec {\r\n  source: DataSourceEnum.GEDCOM_URL;\r\n  /** URL of the data that is loaded or is being loaded. */\r\n  url: string;\r\n  handleCors: boolean;\r\n}\r\n\r\n/** GEDCOM file loaded by pointing to a URL. */\r\nexport class GedcomUrlDataSource implements DataSource<UrlSourceSpec> {\r\n  isNewData(\r\n    newSource: SourceSelection<UrlSourceSpec>,\r\n    oldSource: SourceSelection<UrlSourceSpec>,\r\n    data?: TopolaData,\r\n  ): boolean {\r\n    return newSource.spec.url !== oldSource.spec.url;\r\n  }\r\n\r\n  async loadData(source: SourceSelection<UrlSourceSpec>): Promise<TopolaData> {\r\n    try {\r\n      const data = await loadFromUrl(source.spec.url, source.spec.handleCors);\r\n      const software = getSoftware(data.gedcom.head);\r\n      analyticsEvent('upload_file_loaded', {event_label: software});\r\n      return data;\r\n    } catch (error) {\r\n      analyticsEvent('url_file_error');\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import {analyticsEvent} from '../util/analytics';\r\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\r\nimport {getSoftware, TopolaData} from '../util/gedcom_util';\r\nimport {loadGedcom} from './load_data';\r\n\r\n/**\r\n * Message types used in embedded mode.\r\n * When the parent is ready to receive messages, it sends PARENT_READY.\r\n * When the child (this app) is ready to receive messages, it sends READY.\r\n * When the child receives PARENT_READY, it sends READY.\r\n * When the parent receives READY, it sends data in a GEDCOM message.\r\n */\r\nenum EmbeddedMessageType {\r\n  GEDCOM = 'gedcom',\r\n  READY = 'ready',\r\n  PARENT_READY = 'parent_ready',\r\n}\r\n\r\n/** Message sent to parent or received from parent in embedded mode. */\r\ninterface EmbeddedMessage {\r\n  message: EmbeddedMessageType;\r\n}\r\n\r\ninterface GedcomMessage extends EmbeddedMessage {\r\n  message: EmbeddedMessageType.GEDCOM;\r\n  gedcom?: string;\r\n}\r\n\r\nexport interface EmbeddedSourceSpec {\r\n  source: DataSourceEnum.EMBEDDED;\r\n}\r\n\r\n/** GEDCOM file received from outside of the iframe. */\r\nexport class EmbeddedDataSource implements DataSource<EmbeddedSourceSpec> {\r\n  isNewData(\r\n    newSource: SourceSelection<EmbeddedSourceSpec>,\r\n    oldSource: SourceSelection<EmbeddedSourceSpec>,\r\n    data?: TopolaData,\r\n  ): boolean {\r\n    // Never reload data.\r\n    return false;\r\n  }\r\n\r\n  private async onMessage(\r\n    message: EmbeddedMessage,\r\n    resolve: (value: TopolaData) => void,\r\n    reject: (reason: any) => void,\r\n  ) {\r\n    if (message.message === EmbeddedMessageType.PARENT_READY) {\r\n      // Parent didn't receive the first 'ready' message, so we need to send it again.\r\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\r\n    } else if (message.message === EmbeddedMessageType.GEDCOM) {\r\n      const gedcom = (message as GedcomMessage).gedcom;\r\n      if (!gedcom) {\r\n        return;\r\n      }\r\n      try {\r\n        const data = await loadGedcom('', gedcom);\r\n        const software = getSoftware(data.gedcom.head);\r\n        analyticsEvent('embedded_file_loaded', {\r\n          event_label: software,\r\n        });\r\n        resolve(data);\r\n      } catch (error) {\r\n        analyticsEvent('embedded_file_error');\r\n        reject(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  async loadData(\r\n    source: SourceSelection<EmbeddedSourceSpec>,\r\n  ): Promise<TopolaData> {\r\n    // Notify the parent window that we are ready.\r\n    return new Promise<TopolaData>((resolve, reject) => {\r\n      window.parent.postMessage({message: EmbeddedMessageType.READY}, '*');\r\n      window.addEventListener('message', (data) =>\r\n        this.onMessage(data.data, resolve, reject),\r\n      );\r\n    });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/topola.a3ffa9a5.jpg\";","import * as queryString from 'query-string';\r\nimport * as React from 'react';\r\nimport logo from './topola.jpg';\r\nimport {Card, Grid, Image} from 'semantic-ui-react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {Link} from 'react-router-dom';\r\nimport {Media} from './util/media';\r\n\r\n/** Link that loads a GEDCOM file from URL. */\r\nfunction GedcomLink(props: {url: string; text: string}) {\r\n  return (\r\n    <Link\r\n      to={{pathname: '/view', search: queryString.stringify({url: props.url})}}\r\n    >\r\n      {props.text}\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction formatBuildDate(dateString: string) {\r\n  return dateString.slice(0, 16);\r\n}\r\n\r\n/** The intro page. */\r\nexport function Intro() {\r\n  const contents = (\r\n    <>\r\n      <p>\r\n        <FormattedMessage\r\n          id=\"intro.description\"\r\n          defaultMessage={\r\n            'Topola Genealogy is a genealogy tree viewer that lets you' +\r\n            ' browse the structure of the family.'\r\n          }\r\n        />\r\n      </p>\r\n      <p>\r\n        <FormattedMessage\r\n          id=\"intro.instructions\"\r\n          defaultMessage={\r\n            'Use the OPEN FILE or LOAD FROM URL buttons above to load' +\r\n            ' a GEDCOM file. You can export a GEDCOM file from most of the' +\r\n            ' existing genealogy programs and web sites.'\r\n          }\r\n        />\r\n      </p>\r\n      <p>\r\n        <FormattedMessage\r\n          id=\"intro.examples\"\r\n          defaultMessage={\r\n            'Here are some examples from the web that you can view:'\r\n          }\r\n        />\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          <GedcomLink\r\n            url=\"http://genpol.com/module-Downloads-prep_hand_out-lid-32.html\"\r\n            text=\"Karol Wojtyła\"\r\n          />{' '}\r\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\r\n          <a href=\"http://genpol.com/module-Downloads-display-lid-32.html\">\r\n            GENPOL\r\n          </a>\r\n          )\r\n        </li>\r\n        <li>\r\n          <GedcomLink\r\n            url=\"https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/shakespeare.ged\"\r\n            text=\"Shakespeare\"\r\n          />{' '}\r\n          (<FormattedMessage id=\"intro.from\" defaultMessage=\"from\" />{' '}\r\n          <a href=\"https://webtreeprint.com/tp_famous_gedcoms.php\">\r\n            webtreeprint.com\r\n          </a>\r\n          )\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        <b>\r\n          <FormattedMessage id=\"intro.privacy\" defaultMessage=\"Privacy\" />\r\n        </b>\r\n        {': '}\r\n        <FormattedMessage\r\n          id=\"intro.privacy_note\"\r\n          defaultMessage={\r\n            'When using the \"load from file\" option, this site does not' +\r\n            ' send your data anywhere and files loaded from disk do not' +\r\n            ' leave your computer. When using \"load from URL\", data is' +\r\n            ' passed through the {link} service to deal with an issue with' +\r\n            ' cross-site file loading in the browser (CORS).'\r\n          }\r\n          values={{\r\n            link: (\r\n              <a href=\"https://topola-cors.herokuapp.com/\">cors-anywhere</a>\r\n            ),\r\n          }}\r\n        />\r\n      </p>\r\n      <p className=\"ui right aligned version\">\r\n        version: {formatBuildDate(process.env.REACT_APP_GIT_TIME!)} (\r\n        <a\r\n          href={`https://github.com/PeWu/topola-viewer/commit/${process.env.REACT_APP_GIT_SHA}`}\r\n        >\r\n          {process.env.REACT_APP_GIT_SHA}\r\n        </a>\r\n        )\r\n      </p>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div id=\"content\">\r\n      <div className=\"backgroundImage\" />\r\n      <Card className=\"intro\">\r\n        <Card.Content as={Media} at=\"large\">\r\n          <Card.Header>\r\n            <FormattedMessage\r\n              id=\"intro.title\"\r\n              defaultMessage=\"Topola Genealogy Viewer\"\r\n            />\r\n          </Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          <Grid as={Media} at=\"large\">\r\n            <Grid.Row>\r\n              <Grid.Column width={5}>\r\n                <Image src={logo} alt=\"Topola logo\" />\r\n              </Grid.Column>\r\n              <Grid.Column width={11}>{contents}</Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n          <Media at=\"small\">\r\n            <Image\r\n              src={logo}\r\n              alt=\"Topola logo\"\r\n              centered={true}\r\n              size=\"tiny\"\r\n              className=\"blockImage\"\r\n            />\r\n            {contents}\r\n          </Media>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n  Menu,\r\n  Dropdown,\r\n  MenuItemProps,\r\n  DropdownItemProps,\r\n} from 'semantic-ui-react';\r\n\r\nexport enum MenuType {\r\n  Menu,\r\n  Dropdown,\r\n}\r\n\r\ninterface Props {\r\n  menuType?: MenuType;\r\n}\r\n\r\nexport class MenuItem extends React.Component<\r\n  Props & MenuItemProps & DropdownItemProps\r\n> {\r\n  render() {\r\n    const newProps = {...this.props};\r\n    // Remove menuType from props to avoid error message in the console.\r\n    delete newProps.menuType;\r\n    return (\r\n      <>\r\n        {this.props.menuType === MenuType.Menu ? (\r\n          <Menu.Item {...newProps}>{this.props.children}</Menu.Item>\r\n        ) : (\r\n          <Dropdown.Item {...newProps}>{this.props.children}</Dropdown.Item>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import lunr from 'lunr';\r\nimport naturalSort from 'javascript-natural-sort';\r\nimport {idToFamMap, idToIndiMap} from '../util/gedcom_util';\r\nimport {JsonFam, JsonGedcomData, JsonIndi} from 'topola';\r\n\r\n// TODO: Add type declarations and use import instead of require.\r\nrequire('lunr-languages/lunr.stemmer.support')(lunr);\r\nrequire('lunr-languages/lunr.multi')(lunr);\r\nrequire('lunr-languages/lunr.de')(lunr);\r\nrequire('lunr-languages/lunr.fr')(lunr);\r\nrequire('lunr-languages/lunr.it')(lunr);\r\nrequire('lunr-languages/lunr.ru')(lunr);\r\n\r\nconst MAX_RESULTS = 8;\r\n\r\nexport interface SearchResult {\r\n  id: string;\r\n  indi: JsonIndi;\r\n}\r\n\r\nexport interface SearchIndex {\r\n  search(input: string): SearchResult[];\r\n}\r\n\r\n/** Removes accents from letters, e.g. ó->o, ę->e. */\r\nfunction normalize(input: string) {\r\n  return input\r\n    .toLocaleLowerCase()\r\n    .normalize('NFD')\r\n    .replace(/[\\u0300-\\u036f]/g, '')\r\n    .replace(/\\u0142/g, 'l'); // Special case: ł is not affected by NFD.\r\n}\r\n\r\n/** Comparator to sort by score first, then by id. */\r\nfunction compare(a: lunr.Index.Result, b: lunr.Index.Result) {\r\n  if (a.score !== b.score) {\r\n    return b.score - a.score;\r\n  }\r\n  return naturalSort(a.ref, b.ref);\r\n}\r\n\r\n/** Returns all last names of all husbands as a space-separated string. */\r\nfunction getHusbandLastName(\r\n  indi: JsonIndi,\r\n  indiMap: Map<String, JsonIndi>,\r\n  famMap: Map<string, JsonFam>,\r\n): string {\r\n  return (indi.fams || [])\r\n    .map((famId) => famMap.get(famId))\r\n    .map((fam) => fam && fam.husb)\r\n    .map((husbId) => husbId && indiMap.get(husbId))\r\n    .map((husband) => husband && husband.lastName)\r\n    .join(' ');\r\n}\r\n\r\nclass LunrSearchIndex implements SearchIndex {\r\n  private index: lunr.Index | undefined;\r\n  private indiMap: Map<string, JsonIndi>;\r\n  private famMap: Map<string, JsonFam>;\r\n\r\n  constructor(data: JsonGedcomData) {\r\n    this.indiMap = idToIndiMap(data);\r\n    this.famMap = idToFamMap(data);\r\n  }\r\n\r\n  initialize() {\r\n    const self = this;\r\n    this.index = lunr(function () {\r\n      this.use((lunr as any).multiLanguage('de', 'en', 'fr', 'it', 'ru'));\r\n      this.ref('id');\r\n      this.field('id');\r\n      this.field('name', {boost: 10});\r\n      this.field('normalizedName', {boost: 8});\r\n      this.field('spouseLastName', {boost: 2});\r\n      this.field('normalizedSpouseLastName', {boost: 2});\r\n\r\n      self.indiMap.forEach((indi) => {\r\n        const name = [indi.firstName, indi.lastName].join(' ');\r\n        const spouseLastName = getHusbandLastName(\r\n          indi,\r\n          self.indiMap,\r\n          self.famMap,\r\n        );\r\n        this.add({\r\n          id: indi.id,\r\n          name,\r\n          normalizedName: normalize(name),\r\n          spouseLastName,\r\n          normalizedSpouseLastName: normalize(spouseLastName),\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  public search(input: string): SearchResult[] {\r\n    const query = input\r\n      .split(' ')\r\n      .filter((s) => !!s)\r\n      .map((s) => `+${s}*`)\r\n      .join(' ');\r\n    const results = this.index!.search(query);\r\n    return results\r\n      .sort(compare)\r\n      .slice(0, MAX_RESULTS)\r\n      .map((result) => ({id: result.ref, indi: this.indiMap.get(result.ref)!}));\r\n  }\r\n}\r\n\r\n/** Builds a search index from data. */\r\nexport function buildSearchIndex(data: JsonGedcomData): SearchIndex {\r\n  const index = new LunrSearchIndex(data);\r\n  index.initialize();\r\n  return index;\r\n}\r\n","import * as React from 'react';\r\nimport debounce from 'debounce';\r\nimport {analyticsEvent} from '../util/analytics';\r\nimport {buildSearchIndex, SearchIndex, SearchResult} from './search_index';\r\nimport {formatDateOrRange} from '../util/date_util';\r\nimport {IndiInfo, JsonGedcomData} from 'topola';\r\nimport {injectIntl, WrappedComponentProps} from 'react-intl';\r\nimport {JsonIndi} from 'topola';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\nimport {Search, SearchProps, SearchResultProps} from 'semantic-ui-react';\r\n\r\nfunction getNameLine(result: SearchResult) {\r\n  const name = [result.indi.firstName, result.indi.lastName].join(' ').trim();\r\n  if (result.id.length > 8) {\r\n    return name;\r\n  }\r\n  return (\r\n    <>\r\n      {name} <i>({result.id})</i>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  /** Data used for the search index. */\r\n  data: JsonGedcomData;\r\n  onSelection: (indiInfo: IndiInfo) => void;\r\n}\r\n\r\ninterface State {\r\n  searchResults: SearchResultProps[];\r\n}\r\n\r\n/** Displays and handles the search box in the top bar. */\r\nclass SearchBarComponent extends React.Component<\r\n  RouteComponentProps & WrappedComponentProps & Props,\r\n  State\r\n> {\r\n  state: State = {\r\n    searchResults: [],\r\n  };\r\n\r\n  searchRef?: {setValue(value: string): void};\r\n  searchIndex?: SearchIndex;\r\n\r\n  private getDescriptionLine(indi: JsonIndi) {\r\n    const birthDate = formatDateOrRange(indi.birth, this.props.intl);\r\n    const deathDate = formatDateOrRange(indi.death, this.props.intl);\r\n    if (!deathDate) {\r\n      return birthDate;\r\n    }\r\n    return `${birthDate} – ${deathDate}`;\r\n  }\r\n\r\n  /** Produces an object that is displayed in the Semantic UI Search results. */\r\n  private displaySearchResult(result: SearchResult) {\r\n    return {\r\n      id: result.id,\r\n      key: result.id,\r\n      title: getNameLine(result),\r\n      description: this.getDescriptionLine(result.indi),\r\n    };\r\n  }\r\n\r\n  /** On search input change. */\r\n  private handleSearch(input: string | undefined) {\r\n    if (!input) {\r\n      return;\r\n    }\r\n    const results = this.searchIndex!.search(input).map((result) =>\r\n      this.displaySearchResult(result),\r\n    );\r\n    this.setState(Object.assign({}, this.state, {searchResults: results}));\r\n  }\r\n\r\n  /** On search result selected. */\r\n  private handleResultSelect(id: string) {\r\n    analyticsEvent('search_result_selected');\r\n    this.props.onSelection({id, generation: 0});\r\n    this.searchRef!.setValue('');\r\n  }\r\n\r\n  private initializeSearchIndex() {\r\n    this.searchIndex = buildSearchIndex(this.props.data);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeSearchIndex();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (prevProps.data !== this.props.data) {\r\n      this.initializeSearchIndex();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Search\r\n        onSearchChange={debounce(\r\n          (_: React.MouseEvent<HTMLElement>, data: SearchProps) =>\r\n            this.handleSearch(data.value),\r\n          200,\r\n        )}\r\n        onResultSelect={(_, data) => this.handleResultSelect(data.result.id)}\r\n        results={this.state.searchResults}\r\n        noResultsMessage={this.props.intl.formatMessage({\r\n          id: 'menu.search.no_results',\r\n          defaultMessage: 'No results found',\r\n        })}\r\n        placeholder={this.props.intl.formatMessage({\r\n          id: 'menu.search.placeholder',\r\n          defaultMessage: 'Search for people',\r\n        })}\r\n        selectFirstResult={true}\r\n        ref={(ref) =>\r\n          (this.searchRef = (ref as unknown) as {\r\n            setValue(value: string): void;\r\n          })\r\n        }\r\n        id=\"search\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport const SearchBar = injectIntl(SearchBarComponent);\r\n","import * as queryString from 'query-string';\r\nimport * as React from 'react';\r\nimport md5 from 'md5';\r\nimport {analyticsEvent} from '../util/analytics';\r\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {MenuType} from './menu_item';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\n\r\nfunction loadFileAsText(file: File): Promise<string> {\r\n  return new Promise((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (evt: ProgressEvent) => {\r\n      resolve((evt.target as FileReader).result as string);\r\n    };\r\n    reader.readAsText(file);\r\n  });\r\n}\r\n\r\nfunction isImageFileName(fileName: string) {\r\n  const lower = fileName.toLowerCase();\r\n  return lower.endsWith('.jpg') || lower.endsWith('.png');\r\n}\r\n\r\ninterface Props {\r\n  menuType: MenuType;\r\n}\r\n\r\n/** Displays and handles the \"Open file\" menu. */\r\nexport class UploadMenu extends React.Component<RouteComponentProps & Props> {\r\n  private async handleUpload(event: React.SyntheticEvent<HTMLInputElement>) {\r\n    const files = (event.target as HTMLInputElement).files;\r\n    if (!files || !files.length) {\r\n      return;\r\n    }\r\n    const filesArray = Array.from(files);\r\n    (event.target as HTMLInputElement).value = ''; // Reset the file input.\r\n    analyticsEvent('upload_files_selected', {\r\n      event_value: files.length,\r\n    });\r\n\r\n    const gedcomFile =\r\n      filesArray.length === 1\r\n        ? filesArray[0]\r\n        : filesArray.find((file) => file.name.toLowerCase().endsWith('.ged')) ||\r\n          filesArray[0];\r\n\r\n    // Convert uploaded images to object URLs.\r\n    const images = filesArray\r\n      .filter(\r\n        (file) => file.name !== gedcomFile.name && isImageFileName(file.name),\r\n      )\r\n      .map((file) => ({\r\n        name: file.name,\r\n        url: URL.createObjectURL(file),\r\n      }));\r\n    const imageMap = new Map(\r\n      images.map((entry) => [entry.name, entry.url] as [string, string]),\r\n    );\r\n\r\n    const data = await loadFileAsText(gedcomFile);\r\n    const imageFileNames = images\r\n      .map((image) => image.name)\r\n      .sort()\r\n      .join('|');\r\n    // Hash GEDCOM contents with uploaded image file names.\r\n    const hash = md5(md5(data) + imageFileNames);\r\n\r\n    // Use history.replace() when reuploading the same file and history.push() when loading\r\n    // a new file.\r\n    const search = queryString.parse(this.props.location.search);\r\n    const historyPush =\r\n      search.file === hash\r\n        ? this.props.history.replace\r\n        : this.props.history.push;\r\n\r\n    historyPush({\r\n      pathname: '/view',\r\n      search: queryString.stringify({file: hash}),\r\n      state: {data, images: imageMap},\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const content = (\r\n      <>\r\n        <Icon name=\"folder open\" />\r\n        <FormattedMessage id=\"menu.open_file\" defaultMessage=\"Open file\" />\r\n      </>\r\n    );\r\n    return (\r\n      <>\r\n        {this.props.menuType === MenuType.Menu ? (\r\n          <label htmlFor=\"fileInput\">\r\n            <Menu.Item as=\"a\">{content}</Menu.Item>\r\n          </label>\r\n        ) : (\r\n          <Dropdown.Item as=\"label\" htmlFor=\"fileInput\">\r\n            {content}\r\n          </Dropdown.Item>\r\n        )}\r\n        <input\r\n          className=\"hidden\"\r\n          type=\"file\"\r\n          accept=\".ged,image/*\"\r\n          id=\"fileInput\"\r\n          multiple\r\n          onChange={(e) => this.handleUpload(e)}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import * as queryString from 'query-string';\r\nimport * as React from 'react';\r\nimport {analyticsEvent} from '../util/analytics';\r\nimport {Button, Form, Header, Icon, Input, Modal} from 'semantic-ui-react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {MenuItem, MenuType} from './menu_item';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\n\r\ninterface Props {\r\n  menuType: MenuType;\r\n}\r\n\r\ninterface State {\r\n  dialogOpen: boolean;\r\n  url?: string;\r\n}\r\n\r\n/** Displays and handles the \"Open URL\" menu. */\r\nexport class UrlMenu extends React.Component<\r\n  RouteComponentProps & Props,\r\n  State\r\n> {\r\n  state: State = {dialogOpen: false};\r\n\r\n  inputRef: React.RefObject<Input> = React.createRef();\r\n\r\n  /** Opens the \"Load from URL\" dialog. */\r\n  private openDialog() {\r\n    this.setState(Object.assign({}, this.state, {dialogOpen: true}), () =>\r\n      this.inputRef.current!.focus(),\r\n    );\r\n  }\r\n\r\n  /** Cancels any of the open dialogs. */\r\n  private handleClose() {\r\n    this.setState(\r\n      Object.assign({}, this.state, {\r\n        dialogOpen: false,\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Load button clicked in the \"Load from URL\" dialog. */\r\n  private handleLoad() {\r\n    this.setState(\r\n      Object.assign({}, this.state, {\r\n        dialogOpen: false,\r\n      }),\r\n    );\r\n    if (this.state.url) {\r\n      analyticsEvent('url_selected');\r\n      this.props.history.push({\r\n        pathname: '/view',\r\n        search: queryString.stringify({url: this.state.url}),\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Called when the URL input is typed into. */\r\n  private handleUrlChange(value: string) {\r\n    this.setState(\r\n      Object.assign({}, this.state, {\r\n        url: value,\r\n      }),\r\n    );\r\n  }\r\n\r\n  private loadFromUrlModal() {\r\n    return (\r\n      <Modal\r\n        open={this.state.dialogOpen}\r\n        onClose={() => this.handleClose()}\r\n        centered={false}\r\n      >\r\n        <Header>\r\n          <Icon name=\"cloud download\" />\r\n          <FormattedMessage\r\n            id=\"load_from_url.title\"\r\n            defaultMessage=\"Load from URL\"\r\n          />\r\n        </Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={() => this.handleLoad()}>\r\n            <Input\r\n              placeholder=\"https://\"\r\n              fluid\r\n              onChange={(e, data) => this.handleUrlChange(data.value)}\r\n              ref={this.inputRef}\r\n            />\r\n            <p>\r\n              <FormattedMessage\r\n                id=\"load_from_url.comment\"\r\n                defaultMessage={\r\n                  'Data from the URL will be loaded through {link} to avoid CORS issues.'\r\n                }\r\n                values={{\r\n                  link: (\r\n                    <a href=\"https://topola-cors.herokuapp.com/\">\r\n                      topola-cors.herokuapp.com\r\n                    </a>\r\n                  ),\r\n                }}\r\n              />\r\n            </p>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button secondary onClick={() => this.handleClose()}>\r\n            <FormattedMessage\r\n              id=\"load_from_url.cancel\"\r\n              defaultMessage=\"Cancel\"\r\n            />\r\n          </Button>\r\n          <Button primary onClick={() => this.handleLoad()}>\r\n            <FormattedMessage id=\"load_from_url.load\" defaultMessage=\"Load\" />\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MenuItem\r\n          onClick={() => this.openDialog()}\r\n          menuType={this.props.menuType}\r\n        >\r\n          <Icon name=\"cloud download\" />\r\n          <FormattedMessage\r\n            id=\"menu.load_from_url\"\r\n            defaultMessage=\"Load from URL\"\r\n          />\r\n        </MenuItem>\r\n        {this.loadFromUrlModal()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/wikitree.7bffea31.png\";","import Cookies from 'js-cookie';\r\nimport {analyticsEvent} from '../util/analytics';\r\nimport {DataSource, DataSourceEnum, SourceSelection} from './data_source';\r\nimport {Date, DateOrRange, JsonFam, JsonIndi} from 'topola';\r\nimport {GedcomData, normalizeGedcom, TopolaData} from '../util/gedcom_util';\r\nimport {GedcomEntry} from 'parse-gedcom';\r\nimport {IntlShape} from 'react-intl';\r\nimport {TopolaError} from '../util/error';\r\n\r\n/** Prefix for IDs of private individuals. */\r\nexport const PRIVATE_ID_PREFIX = '~Private';\r\n\r\n/**\r\n * Cookie where the logged in user name is stored. This cookie is shared\r\n * between apps hosted on apps.wikitree.com.\r\n */\r\nconst USER_NAME_COOKIE = 'wikidb_wtb_UserName';\r\n\r\n/** WikiTree API getAncestors request. */\r\ninterface GetAncestorsRequest {\r\n  action: 'getAncestors';\r\n  key: string;\r\n  fields: string;\r\n}\r\n\r\n/** WikiTree API getRelatives request. */\r\ninterface GetRelativesRequest {\r\n  action: 'getRelatives';\r\n  keys: string;\r\n  getChildren?: true;\r\n  getSpouses?: true;\r\n}\r\n\r\n/** WikiTree API clientLogin request. */\r\ninterface ClientLoginRequest {\r\n  action: 'clientLogin';\r\n  authcode: string;\r\n}\r\n\r\n/** WikiTree API clientLogin response. */\r\ninterface ClientLoginResponse {\r\n  result: string;\r\n  username: string;\r\n}\r\n\r\ntype WikiTreeRequest =\r\n  | GetAncestorsRequest\r\n  | GetRelativesRequest\r\n  | ClientLoginRequest;\r\n\r\n/** Person structure returned from WikiTree API. */\r\ninterface Person {\r\n  Id: number;\r\n  Name: string;\r\n  FirstName: string;\r\n  LastNameAtBirth: string;\r\n  RealName: string;\r\n  Spouses?: {[key: number]: Person};\r\n  Children: {[key: number]: Person};\r\n  Mother: number;\r\n  Father: number;\r\n  Gender: string;\r\n  BirthDate: string;\r\n  DeathDate: string;\r\n  BirthLocation: string;\r\n  DeathLocation: string;\r\n  BirthDateDecade: string;\r\n  DeathDateDecade: string;\r\n  marriage_location: string;\r\n  marriage_date: string;\r\n  DataStatus?: {\r\n    BirthDate: string;\r\n    DeathDate: string;\r\n  };\r\n  PhotoData?: {\r\n    path: string;\r\n    url: string;\r\n  };\r\n}\r\n\r\n/** Gets item from session storage. Logs exception if one is thrown. */\r\nfunction getSessionStorageItem(key: string): string | null {\r\n  try {\r\n    return sessionStorage.getItem(key);\r\n  } catch (e) {\r\n    console.warn('Failed to load data from session storage: ' + e);\r\n  }\r\n  return null;\r\n}\r\n\r\n/** Sets item in session storage. Logs exception if one is thrown. */\r\nfunction setSessionStorageItem(key: string, value: string) {\r\n  try {\r\n    sessionStorage.setItem(key, value);\r\n  } catch (e) {\r\n    console.warn('Failed to store data in session storage: ' + e);\r\n  }\r\n}\r\n\r\n/** Sends a request to the WikiTree API. Returns the parsed response JSON. */\r\nasync function wikiTreeGet(request: WikiTreeRequest, handleCors: boolean) {\r\n  const requestData = new FormData();\r\n  requestData.append('format', 'json');\r\n  for (const key in request) {\r\n    requestData.append(key, request[key]);\r\n  }\r\n  const apiUrl = handleCors\r\n    ? 'https://topola-cors.herokuapp.com/https://api.wikitree.com/api.php'\r\n    : 'https://api.wikitree.com/api.php';\r\n  const response = await window.fetch(apiUrl, {\r\n    method: 'POST',\r\n    body: requestData,\r\n    credentials: handleCors ? undefined : 'include',\r\n  });\r\n  const responseBody = await response.text();\r\n  return JSON.parse(responseBody);\r\n}\r\n\r\n/**\r\n * Retrieves ancestors from WikiTree for the given person ID.\r\n * Uses sessionStorage for caching responses.\r\n */\r\nasync function getAncestors(\r\n  key: string,\r\n  handleCors: boolean,\r\n): Promise<Person[]> {\r\n  const cacheKey = `wikitree:ancestors:${key}`;\r\n  const cachedData = getSessionStorageItem(cacheKey);\r\n  if (cachedData) {\r\n    return JSON.parse(cachedData);\r\n  }\r\n  const response = await wikiTreeGet(\r\n    {\r\n      action: 'getAncestors',\r\n      key: key,\r\n      fields: '*',\r\n    },\r\n    handleCors,\r\n  );\r\n  const result = response[0].ancestors as Person[];\r\n  setSessionStorageItem(cacheKey, JSON.stringify(result));\r\n  return result;\r\n}\r\n\r\n/**\r\n * Retrieves relatives from WikiTree for the given array of person IDs.\r\n * Uses sessionStorage for caching responses.\r\n */\r\nasync function getRelatives(\r\n  keys: string[],\r\n  handleCors: boolean,\r\n): Promise<Person[]> {\r\n  const result: Person[] = [];\r\n  const keysToFetch: string[] = [];\r\n  keys.forEach((key) => {\r\n    const cachedData = getSessionStorageItem(`wikitree:relatives:${key}`);\r\n    if (cachedData) {\r\n      result.push(JSON.parse(cachedData));\r\n    } else {\r\n      keysToFetch.push(key);\r\n    }\r\n  });\r\n  if (keysToFetch.length === 0) {\r\n    return result;\r\n  }\r\n  const response = await wikiTreeGet(\r\n    {\r\n      action: 'getRelatives',\r\n      keys: keysToFetch.join(','),\r\n      getChildren: true,\r\n      getSpouses: true,\r\n    },\r\n    handleCors,\r\n  );\r\n  if (response[0].items === null) {\r\n    const id = keysToFetch[0];\r\n    throw new TopolaError(\r\n      'WIKITREE_PROFILE_NOT_FOUND',\r\n      `WikiTree profile ${id} not found`,\r\n      {id},\r\n    );\r\n  }\r\n  const fetchedResults = response[0].items.map(\r\n    (x: {person: Person}) => x.person,\r\n  ) as Person[];\r\n  fetchedResults.forEach((person) => {\r\n    setSessionStorageItem(\r\n      `wikitree:relatives:${person.Name}`,\r\n      JSON.stringify(person),\r\n    );\r\n  });\r\n  return result.concat(fetchedResults);\r\n}\r\n\r\nexport async function clientLogin(\r\n  authcode: string,\r\n): Promise<ClientLoginResponse> {\r\n  const response = await wikiTreeGet(\r\n    {\r\n      action: 'clientLogin',\r\n      authcode,\r\n    },\r\n    false,\r\n  );\r\n  return response.clientLogin;\r\n}\r\n\r\n/**\r\n * Returnes the logged in user name or undefined if not logged in.\r\n *\r\n * This is not an authoritative answer. The result of this function relies on\r\n * the cookies set on the apps.wikitree.com domain under which this application\r\n * is hosted. The authoritative source of login information is in cookies set on\r\n * the api.wikitree.com domain.\r\n */\r\nexport function getLoggedInUserName(): string | undefined {\r\n  return Cookies.get(USER_NAME_COOKIE);\r\n}\r\n\r\n/**\r\n * Loads data from WikiTree to populate an hourglass chart starting from the\r\n * given person ID.\r\n */\r\nexport async function loadWikiTree(\r\n  key: string,\r\n  intl: IntlShape,\r\n  authcode?: string,\r\n): Promise<TopolaData> {\r\n  // Work around CORS if not in apps.wikitree.com domain.\r\n  const handleCors = window.location.hostname !== 'apps.wikitree.com';\r\n\r\n  if (!handleCors && !getLoggedInUserName() && authcode) {\r\n    const loginResult = await clientLogin(authcode);\r\n    if (loginResult.result === 'Success') {\r\n      sessionStorage.clear();\r\n      Cookies.set(USER_NAME_COOKIE, loginResult.username);\r\n    }\r\n  }\r\n\r\n  const everyone: Person[] = [];\r\n\r\n  // Fetch the ancestors of the input person and ancestors of his/her spouses.\r\n  const firstPerson = await getRelatives([key], handleCors);\r\n  if (!firstPerson[0].Name) {\r\n    const id = key;\r\n    throw new TopolaError(\r\n      'WIKITREE_PROFILE_NOT_ACCESSIBLE',\r\n      `WikiTree profile ${id} is not accessible. Try logging in.`,\r\n      {id},\r\n    );\r\n  }\r\n\r\n  const spouseKeys = Object.values(firstPerson[0].Spouses || {}).map(\r\n    (s) => s.Name,\r\n  );\r\n  const ancestors = await Promise.all(\r\n    [key]\r\n      .concat(spouseKeys)\r\n      .map((personId) => getAncestors(personId, handleCors)),\r\n  );\r\n  const ancestorKeys = ancestors\r\n    .flat()\r\n    .map((person) => person.Name)\r\n    .filter((key) => !!key);\r\n  const ancestorDetails = await getRelatives(ancestorKeys, handleCors);\r\n\r\n  // Map from person id to father id if the father profile is private.\r\n  const privateFathers: Map<number, number> = new Map();\r\n  // Map from person id to mother id if the mother profile is private.\r\n  const privateMothers: Map<number, number> = new Map();\r\n\r\n  // Andujst private individual ids so that there are no collisions in the case\r\n  // that ancestors were collected for more than one person.\r\n  ancestors.forEach((ancestorList, index) => {\r\n    const offset = 1000 * index;\r\n    // Adjust ids by offset.\r\n    ancestorList.forEach((person) => {\r\n      if (person.Id < 0) {\r\n        person.Id -= offset;\r\n        person.Name = `${PRIVATE_ID_PREFIX}${person.Id}`;\r\n      }\r\n      if (person.Father < 0) {\r\n        person.Father -= offset;\r\n        privateFathers.set(person.Id, person.Father);\r\n      }\r\n      if (person.Mother < 0) {\r\n        person.Mother -= offset;\r\n        privateMothers.set(person.Id, person.Mother);\r\n      }\r\n    });\r\n  });\r\n\r\n  // Set the Father and Mother fields again because getRelatives doesn't return\r\n  // private parents.\r\n  ancestorDetails.forEach((person) => {\r\n    const privateFather = privateFathers.get(person.Id);\r\n    if (privateFather) {\r\n      person.Father = privateFather;\r\n    }\r\n    const privateMother = privateMothers.get(person.Id);\r\n    if (privateMother) {\r\n      person.Mother = privateMother;\r\n    }\r\n  });\r\n  everyone.push(...ancestorDetails);\r\n\r\n  // Collect private individuals.\r\n  const privateAncestors = ancestors.flat().filter((person) => person.Id < 0);\r\n  everyone.push(...privateAncestors);\r\n\r\n  // Limit the number of generations of descendants because there may be tens of\r\n  // generations for some profiles.\r\n  const descendantGenerationLimit = 5;\r\n\r\n  // Fetch descendants recursively.\r\n  let toFetch = [key];\r\n  let generation = 0;\r\n  while (toFetch.length > 0 && generation <= descendantGenerationLimit) {\r\n    const people = await getRelatives(toFetch, handleCors);\r\n    everyone.push(...people);\r\n    const allSpouses = people.flatMap((person) =>\r\n      Object.values(person.Spouses || {}),\r\n    );\r\n    everyone.push(...allSpouses);\r\n    // Fetch all children.\r\n    toFetch = people.flatMap((person) =>\r\n      Object.values(person.Children).map((c) => c.Name),\r\n    );\r\n    generation++;\r\n  }\r\n\r\n  // Map from person id to the set of families where they are a spouse.\r\n  const families = new Map<number, Set<string>>();\r\n  // Map from family id to the set of children.\r\n  const children = new Map<string, Set<number>>();\r\n  // Map from famliy id to the spouses.\r\n  const spouses = new Map<\r\n    string,\r\n    {wife?: number; husband?: number; spouse?: Person}\r\n  >();\r\n  // Map from numerical id to human-readable id.\r\n  const idToName = new Map<number, string>();\r\n\r\n  everyone.forEach((person) => {\r\n    idToName.set(person.Id, person.Name);\r\n    if (person.Mother || person.Father) {\r\n      const famId = getFamilyId(person.Mother, person.Father);\r\n      getSet(families, person.Mother).add(famId);\r\n      getSet(families, person.Father).add(famId);\r\n      getSet(children, famId).add(person.Id);\r\n      spouses.set(famId, {\r\n        wife: person.Mother || undefined,\r\n        husband: person.Father || undefined,\r\n      });\r\n    }\r\n  });\r\n\r\n  const indis: JsonIndi[] = [];\r\n  const converted = new Set<number>();\r\n  everyone.forEach((person) => {\r\n    if (converted.has(person.Id)) {\r\n      return;\r\n    }\r\n    converted.add(person.Id);\r\n    const indi = convertPerson(person, intl);\r\n    if (person.Spouses) {\r\n      Object.values(person.Spouses).forEach((spouse) => {\r\n        const famId = getFamilyId(person.Id, spouse.Id);\r\n        getSet(families, person.Id).add(famId);\r\n        getSet(families, spouse.Id).add(famId);\r\n        const familySpouses =\r\n          person.Gender === 'Male'\r\n            ? {wife: spouse.Id, husband: person.Id, spouse}\r\n            : {wife: person.Id, husband: spouse.Id, spouse};\r\n        spouses.set(famId, familySpouses);\r\n      });\r\n    }\r\n    indi.fams = Array.from(getSet(families, person.Id));\r\n    indis.push(indi);\r\n  });\r\n\r\n  const fams = Array.from(spouses.entries()).map(([key, value]) => {\r\n    const fam: JsonFam = {\r\n      id: key,\r\n    };\r\n    const wife = value.wife && idToName.get(value.wife);\r\n    if (wife) {\r\n      fam.wife = wife;\r\n    }\r\n    const husband = value.husband && idToName.get(value.husband);\r\n    if (husband) {\r\n      fam.husb = husband;\r\n    }\r\n    fam.children = Array.from(getSet(children, key)).map(\r\n      (child) => idToName.get(child)!,\r\n    );\r\n    if (\r\n      value.spouse &&\r\n      ((value.spouse.marriage_date &&\r\n        value.spouse.marriage_date !== '0000-00-00') ||\r\n        value.spouse.marriage_location)\r\n    ) {\r\n      const parsedDate = parseDate(value.spouse.marriage_date);\r\n      fam.marriage = Object.assign({}, parsedDate, {\r\n        place: value.spouse.marriage_location,\r\n      });\r\n    }\r\n    return fam;\r\n  });\r\n\r\n  const chartData = normalizeGedcom({indis, fams});\r\n  const gedcom = buildGedcom(indis);\r\n  return {chartData, gedcom};\r\n}\r\n\r\n/** Creates a family identifier given 2 spouse identifiers. */\r\nfunction getFamilyId(spouse1: number, spouse2: number) {\r\n  if (spouse2 > spouse1) {\r\n    return `${spouse1}_${spouse2}`;\r\n  }\r\n  return `${spouse2}_${spouse1}`;\r\n}\r\n\r\nfunction convertPerson(person: Person, intl: IntlShape): JsonIndi {\r\n  const indi: JsonIndi = {\r\n    id: person.Name,\r\n  };\r\n  if (person.Name.startsWith(PRIVATE_ID_PREFIX)) {\r\n    indi.hideId = true;\r\n    indi.firstName = intl.formatMessage({\r\n      id: 'wikitree.private',\r\n      defaultMessage: 'Private',\r\n    });\r\n  }\r\n  if (person.FirstName && person.FirstName !== 'Unknown') {\r\n    indi.firstName = person.FirstName;\r\n  } else if (person.RealName && person.RealName !== 'Unknown') {\r\n    indi.firstName = person.RealName;\r\n  }\r\n  if (person.LastNameAtBirth !== 'Unknown') {\r\n    indi.lastName = person.LastNameAtBirth;\r\n  }\r\n  if (person.Mother || person.Father) {\r\n    indi.famc = getFamilyId(person.Mother, person.Father);\r\n  }\r\n  if (person.Gender === 'Male') {\r\n    indi.sex = 'M';\r\n  } else if (person.Gender === 'Female') {\r\n    indi.sex = 'F';\r\n  }\r\n  if (\r\n    (person.BirthDate && person.BirthDate !== '0000-00-00') ||\r\n    person.BirthLocation ||\r\n    person.BirthDateDecade !== 'unknown'\r\n  ) {\r\n    const parsedDate = parseDate(\r\n      person.BirthDate,\r\n      person.DataStatus && person.DataStatus.BirthDate,\r\n    );\r\n    const date = parsedDate || parseDecade(person.BirthDateDecade);\r\n    indi.birth = Object.assign({}, date, {place: person.BirthLocation});\r\n  }\r\n  if (\r\n    (person.DeathDate && person.DeathDate !== '0000-00-00') ||\r\n    person.DeathLocation ||\r\n    person.DeathDateDecade !== 'unknown'\r\n  ) {\r\n    const parsedDate = parseDate(\r\n      person.DeathDate,\r\n      person.DataStatus && person.DataStatus.DeathDate,\r\n    );\r\n    const date = parsedDate || parseDecade(person.DeathDateDecade);\r\n    indi.death = Object.assign({}, date, {place: person.DeathLocation});\r\n  }\r\n  if (person.PhotoData) {\r\n    indi.images = [{url: `https://www.wikitree.com${person.PhotoData.url}`}];\r\n  }\r\n  return indi;\r\n}\r\n\r\n/**\r\n * Parses a date in the format returned by WikiTree and converts in to\r\n * the format defined by Topola.\r\n */\r\nfunction parseDate(date: string, dataStatus?: string): DateOrRange | undefined {\r\n  if (!date) {\r\n    return undefined;\r\n  }\r\n  const matchedDate = date.match(/(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)/);\r\n  if (!matchedDate) {\r\n    return {date: {text: date}};\r\n  }\r\n  const parsedDate: Date = {};\r\n  if (matchedDate[1] !== '0000') {\r\n    parsedDate.year = ~~matchedDate[1];\r\n  }\r\n  if (matchedDate[2] !== '00') {\r\n    parsedDate.month = ~~matchedDate[2];\r\n  }\r\n  if (matchedDate[3] !== '00') {\r\n    parsedDate.day = ~~matchedDate[3];\r\n  }\r\n  if (dataStatus === 'after') {\r\n    return {dateRange: {from: parsedDate}};\r\n  }\r\n  if (dataStatus === 'before') {\r\n    return {dateRange: {to: parsedDate}};\r\n  }\r\n  if (dataStatus === 'guess') {\r\n    parsedDate.qualifier = 'abt';\r\n  }\r\n  return {date: parsedDate};\r\n}\r\n\r\nfunction parseDecade(decade: string): DateOrRange | undefined {\r\n  return decade !== 'unknown' ? {date: {text: decade}} : undefined;\r\n}\r\n\r\n/**\r\n * Creates a GEDCOM structure for the purpose of displaying the details\r\n * panel.\r\n */\r\nfunction buildGedcom(indis: JsonIndi[]): GedcomData {\r\n  const gedcomIndis: {[key: string]: GedcomEntry} = {};\r\n  indis.forEach((indi) => {\r\n    // WikiTree URLs replace spaces with underscores.\r\n    const escapedId = indi.id.replace(/ /g, '_');\r\n    gedcomIndis[indi.id] = {\r\n      level: 0,\r\n      pointer: `@${indi.id}@`,\r\n      tag: 'INDI',\r\n      data: '',\r\n      tree: [\r\n        {\r\n          level: 1,\r\n          pointer: '',\r\n          tag: 'NAME',\r\n          data: `${indi.firstName || ''} /${indi.lastName || ''}/`,\r\n          tree: [],\r\n        },\r\n      ],\r\n    };\r\n    if (!indi.id.startsWith('~')) {\r\n      gedcomIndis[indi.id].tree.push({\r\n        level: 1,\r\n        pointer: '',\r\n        tag: 'WWW',\r\n        data: `https://www.wikitree.com/wiki/${escapedId}`,\r\n        tree: [],\r\n      });\r\n    }\r\n  });\r\n\r\n  return {\r\n    head: {level: 0, pointer: '', tag: 'HEAD', data: '', tree: []},\r\n    indis: gedcomIndis,\r\n    fams: {},\r\n    other: {},\r\n  };\r\n}\r\n\r\n/**\r\n * Returns a set which is a value from a SetMultimap. If the key doesn't exist,\r\n * an empty set is added to the map.\r\n */\r\nfunction getSet<K, V>(map: Map<K, Set<V>>, key: K): Set<V> {\r\n  const set = map.get(key);\r\n  if (set) {\r\n    return set;\r\n  }\r\n  const newSet = new Set<V>();\r\n  map.set(key, newSet);\r\n  return newSet;\r\n}\r\n\r\nexport interface WikiTreeSourceSpec {\r\n  source: DataSourceEnum.WIKITREE;\r\n  authcode?: string;\r\n}\r\n\r\n/** Loading data from the WikiTree API. */\r\nexport class WikiTreeDataSource implements DataSource<WikiTreeSourceSpec> {\r\n  constructor(private intl: IntlShape) {}\r\n\r\n  isNewData(\r\n    newSource: SourceSelection<WikiTreeSourceSpec>,\r\n    oldSource: SourceSelection<WikiTreeSourceSpec>,\r\n    data?: TopolaData,\r\n  ): boolean {\r\n    if (!newSource.selection) {\r\n      return false;\r\n    }\r\n    if (oldSource.selection?.id === newSource.selection.id) {\r\n      // Selection unchanged -> don't reload.\r\n      return false;\r\n    }\r\n    if (\r\n      data &&\r\n      data.chartData.indis.some((indi) => indi.id === newSource.selection?.id)\r\n    ) {\r\n      // New selection exists in current view -> animate instead of reloading.\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async loadData(\r\n    source: SourceSelection<WikiTreeSourceSpec>,\r\n  ): Promise<TopolaData> {\r\n    if (!source.selection) {\r\n      throw new TopolaError(\r\n        'WIKITREE_ID_NOT_PROVIDED',\r\n        'WikiTree id needs to be provided',\r\n      );\r\n    }\r\n    try {\r\n      const data = await loadWikiTree(\r\n        source.selection.id,\r\n        this.intl,\r\n        source.spec.authcode,\r\n      );\r\n      analyticsEvent('wikitree_loaded');\r\n      return data;\r\n    } catch (error) {\r\n      analyticsEvent('wikitree_error');\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import * as queryString from 'query-string';\r\nimport * as React from 'react';\r\nimport wikitreeLogo from './wikitree.png';\r\nimport {analyticsEvent} from '../util/analytics';\r\nimport {FormattedMessage, injectIntl, WrappedComponentProps} from 'react-intl';\r\nimport {getLoggedInUserName} from '../datasource/wikitree';\r\nimport {MenuItem, MenuType} from './menu_item';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\nimport {Header, Button, Modal, Input, Form, Ref} from 'semantic-ui-react';\r\n\r\nenum WikiTreeLoginState {\r\n  UNKNOWN,\r\n  NOT_LOGGED_IN,\r\n  LOGGED_IN,\r\n}\r\n\r\ninterface Props {\r\n  menuType: MenuType;\r\n}\r\n\r\ninterface State {\r\n  dialogOpen: boolean;\r\n  wikiTreeId?: string;\r\n}\r\n\r\n/** Displays and handles the \"Select WikiTree ID\" menu. */\r\nexport class WikiTreeMenu extends React.Component<\r\n  RouteComponentProps & Props,\r\n  State\r\n> {\r\n  state: State = {\r\n    dialogOpen: false,\r\n  };\r\n\r\n  inputRef: React.RefObject<HTMLElement> = React.createRef();\r\n\r\n  private openDialog() {\r\n    this.setState(Object.assign({}, this.state, {dialogOpen: true}), () =>\r\n      (this.inputRef.current!.firstChild as HTMLInputElement).focus(),\r\n    );\r\n  }\r\n\r\n  /** Cancels any of the open dialogs. */\r\n  private handleClose() {\r\n    this.setState(\r\n      Object.assign({}, this.state, {\r\n        dialogOpen: false,\r\n      }),\r\n    );\r\n  }\r\n\r\n  /** Select button clicked in the \"Select WikiTree ID\" dialog. */\r\n  private handleSelectId() {\r\n    this.setState(\r\n      Object.assign({}, this.state, {\r\n        dialogOpen: false,\r\n      }),\r\n    );\r\n    if (this.state.wikiTreeId) {\r\n      analyticsEvent('wikitree_id_selected');\r\n      const search = queryString.parse(this.props.location.search);\r\n      const standalone =\r\n        search.standalone !== undefined ? search.standalone : true;\r\n      this.props.history.push({\r\n        pathname: '/view',\r\n        search: queryString.stringify({\r\n          indi: this.state.wikiTreeId,\r\n          source: 'wikitree',\r\n          standalone,\r\n        }),\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Called when the WikiTree ID input is typed into. */\r\n  private handleIdChange(value: string) {\r\n    this.setState(\r\n      Object.assign({}, this.state, {\r\n        wikiTreeId: value,\r\n      }),\r\n    );\r\n  }\r\n\r\n  private enterId(event: React.MouseEvent, id: string) {\r\n    event.preventDefault(); // Do not follow link in href.\r\n    (this.inputRef.current!.firstChild as HTMLInputElement).value = id;\r\n    this.handleIdChange(id);\r\n    (this.inputRef.current!.firstChild as HTMLInputElement).focus();\r\n  }\r\n\r\n  private wikiTreeIdModal() {\r\n    return (\r\n      <Modal\r\n        open={this.state.dialogOpen}\r\n        onClose={() => this.handleClose()}\r\n        centered={false}\r\n      >\r\n        <Header>\r\n          <img\r\n            src={wikitreeLogo}\r\n            alt=\"WikiTree logo\"\r\n            style={{width: '32px', height: '32px'}}\r\n          />\r\n          <FormattedMessage\r\n            id=\"select_wikitree_id.title\"\r\n            defaultMessage=\"Select WikiTree ID\"\r\n          />\r\n        </Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={() => this.handleSelectId()}>\r\n            <p>\r\n              <FormattedMessage\r\n                id=\"select_wikitree_id.comment\"\r\n                defaultMessage={\r\n                  'Enter a {wikiTreeLink} profile ID. Examples: {example1}, {example2}.'\r\n                }\r\n                values={{\r\n                  wikiTreeLink: (\r\n                    <a\r\n                      href=\"https://wikitree.com/\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      WikiTree\r\n                    </a>\r\n                  ),\r\n                  example1: (\r\n                    <span\r\n                      onClick={(e) => this.enterId(e, 'Wojtyla-13')}\r\n                      className=\"link-span\"\r\n                    >\r\n                      Wojtyla-13\r\n                    </span>\r\n                  ),\r\n                  example2: (\r\n                    <span\r\n                      onClick={(e) => this.enterId(e, 'Skłodowska-2')}\r\n                      className=\"link-span\"\r\n                    >\r\n                      Skłodowska-2\r\n                    </span>\r\n                  ),\r\n                }}\r\n              />\r\n            </p>\r\n            <Ref innerRef={this.inputRef}>\r\n              <Input\r\n                fluid\r\n                onChange={(e, data) => this.handleIdChange(data.value)}\r\n              />\r\n            </Ref>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button secondary onClick={() => this.handleClose()}>\r\n            <FormattedMessage\r\n              id=\"select_wikitree_id.cancel\"\r\n              defaultMessage=\"Cancel\"\r\n            />\r\n          </Button>\r\n          <Button primary onClick={() => this.handleSelectId()}>\r\n            <FormattedMessage\r\n              id=\"select_wikitree_id.load\"\r\n              defaultMessage=\"Load\"\r\n            />\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MenuItem\r\n          menuType={this.props.menuType}\r\n          onClick={() => this.openDialog()}\r\n        >\r\n          <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\r\n          <FormattedMessage\r\n            id=\"menu.select_wikitree_id\"\r\n            defaultMessage=\"Select WikiTree ID\"\r\n          />\r\n        </MenuItem>\r\n        {this.wikiTreeIdModal()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\ninterface LoginState {\r\n  wikiTreeLoginState: WikiTreeLoginState;\r\n  wikiTreeLoginUsername?: string;\r\n}\r\n\r\n/** Displays and handles the \"Log in to WikiTree\" menu. */\r\nclass WikiTreeLoginMenuComponent extends React.Component<\r\n  RouteComponentProps & WrappedComponentProps & Props,\r\n  LoginState\r\n> {\r\n  state: LoginState = {\r\n    wikiTreeLoginState: WikiTreeLoginState.UNKNOWN,\r\n  };\r\n\r\n  wikiTreeLoginFormRef: React.RefObject<HTMLFormElement> = React.createRef();\r\n  wikiTreeReturnUrlRef: React.RefObject<HTMLInputElement> = React.createRef();\r\n\r\n  /**\r\n   * Redirect to the WikiTree Apps login page with a return URL pointing to\r\n   * Topola Viewer hosted on apps.wikitree.com.\r\n   */\r\n  private wikiTreeLogin() {\r\n    const wikiTreeTopolaUrl =\r\n      'https://apps.wikitree.com/apps/wiech13/topola-viewer';\r\n    // Append '&' because the login page appends '?authcode=...' to this URL.\r\n    // TODO: remove ?authcode if it is in the current URL.\r\n    const returnUrl = `${wikiTreeTopolaUrl}${window.location.hash}&`;\r\n    this.wikiTreeReturnUrlRef.current!.value = returnUrl;\r\n    this.wikiTreeLoginFormRef.current!.submit();\r\n  }\r\n\r\n  private checkWikiTreeLoginState() {\r\n    const wikiTreeLoginUsername = getLoggedInUserName();\r\n    const wikiTreeLoginState = wikiTreeLoginUsername\r\n      ? WikiTreeLoginState.LOGGED_IN\r\n      : WikiTreeLoginState.NOT_LOGGED_IN;\r\n    if (this.state.wikiTreeLoginState !== wikiTreeLoginState) {\r\n      this.setState(\r\n        Object.assign({}, this.state, {\r\n          wikiTreeLoginState,\r\n          wikiTreeLoginUsername,\r\n        }),\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkWikiTreeLoginState();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkWikiTreeLoginState();\r\n  }\r\n\r\n  render() {\r\n    switch (this.state.wikiTreeLoginState) {\r\n      case WikiTreeLoginState.NOT_LOGGED_IN:\r\n        return (\r\n          <>\r\n            <MenuItem\r\n              menuType={this.props.menuType}\r\n              onClick={() => this.wikiTreeLogin()}\r\n            >\r\n              <img\r\n                src={wikitreeLogo}\r\n                alt=\"WikiTree logo\"\r\n                className=\"menu-icon\"\r\n              />\r\n              <FormattedMessage\r\n                id=\"menu.wikitree_login\"\r\n                defaultMessage=\"Log in to WikiTree\"\r\n              />\r\n            </MenuItem>\r\n            <form\r\n              action=\"https://api.wikitree.com/api.php\"\r\n              method=\"POST\"\r\n              style={{display: 'hidden'}}\r\n              ref={this.wikiTreeLoginFormRef}\r\n            >\r\n              <input type=\"hidden\" name=\"action\" value=\"clientLogin\" />\r\n              <input\r\n                type=\"hidden\"\r\n                name=\"returnURL\"\r\n                ref={this.wikiTreeReturnUrlRef}\r\n              />\r\n            </form>\r\n          </>\r\n        );\r\n\r\n      case WikiTreeLoginState.LOGGED_IN:\r\n        const tooltip = this.state.wikiTreeLoginUsername\r\n          ? this.props.intl.formatMessage(\r\n              {\r\n                id: 'menu.wikitree_popup_username',\r\n                defaultMessage: 'Logged in to WikiTree as {username}',\r\n              },\r\n              {username: this.state.wikiTreeLoginUsername},\r\n            )\r\n          : this.props.intl.formatMessage({\r\n              id: 'menu.wikitree_popup',\r\n              defaultMessage: 'Logged in to WikiTree',\r\n            });\r\n        return (\r\n          <MenuItem menuType={this.props.menuType} title={tooltip}>\r\n            <img src={wikitreeLogo} alt=\"WikiTree logo\" className=\"menu-icon\" />\r\n            <FormattedMessage\r\n              id=\"menu.wikitree_logged_in\"\r\n              defaultMessage=\"Logged in\"\r\n            />\r\n          </MenuItem>\r\n        );\r\n    }\r\n    return null;\r\n  }\r\n}\r\nexport const WikiTreeLoginMenu = injectIntl(WikiTreeLoginMenuComponent);\r\n","import * as queryString from 'query-string';\r\nimport * as React from 'react';\r\nimport {Dropdown, Icon, Menu} from 'semantic-ui-react';\r\nimport {FormattedMessage} from 'react-intl';\r\nimport {IndiInfo, JsonGedcomData} from 'topola';\r\nimport {Link} from 'react-router-dom';\r\nimport {Media} from '../util/media';\r\nimport {MenuType} from './menu_item';\r\nimport {RouteComponentProps} from 'react-router-dom';\r\nimport {SearchBar} from './search';\r\nimport {UploadMenu} from './upload_menu';\r\nimport {UrlMenu} from './url_menu';\r\nimport {WikiTreeLoginMenu, WikiTreeMenu} from './wikitree_menu';\r\n\r\nenum ScreenSize {\r\n  LARGE,\r\n  SMALL,\r\n}\r\n\r\ninterface EventHandlers {\r\n  onSelection: (indiInfo: IndiInfo) => void;\r\n  onPrint: () => void;\r\n  onDownloadPdf: () => void;\r\n  onDownloadPng: () => void;\r\n  onDownloadSvg: () => void;\r\n}\r\n\r\ninterface Props {\r\n  /** True if the application is currently showing a chart. */\r\n  showingChart: boolean;\r\n  /** Data used for the search index. */\r\n  data?: JsonGedcomData;\r\n  standalone: boolean;\r\n  /** Whether to show the \"All relatives\" chart type in the menu. */\r\n  allowAllRelativesChart: boolean;\r\n  eventHandlers: EventHandlers;\r\n  /** Whether to show additional WikiTree menus. */\r\n  showWikiTreeMenus: boolean;\r\n}\r\n\r\nexport class TopBar extends React.Component<RouteComponentProps & Props> {\r\n  private changeView(view: string) {\r\n    const location = this.props.location;\r\n    const search = queryString.parse(location.search);\r\n    if (search.view !== view) {\r\n      search.view = view;\r\n      location.search = queryString.stringify(search);\r\n      this.props.history.push(location);\r\n    }\r\n  }\r\n\r\n  private chartMenus(screenSize: ScreenSize) {\r\n    if (!this.props.showingChart) {\r\n      return null;\r\n    }\r\n    const chartTypeItems = (\r\n      <>\r\n        <Dropdown.Item onClick={() => this.changeView('hourglass')}>\r\n          <Icon name=\"hourglass\" />\r\n          <FormattedMessage\r\n            id=\"menu.hourglass\"\r\n            defaultMessage=\"Hourglass chart\"\r\n          />\r\n        </Dropdown.Item>\r\n        {this.props.allowAllRelativesChart ? (\r\n          <Dropdown.Item onClick={() => this.changeView('relatives')}>\r\n            <Icon name=\"users\" />\r\n            <FormattedMessage\r\n              id=\"menu.relatives\"\r\n              defaultMessage=\"All relatives\"\r\n            />\r\n          </Dropdown.Item>\r\n        ) : null}\r\n        <Dropdown.Item onClick={() => this.changeView('fancy')}>\r\n          <Icon name=\"users\" />\r\n          <FormattedMessage\r\n            id=\"menu.fancy\"\r\n            defaultMessage=\"Very Fancy tree (experimental)\"\r\n          />\r\n        </Dropdown.Item>\r\n      </>\r\n    );\r\n    switch (screenSize) {\r\n      case ScreenSize.LARGE:\r\n        return (\r\n          <>\r\n            <Menu.Item onClick={() => this.props.eventHandlers.onPrint()}>\r\n              <Icon name=\"print\" />\r\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\r\n            </Menu.Item>\r\n\r\n            <Dropdown\r\n              trigger={\r\n                <div>\r\n                  <Icon name=\"download\" />\r\n                  <FormattedMessage\r\n                    id=\"menu.download\"\r\n                    defaultMessage=\"Download\"\r\n                  />\r\n                </div>\r\n              }\r\n              className=\"item\"\r\n            >\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  onClick={() => this.props.eventHandlers.onDownloadPdf()}\r\n                >\r\n                  <FormattedMessage\r\n                    id=\"menu.pdf_file\"\r\n                    defaultMessage=\"PDF file\"\r\n                  />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => this.props.eventHandlers.onDownloadPng()}\r\n                >\r\n                  <FormattedMessage\r\n                    id=\"menu.png_file\"\r\n                    defaultMessage=\"PNG file\"\r\n                  />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => this.props.eventHandlers.onDownloadSvg()}\r\n                >\r\n                  <FormattedMessage\r\n                    id=\"menu.svg_file\"\r\n                    defaultMessage=\"SVG file\"\r\n                  />\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Dropdown\r\n              trigger={\r\n                <div>\r\n                  <Icon name=\"eye\" />\r\n                  <FormattedMessage id=\"menu.view\" defaultMessage=\"View\" />\r\n                </div>\r\n              }\r\n              className=\"item\"\r\n            >\r\n              <Dropdown.Menu>{chartTypeItems}</Dropdown.Menu>\r\n            </Dropdown>\r\n            <SearchBar\r\n              data={this.props.data!}\r\n              onSelection={this.props.eventHandlers.onSelection}\r\n              {...this.props}\r\n            />\r\n          </>\r\n        );\r\n\r\n      case ScreenSize.SMALL:\r\n        return (\r\n          <>\r\n            <Dropdown.Item onClick={() => this.props.eventHandlers.onPrint()}>\r\n              <Icon name=\"print\" />\r\n              <FormattedMessage id=\"menu.print\" defaultMessage=\"Print\" />\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n\r\n            <Dropdown.Item\r\n              onClick={() => this.props.eventHandlers.onDownloadPdf()}\r\n            >\r\n              <Icon name=\"download\" />\r\n              <FormattedMessage\r\n                id=\"menu.download_pdf\"\r\n                defaultMessage=\"Downlod PDF\"\r\n              />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => this.props.eventHandlers.onDownloadPng()}\r\n            >\r\n              <Icon name=\"download\" />\r\n              <FormattedMessage\r\n                id=\"menu.download_png\"\r\n                defaultMessage=\"Download PNG\"\r\n              />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              onClick={() => this.props.eventHandlers.onDownloadSvg()}\r\n            >\r\n              <Icon name=\"download\" />\r\n              <FormattedMessage\r\n                id=\"menu.download_svg\"\r\n                defaultMessage=\"Download SVG\"\r\n              />\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            {chartTypeItems}\r\n            <Dropdown.Divider />\r\n          </>\r\n        );\r\n    }\r\n  }\r\n\r\n  private title() {\r\n    return (\r\n      <Menu.Item>\r\n        <b>Topola Genealogy</b>\r\n      </Menu.Item>\r\n    );\r\n  }\r\n\r\n  private fileMenus(screenSize: ScreenSize) {\r\n    // In standalone WikiTree mode, show only the \"Select WikiTree ID\" menu.\r\n    if (!this.props.standalone && this.props.showWikiTreeMenus) {\r\n      switch (screenSize) {\r\n        case ScreenSize.LARGE:\r\n          return <WikiTreeMenu menuType={MenuType.Menu} {...this.props} />;\r\n        case ScreenSize.SMALL:\r\n          return (\r\n            <>\r\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\r\n              <Dropdown.Divider />\r\n            </>\r\n          );\r\n      }\r\n    }\r\n\r\n    // Don't show \"open\" menus in non-standalone mode.\r\n    if (!this.props.standalone) {\r\n      return null;\r\n    }\r\n\r\n    switch (screenSize) {\r\n      case ScreenSize.LARGE:\r\n        // Show dropdown if chart is shown, otherwise show individual menu\r\n        // items.\r\n        const menus = this.props.showingChart ? (\r\n          <Dropdown\r\n            trigger={\r\n              <div>\r\n                <Icon name=\"folder open\" />\r\n                <FormattedMessage id=\"menu.open\" defaultMessage=\"Open\" />\r\n              </div>\r\n            }\r\n            className=\"item\"\r\n          >\r\n            <Dropdown.Menu>\r\n              <UploadMenu menuType={MenuType.Dropdown} {...this.props} />\r\n              <UrlMenu menuType={MenuType.Dropdown} {...this.props} />\r\n              <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        ) : (\r\n          <>\r\n            <UploadMenu menuType={MenuType.Menu} {...this.props} />\r\n            <UrlMenu menuType={MenuType.Menu} {...this.props} />\r\n            <WikiTreeMenu menuType={MenuType.Menu} {...this.props} />\r\n          </>\r\n        );\r\n        return menus;\r\n\r\n      case ScreenSize.SMALL:\r\n        return (\r\n          <>\r\n            <UploadMenu menuType={MenuType.Dropdown} {...this.props} />\r\n            <UrlMenu menuType={MenuType.Dropdown} {...this.props} />\r\n            <WikiTreeMenu menuType={MenuType.Dropdown} {...this.props} />\r\n            <Dropdown.Divider />\r\n          </>\r\n        );\r\n    }\r\n  }\r\n\r\n  private wikiTreeLoginMenu(screenSize: ScreenSize) {\r\n    if (!this.props.showWikiTreeMenus) {\r\n      return null;\r\n    }\r\n    return (\r\n      <>\r\n        <WikiTreeLoginMenu\r\n          menuType={\r\n            screenSize === ScreenSize.SMALL ? MenuType.Dropdown : MenuType.Menu\r\n          }\r\n          {...this.props}\r\n        />\r\n        {screenSize === ScreenSize.SMALL ? <Dropdown.Divider /> : null}\r\n      </>\r\n    );\r\n  }\r\n\r\n  private mobileMenus() {\r\n    return (\r\n      <>\r\n        <Dropdown\r\n          trigger={\r\n            <div>\r\n              <Icon name=\"sidebar\" />\r\n            </div>\r\n          }\r\n          className=\"item\"\r\n          icon={null}\r\n        >\r\n          <Dropdown.Menu>\r\n            {this.fileMenus(ScreenSize.SMALL)}\r\n            {this.chartMenus(ScreenSize.SMALL)}\r\n            {this.wikiTreeLoginMenu(ScreenSize.SMALL)}\r\n\r\n            <Dropdown.Item\r\n              href=\"https://github.com/PeWu/topola-viewer\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <FormattedMessage\r\n                id=\"menu.github\"\r\n                defaultMessage=\"GitHub project\"\r\n              />\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        {this.props.standalone ? (\r\n          <Link to=\"/\">{this.title()}</Link>\r\n        ) : (\r\n          this.title()\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  private desktopMenus() {\r\n    return (\r\n      <>\r\n        {this.props.standalone ? <Link to=\"/\">{this.title()}</Link> : null}\r\n        {this.fileMenus(ScreenSize.LARGE)}\r\n        {this.chartMenus(ScreenSize.LARGE)}\r\n        <Menu.Menu position=\"right\">\r\n          {this.wikiTreeLoginMenu(ScreenSize.LARGE)}\r\n          <Menu.Item\r\n            href=\"https://github.com/PeWu/topola-viewer\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FormattedMessage\r\n              id=\"menu.github\"\r\n              defaultMessage=\"GitHub project\"\r\n            />\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Menu\r\n          as={Media}\r\n          at=\"large\"\r\n          attached=\"top\"\r\n          inverted\r\n          color=\"blue\"\r\n          size=\"large\"\r\n        >\r\n          {this.desktopMenus()}\r\n        </Menu>\r\n        <Menu\r\n          as={Media}\r\n          at=\"small\"\r\n          attached=\"top\"\r\n          inverted\r\n          color=\"blue\"\r\n          size=\"large\"\r\n        >\r\n          {this.mobileMenus()}\r\n        </Menu>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import * as H from 'history';\r\nimport * as queryString from 'query-string';\r\nimport * as React from 'react';\r\nimport {analyticsEvent} from './util/analytics';\r\nimport {Chart, ChartComponent, ChartType} from './chart';\r\nimport {DataSourceEnum, SourceSelection} from './datasource/data_source';\r\nimport {Details} from './details';\r\nimport {EmbeddedDataSource, EmbeddedSourceSpec} from './datasource/embedded';\r\nimport {FormattedMessage, WrappedComponentProps, injectIntl} from 'react-intl';\r\nimport {getI18nMessage} from './util/error_i18n';\r\nimport {IndiInfo} from 'topola';\r\nimport {Intro} from './intro';\r\nimport {Loader, Message, Portal} from 'semantic-ui-react';\r\nimport {Media} from './util/media';\r\nimport {Redirect, Route, RouteComponentProps, Switch} from 'react-router-dom';\r\nimport {TopBar} from './menu/top_bar';\r\nimport {TopolaData} from './util/gedcom_util';\r\nimport {\r\n  getSelection,\r\n  UploadSourceSpec,\r\n  UrlSourceSpec,\r\n  GedcomUrlDataSource,\r\n  UploadedDataSource,\r\n} from './datasource/load_data';\r\nimport {\r\n  loadWikiTree,\r\n  PRIVATE_ID_PREFIX,\r\n  WikiTreeDataSource,\r\n  WikiTreeSourceSpec,\r\n} from './datasource/wikitree';\r\n\r\n/** Shows an error message in the middle of the screen. */\r\nfunction ErrorMessage(props: {message?: string}) {\r\n  return (\r\n    <Message negative className=\"error\">\r\n      <Message.Header>\r\n        <FormattedMessage\r\n          id=\"error.failed_to_load_file\"\r\n          defaultMessage={'Failed to load file'}\r\n        />\r\n      </Message.Header>\r\n      <p>{props.message}</p>\r\n    </Message>\r\n  );\r\n}\r\n\r\ninterface ErrorPopupProps {\r\n  message?: string;\r\n  open: boolean;\r\n  onDismiss: () => void;\r\n}\r\n\r\n/**\r\n * Shows a dismissable error message in the bottom left corner of the screen.\r\n */\r\nfunction ErrorPopup(props: ErrorPopupProps) {\r\n  return (\r\n    <Portal open={props.open} onClose={props.onDismiss}>\r\n      <Message negative className=\"errorPopup\" onDismiss={props.onDismiss}>\r\n        <Message.Header>\r\n          <FormattedMessage id=\"error.error\" defaultMessage={'Error'} />\r\n        </Message.Header>\r\n        <p>{props.message}</p>\r\n      </Message>\r\n    </Portal>\r\n  );\r\n}\r\n\r\nenum AppState {\r\n  INITIAL,\r\n  LOADING,\r\n  ERROR,\r\n  SHOWING_CHART,\r\n  LOADING_MORE,\r\n}\r\n\r\ntype DataSourceSpec =\r\n  | UrlSourceSpec\r\n  | UploadSourceSpec\r\n  | WikiTreeSourceSpec\r\n  | EmbeddedSourceSpec;\r\n\r\n/** Arguments passed to the application, primarily through URL parameters. */\r\ninterface Arguments {\r\n  sourceSpec?: DataSourceSpec;\r\n  selection?: IndiInfo;\r\n  chartType: ChartType;\r\n  standalone: boolean;\r\n  freezeAnimation?: boolean;\r\n  showSidePanel: boolean;\r\n}\r\n\r\n/**\r\n * Retrieve arguments passed into the application through the URL and uploaded\r\n * data.\r\n */\r\nfunction getArguments(location: H.Location<any>): Arguments {\r\n  const search = queryString.parse(location.search);\r\n  const getParam = (name: string) => {\r\n    const value = search[name];\r\n    return typeof value === 'string' ? value : undefined;\r\n  };\r\n\r\n  const view = getParam('view');\r\n  const chartTypes = new Map<string | undefined, ChartType>([\r\n    ['relatives', ChartType.Relatives],\r\n    ['fancy', ChartType.Fancy],\r\n  ]);\r\n\r\n  const hash = getParam('file');\r\n  const url = getParam('url');\r\n  const embedded = getParam('embedded') === 'true'; // False by default.\r\n  var sourceSpec: DataSourceSpec | undefined = undefined;\r\n  if (getParam('source') === 'wikitree') {\r\n    sourceSpec = {\r\n      source: DataSourceEnum.WIKITREE,\r\n      authcode: getParam('?authcode'),\r\n    };\r\n  } else if (hash) {\r\n    sourceSpec = {\r\n      source: DataSourceEnum.UPLOADED,\r\n      hash,\r\n      gedcom: location.state && location.state.data,\r\n      images: location.state && location.state.images,\r\n    };\r\n  } else if (url) {\r\n    sourceSpec = {\r\n      source: DataSourceEnum.GEDCOM_URL,\r\n      url,\r\n      handleCors: getParam('handleCors') !== 'false', // True by default.\r\n    };\r\n  } else if (embedded) {\r\n    sourceSpec = {source: DataSourceEnum.EMBEDDED};\r\n  }\r\n\r\n  const indi = getParam('indi');\r\n  const parsedGen = Number(getParam('gen'));\r\n  const selection = indi\r\n    ? {id: indi, generation: !isNaN(parsedGen) ? parsedGen : 0}\r\n    : undefined;\r\n\r\n  return {\r\n    sourceSpec,\r\n    selection,\r\n    // Hourglass is the default view.\r\n    chartType: chartTypes.get(view) || ChartType.Hourglass,\r\n\r\n    showSidePanel: getParam('sidePanel') !== 'false', // True by default.\r\n    standalone: getParam('standalone') !== 'false' && !embedded,\r\n    freezeAnimation: getParam('freeze') === 'true', // False by default\r\n  };\r\n}\r\n\r\n/**\r\n * Returs true if the changes object has values that are different than those\r\n * in state.\r\n */\r\nfunction hasUpdatedValues<T>(state: T, changes: Partial<T> | undefined) {\r\n  if (!changes) {\r\n    return false;\r\n  }\r\n  return Object.entries(changes).some(\r\n    ([key, value]) => value !== undefined && state[key] !== value,\r\n  );\r\n}\r\n\r\ninterface State {\r\n  /** State of the application. */\r\n  state: AppState;\r\n  /** Loaded data. */\r\n  data?: TopolaData;\r\n  /** Selected individual. */\r\n  selection?: IndiInfo;\r\n  /** Error to display. */\r\n  error?: string;\r\n  /** Whether the side panel is shown. */\r\n  showSidePanel?: boolean;\r\n  /** Whether the app is in standalone mode, i.e. showing 'open file' menus. */\r\n  standalone: boolean;\r\n  /** Type of displayed chart. */\r\n  chartType: ChartType;\r\n  /** Whether to show the error popup. */\r\n  showErrorPopup: boolean;\r\n  /** Specification of the source of the data. */\r\n  sourceSpec?: DataSourceSpec;\r\n  /** Freeze animations after initial chart render. */\r\n  freezeAnimation?: boolean;\r\n}\r\n\r\nclass AppComponent extends React.Component<\r\n  RouteComponentProps & WrappedComponentProps,\r\n  {}\r\n> {\r\n  state: State = {\r\n    state: AppState.INITIAL,\r\n    standalone: true,\r\n    chartType: ChartType.Hourglass,\r\n    showErrorPopup: false,\r\n  };\r\n  chartRef: ChartComponent | null = null;\r\n\r\n  /** Sets the state with a new individual selection and chart type. */\r\n  private updateDisplay(\r\n    selection: IndiInfo,\r\n    otherStateChanges?: Partial<State>,\r\n  ) {\r\n    if (\r\n      !this.state.selection ||\r\n      this.state.selection.id !== selection.id ||\r\n      this.state.selection!.generation !== selection.generation ||\r\n      hasUpdatedValues(this.state, otherStateChanges)\r\n    ) {\r\n      this.setState(\r\n        Object.assign({}, this.state, {selection}, otherStateChanges),\r\n      );\r\n    }\r\n  }\r\n\r\n  /** Sets error message after data load failure. */\r\n  private setError(error: string) {\r\n    this.setState(\r\n      Object.assign({}, this.state, {\r\n        state: AppState.ERROR,\r\n        error,\r\n      }),\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.componentDidUpdate();\r\n  }\r\n\r\n  private readonly uploadedDataSource = new UploadedDataSource();\r\n  private readonly gedcomUrlDataSource = new GedcomUrlDataSource();\r\n  private readonly wikiTreeDataSource = new WikiTreeDataSource(this.props.intl);\r\n  private readonly embeddedDataSource = new EmbeddedDataSource();\r\n\r\n  private isNewData(sourceSpec: DataSourceSpec, selection?: IndiInfo) {\r\n    if (\r\n      !this.state.sourceSpec ||\r\n      this.state.sourceSpec.source !== sourceSpec.source\r\n    ) {\r\n      // New data source means new data.\r\n      return true;\r\n    }\r\n    const newSource = {spec: sourceSpec, selection};\r\n    const oldSouce = {\r\n      spec: this.state.sourceSpec,\r\n      selection: this.state.selection,\r\n    };\r\n    switch (newSource.spec.source) {\r\n      case DataSourceEnum.UPLOADED:\r\n        return this.uploadedDataSource.isNewData(\r\n          newSource as SourceSelection<UploadSourceSpec>,\r\n          oldSouce as SourceSelection<UploadSourceSpec>,\r\n          this.state.data,\r\n        );\r\n      case DataSourceEnum.GEDCOM_URL:\r\n        return this.gedcomUrlDataSource.isNewData(\r\n          newSource as SourceSelection<UrlSourceSpec>,\r\n          oldSouce as SourceSelection<UrlSourceSpec>,\r\n          this.state.data,\r\n        );\r\n      case DataSourceEnum.WIKITREE:\r\n        return this.wikiTreeDataSource.isNewData(\r\n          newSource as SourceSelection<WikiTreeSourceSpec>,\r\n          oldSouce as SourceSelection<WikiTreeSourceSpec>,\r\n          this.state.data,\r\n        );\r\n      case DataSourceEnum.EMBEDDED:\r\n        return this.embeddedDataSource.isNewData(\r\n          newSource as SourceSelection<EmbeddedSourceSpec>,\r\n          oldSouce as SourceSelection<EmbeddedSourceSpec>,\r\n          this.state.data,\r\n        );\r\n    }\r\n  }\r\n\r\n  private loadData(sourceSpec: DataSourceSpec, selection?: IndiInfo) {\r\n    switch (sourceSpec.source) {\r\n      case DataSourceEnum.UPLOADED:\r\n        return this.uploadedDataSource.loadData({spec: sourceSpec, selection});\r\n      case DataSourceEnum.GEDCOM_URL:\r\n        return this.gedcomUrlDataSource.loadData({spec: sourceSpec, selection});\r\n      case DataSourceEnum.WIKITREE:\r\n        return this.wikiTreeDataSource.loadData({spec: sourceSpec, selection});\r\n      case DataSourceEnum.EMBEDDED:\r\n        return this.embeddedDataSource.loadData({spec: sourceSpec, selection});\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    if (this.props.location.pathname !== '/view') {\r\n      if (this.state.state !== AppState.INITIAL) {\r\n        this.setState(Object.assign({}, this.state, {state: AppState.INITIAL}));\r\n      }\r\n      return;\r\n    }\r\n\r\n    const args = getArguments(this.props.location);\r\n\r\n    if (!args.sourceSpec) {\r\n      this.props.history.replace({pathname: '/'});\r\n    } else if (\r\n      this.state.state === AppState.INITIAL ||\r\n      this.isNewData(args.sourceSpec, args.selection)\r\n    ) {\r\n      // Set loading state.\r\n      this.setState(\r\n        Object.assign({}, this.state, {\r\n          state: AppState.LOADING,\r\n          sourceSpec: args.sourceSpec,\r\n          selection: args.selection,\r\n          standalone: args.standalone,\r\n          chartType: args.chartType,\r\n        }),\r\n      );\r\n      try {\r\n        const data = await this.loadData(args.sourceSpec, args.selection);\r\n        // Set state with data.\r\n        this.setState(\r\n          Object.assign({}, this.state, {\r\n            state: AppState.SHOWING_CHART,\r\n            data,\r\n            selection: getSelection(data.chartData, args.selection),\r\n            showSidePanel: args.showSidePanel,\r\n          }),\r\n        );\r\n      } catch (error) {\r\n        this.setError(getI18nMessage(error, this.props.intl));\r\n      }\r\n    } else if (\r\n      this.state.state === AppState.SHOWING_CHART ||\r\n      this.state.state === AppState.LOADING_MORE\r\n    ) {\r\n      // Update selection if it has changed in the URL.\r\n      const selection = getSelection(\r\n        this.state.data!.chartData,\r\n        args.selection,\r\n      );\r\n      const loadMoreFromWikitree =\r\n        args.sourceSpec.source === DataSourceEnum.WIKITREE &&\r\n        (!this.state.selection || this.state.selection.id !== selection.id);\r\n      this.updateDisplay(selection, {\r\n        chartType: args.chartType,\r\n        state: loadMoreFromWikitree\r\n          ? AppState.LOADING_MORE\r\n          : AppState.SHOWING_CHART,\r\n      });\r\n      if (loadMoreFromWikitree) {\r\n        try {\r\n          const data = await loadWikiTree(args.selection!.id, this.props.intl);\r\n          const selection = getSelection(data.chartData, args.selection);\r\n          this.setState(\r\n            Object.assign({}, this.state, {\r\n              state: AppState.SHOWING_CHART,\r\n              data,\r\n              selection,\r\n            }),\r\n          );\r\n        } catch (error) {\r\n          this.showErrorPopup(\r\n            this.props.intl.formatMessage(\r\n              {\r\n                id: 'error.failed_wikitree_load_more',\r\n                defaultMessage: 'Failed to load data from WikiTree. {error}',\r\n              },\r\n              {error},\r\n            ),\r\n            {state: AppState.SHOWING_CHART},\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user clicks an individual box in the chart.\r\n   * Updates the browser URL.\r\n   */\r\n  private onSelection = (selection: IndiInfo) => {\r\n    // Don't allow selecting WikiTree private profiles.\r\n    if (selection.id.startsWith(PRIVATE_ID_PREFIX)) {\r\n      return;\r\n    }\r\n    analyticsEvent('selection_changed');\r\n    const location = this.props.location;\r\n    const search = queryString.parse(location.search);\r\n    search.indi = selection.id;\r\n    search.gen = String(selection.generation);\r\n    location.search = queryString.stringify(search);\r\n    this.props.history.push(location);\r\n  };\r\n\r\n  private onPrint = () => {\r\n    analyticsEvent('print');\r\n    this.chartRef && this.chartRef.print();\r\n  };\r\n\r\n  private showErrorPopup(message: string, otherStateChanges?: Partial<State>) {\r\n    this.setState(\r\n      Object.assign(\r\n        {},\r\n        this.state,\r\n        {\r\n          showErrorPopup: true,\r\n          error: message,\r\n        },\r\n        otherStateChanges,\r\n      ),\r\n    );\r\n  }\r\n\r\n  private onDownloadPdf = async () => {\r\n    analyticsEvent('download_pdf');\r\n    try {\r\n      this.chartRef && (await this.chartRef.downloadPdf());\r\n    } catch (e) {\r\n      this.showErrorPopup(\r\n        this.props.intl.formatMessage({\r\n          id: 'error.failed_pdf',\r\n          defaultMessage:\r\n            'Failed to generate PDF file.' +\r\n            ' Please try with a smaller diagram or download an SVG file.',\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  private onDownloadPng = async () => {\r\n    analyticsEvent('download_png');\r\n    try {\r\n      this.chartRef && (await this.chartRef.downloadPng());\r\n    } catch (e) {\r\n      this.showErrorPopup(\r\n        this.props.intl.formatMessage({\r\n          id: 'error.failed_png',\r\n          defaultMessage:\r\n            'Failed to generate PNG file.' +\r\n            ' Please try with a smaller diagram or download an SVG file.',\r\n        }),\r\n      );\r\n    }\r\n  };\r\n\r\n  private onDownloadSvg = () => {\r\n    analyticsEvent('download_svg');\r\n    this.chartRef && this.chartRef.downloadSvg();\r\n  };\r\n\r\n  private onDismissErrorPopup = () => {\r\n    this.setState(\r\n      Object.assign({}, this.state, {\r\n        showErrorPopup: false,\r\n      }),\r\n    );\r\n  };\r\n\r\n  private renderMainArea = () => {\r\n    switch (this.state.state) {\r\n      case AppState.SHOWING_CHART:\r\n      case AppState.LOADING_MORE:\r\n        return (\r\n          <div id=\"content\">\r\n            <ErrorPopup\r\n              open={this.state.showErrorPopup}\r\n              message={this.state.error}\r\n              onDismiss={this.onDismissErrorPopup}\r\n            />\r\n            {this.state.state === AppState.LOADING_MORE ? (\r\n              <Loader active size=\"small\" className=\"loading-more\" />\r\n            ) : null}\r\n            <Chart\r\n              data={this.state.data!.chartData}\r\n              selection={this.state.selection!}\r\n              chartType={this.state.chartType}\r\n              onSelection={this.onSelection}\r\n              freezeAnimation={this.state.freezeAnimation}\r\n              ref={(ref) => (this.chartRef = ref)}\r\n            />\r\n            {this.state.showSidePanel ? (\r\n              <Media at=\"large\" className=\"sidePanel\">\r\n                <Details\r\n                  gedcom={this.state.data!.gedcom}\r\n                  indi={this.state.selection!.id}\r\n                />\r\n              </Media>\r\n            ) : null}\r\n          </div>\r\n        );\r\n\r\n      case AppState.ERROR:\r\n        return <ErrorMessage message={this.state.error!} />;\r\n\r\n      case AppState.INITIAL:\r\n      case AppState.LOADING:\r\n        return <Loader active size=\"large\" />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Route\r\n          render={(props: RouteComponentProps) => (\r\n            <TopBar\r\n              {...props}\r\n              data={this.state.data && this.state.data.chartData}\r\n              allowAllRelativesChart={\r\n                this.state.sourceSpec?.source !== DataSourceEnum.WIKITREE\r\n              }\r\n              showingChart={\r\n                this.props.history.location.pathname === '/view' &&\r\n                (this.state.state === AppState.SHOWING_CHART ||\r\n                  this.state.state === AppState.LOADING_MORE)\r\n              }\r\n              standalone={this.state.standalone}\r\n              eventHandlers={{\r\n                onSelection: this.onSelection,\r\n                onPrint: this.onPrint,\r\n                onDownloadPdf: this.onDownloadPdf,\r\n                onDownloadPng: this.onDownloadPng,\r\n                onDownloadSvg: this.onDownloadSvg,\r\n              }}\r\n              showWikiTreeMenus={\r\n                this.state.sourceSpec?.source === DataSourceEnum.WIKITREE\r\n              }\r\n            />\r\n          )}\r\n        />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Intro} />\r\n          <Route exact path=\"/view\" render={this.renderMainArea} />\r\n          <Redirect to={'/'} />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const App = injectIntl(AppComponent);\r\n","import {IntlShape} from 'react-intl';\r\nimport {TopolaError} from './error';\r\n\r\n/**\r\n * Returns a translated message for the given error. If the message can't be\r\n * translated, the original error.message is returned.\r\n */\r\nexport function getI18nMessage(error: Error, intl: IntlShape): string {\r\n  if (!(error instanceof TopolaError)) {\r\n    return error.message;\r\n  }\r\n  return intl.formatMessage(\r\n    {\r\n      id: `error.${error.code}`,\r\n      defaultMessage: error.message,\r\n    },\r\n    error.args,\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport messages_cs from './translations/cs.json';\r\nimport messages_de from './translations/de.json';\r\nimport messages_fr from './translations/fr.json';\r\nimport messages_it from './translations/it.json';\r\nimport messages_pl from './translations/pl.json';\r\nimport messages_ru from './translations/ru.json';\r\nimport {App} from './app';\r\nimport {detect} from 'detect-browser';\r\nimport {HashRouter as Router, Route} from 'react-router-dom';\r\nimport {IntlProvider} from 'react-intl';\r\nimport {MediaContextProvider, mediaStyles} from './util/media';\r\nimport './index.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'canvas-toBlob';\r\n\r\nconst messages = {\r\n  cs: messages_cs,\r\n  de: messages_de,\r\n  fr: messages_fr,\r\n  it: messages_it,\r\n  pl: messages_pl,\r\n  ru: messages_ru,\r\n};\r\nconst language = navigator.language && navigator.language.split(/[-_]/)[0];\r\n\r\nconst browser = detect();\r\n\r\nif (browser && browser.name === 'ie') {\r\n  ReactDOM.render(\r\n    <p>\r\n      Topola Genealogy Viewer does not support Internet Explorer. Please try a\r\n      different (modern) browser.\r\n    </p>,\r\n    document.querySelector('#root'),\r\n  );\r\n} else {\r\n  ReactDOM.render(\r\n    <IntlProvider locale={language} messages={messages[language]}>\r\n      <MediaContextProvider>\r\n        <style>{mediaStyles}</style>\r\n        <Router>\r\n          <Route component={App} />\r\n        </Router>\r\n      </MediaContextProvider>\r\n    </IntlProvider>,\r\n    document.querySelector('#root'),\r\n  );\r\n}\r\n"],"sourceRoot":""}